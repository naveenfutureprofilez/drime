{"version":3,"file":"admin-settings-9cf13e73.js","sources":["../../../common/foundation/resources/client/ui/library/forms/radio-group/radio.jsx","../../../common/foundation/resources/client/ui/library/forms/radio-group/radio-group.jsx","../../../resources/client/admin/settings/app-settings-routes.jsx","../../../common/foundation/resources/client/admin/settings/requests/use-admin-settings.jsx","../../../resources/client/admin/settings/app-settings-nav-config.jsx","../../../common/foundation/resources/client/admin/settings/settings-nav-config.jsx","../../../common/foundation/resources/client/admin/settings/admin-settings-page.jsx","../../../common/foundation/resources/client/admin/settings/requests/use-generate-sitemap.jsx","../../../common/foundation/resources/client/admin/settings/requests/use-update-admin-settings.jsx","../../../common/foundation/resources/client/admin/settings/form/settings-separator.jsx","../../../common/foundation/resources/client/admin/settings/form/settings-form-loading-indicator.jsx","../../../common/foundation/resources/client/admin/settings/form/admin-settings-form.jsx","../../../common/foundation/resources/client/admin/settings/form/learn-more-link.jsx","../../../common/foundation/resources/client/admin/settings/pages/general-settings.jsx","../../../common/foundation/resources/client/admin/settings/form/settings-error-group.jsx","../../../common/foundation/resources/client/admin/settings/form/json-chip-field.jsx","../../../common/foundation/resources/client/admin/settings/pages/subscription-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/localization-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/authentication-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.jsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.jsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.jsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.jsx","../../../common/foundation/resources/client/admin/settings/pages/uploading-settings/uploading-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/smtp-credentials.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/ses-credentials.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/postmark-credentials.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/gmail-icon.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.jsx","../../../common/foundation/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/clear-cache.jsx","../../../common/foundation/resources/client/admin/settings/pages/cache-settings/cache-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/logging-settings.jsx","../../../common/foundation/resources/client/admin/settings/requests/use-queue-stats.jsx","../../../common/foundation/resources/client/admin/settings/pages/queue-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/websocket-settings.jsx","../../../common/foundation/resources/client/admin/settings/pages/recaptcha-settings.jsx","../../../common/foundation/resources/client/ui/library/forms/input-field/file-field.jsx","../../../common/foundation/resources/client/admin/settings/pages/reports-settings.jsx","../../../common/foundation/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.jsx","../../../common/foundation/resources/client/admin/settings/pages/gdpr-settings.jsx","../../../resources/client/admin/settings/drive-settings.jsx","../../../resources/client/admin/settings/transfer-settings-page.jsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { mergeProps, useObjectRef } from '@react-aria/utils';\nimport { useController } from 'react-hook-form';\nimport { useAutoFocus } from '@ui/focus/use-auto-focus';\nexport const Radio = forwardRef((props, ref) => {\n  const {\n    children,\n    autoFocus,\n    size,\n    invalid,\n    isFirst,\n    display = 'inline-flex',\n    ...domProps\n  } = props;\n  const inputRef = useObjectRef(ref);\n  useAutoFocus({\n    autoFocus\n  }, inputRef);\n  const sizeClassNames = getSizeClassNames(size);\n  return <label className={clsx('select-none items-center gap-8 whitespace-nowrap align-middle', display, sizeClassNames.label, props.disabled && 'pointer-events-none text-disabled', props.invalid && 'text-danger')}>\n      <input type=\"radio\" className={clsx('outline-none focus-visible:ring', 'appearance-none rounded-full border-2 transition-button', 'border-text-muted checked:border-primary checked:hover:border-primary-dark disabled:border-disabled-fg', 'before:bg-primary before:hover:bg-primary-dark disabled:before:bg-disabled-fg', 'before:block before:h-full before:w-full before:scale-10 before:rounded-full before:opacity-0 before:transition before:duration-200', 'checked:before:scale-[.65] checked:before:opacity-100', sizeClassNames.circle)} ref={inputRef} {...domProps} />\n      {children && <span>{children}</span>}\n    </label>;\n});\nexport function FormRadio(props) {\n  const {\n    field: {\n      onChange,\n      onBlur,\n      value,\n      ref\n    },\n    fieldState: {\n      invalid\n    }\n  } = useController({\n    name: props.name\n  });\n  const formProps = {\n    onChange,\n    onBlur,\n    checked: props.value === value,\n    invalid: props.invalid || invalid\n  };\n  return <Radio ref={ref} {...mergeProps(formProps, props)} />;\n}\nfunction getSizeClassNames(size) {\n  switch (size) {\n    case 'xs':\n      return {\n        circle: 'h-12 w-12',\n        label: 'text-xs'\n      };\n    case 'sm':\n      return {\n        circle: 'h-16 w-16',\n        label: 'text-sm'\n      };\n    case 'lg':\n      return {\n        circle: 'h-24 w-24',\n        label: 'text-lg'\n      };\n    default:\n      return {\n        circle: 'h-20 w-20',\n        label: 'text-base'\n      };\n  }\n}","import { Children, cloneElement, forwardRef, isValidElement, useId } from 'react';\nimport clsx from 'clsx';\nimport { useController } from 'react-hook-form';\nimport { getInputFieldClassNames } from '../input-field/get-input-field-class-names';\nexport const RadioGroup = forwardRef((props, ref) => {\n  const style = getInputFieldClassNames(props);\n  const {\n    label,\n    children,\n    size,\n    className,\n    orientation = 'horizontal',\n    disabled,\n    required,\n    invalid,\n    errorMessage,\n    description\n  } = props;\n  const labelProps = {};\n  const id = useId();\n  const name = props.name || id;\n  return <fieldset aria-describedby={description ? `${id}-description` : undefined} ref={ref} className={clsx('text-left', className)}>\n        {label && <legend className={style.label} {...labelProps}>\n            {label}\n          </legend>}\n        <div className={clsx('flex', label ? 'mt-6' : 'mt-0', orientation === 'vertical' ? 'flex-col gap-10' : 'flex-row flex-wrap gap-16')}>\n          {Children.map(children, child => {\n        if (isValidElement(child)) {\n          return cloneElement(child, {\n            name,\n            size,\n            invalid: child.props.invalid || invalid || undefined,\n            disabled: child.props.disabled || disabled,\n            required: child.props.required || required\n          });\n        }\n      })}\n        </div>\n        {description && !errorMessage && <div className={style.description} id={`${id}-description`}>\n            {description}\n          </div>}\n        {errorMessage && <div className={style.error}>{errorMessage}</div>}\n      </fieldset>;\n});\nexport function FormRadioGroup({\n  children,\n  ...props\n}) {\n  const {\n    fieldState: {\n      error\n    }\n  } = useController({\n    name: props.name\n  });\n  return <RadioGroup errorMessage={error?.message} {...props}>\n      {children}\n    </RadioGroup>;\n}","import { lazyAdminRoute } from '@common/admin/routes/lazy-admin-route';\nexport const appSettingsRoutes = [{\n  path: 'drive',\n  lazy: () => lazyAdminRoute('DriveSettings')\n}];","import { queryOptions, useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nexport function useAdminSettings() {\n  return useQuery(adminSettingsQueryOptions);\n}\nexport const adminSettingsQueryOptions = queryOptions({\n  queryKey: ['fetchAdminSettings'],\n  queryFn: () => fetchAdminSettings(),\n  staleTime: Infinity,\n  select: prepareSettingsForHookForm\n});\nfunction fetchAdminSettings() {\n  return apiClient.get('settings').then(r => r.data);\n}\n\n// need to cast all numbers to strings and null/undefined to empty string recursively, otherwise hook form isDirty functionality will not work properly when binding numbers to text fields due to string/number type mismatch\nexport function prepareSettingsForHookForm(obj) {\n  for (const key in obj) {\n    if (Array.isArray(obj[key])) {\n      obj[key] = obj[key].map(prepareSettingsForHookForm);\n    } else if (typeof obj[key] === 'object') {\n      obj[key] = prepareSettingsForHookForm(obj[key]);\n    } else if (typeof obj[key] === 'number') {\n      obj[key] = obj[key].toString();\n    } else if (obj[key] == null) {\n      obj[key] = '';\n    }\n  }\n  return obj;\n}","import { message } from '@ui/i18n/message';\nexport const AppSettingsNavConfig = [{\n  label: message('Drive'),\n  to: 'drive'\n}, {\n  label: message('Guest Uploads'),\n  to: 'guest-uploads'\n}];","import { AppSettingsNavConfig } from '@app/admin/settings/app-settings-nav-config';\nimport { message } from '@ui/i18n/message';\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nconst filteredSettingsNavConfig = [{\n  label: message('General'),\n  to: 'general',\n  position: 1\n}, ...AppSettingsNavConfig, getBootstrapData().settings.billing.integrated && {\n  label: message('Subscriptions'),\n  to: 'subscriptions',\n  position: 2\n}, {\n  label: message('Localization'),\n  to: 'localization',\n  position: 3\n}, {\n  label: message('Authentication'),\n  to: 'authentication',\n  position: 4\n}, {\n  label: message('Uploading'),\n  to: 'uploading',\n  position: 5\n}, {\n  label: message('Outgoing email'),\n  to: 'outgoing-email',\n  position: 6\n}, {\n  label: message('Cache'),\n  to: 'cache',\n  position: 7\n}, {\n  label: message('Analytics'),\n  to: 'analytics',\n  position: 8\n}, {\n  label: message('Logging'),\n  to: 'logging',\n  position: 9\n}, {\n  label: message('Queue'),\n  to: 'queue',\n  position: 10\n}, {\n  label: message('Recaptcha'),\n  to: 'recaptcha',\n  position: 11\n}, {\n  label: message('GDPR'),\n  to: 'gdpr',\n  position: 12\n}, {\n  label: message('Menus'),\n  to: '/admin/appearance/menus',\n  position: 13\n}, {\n  label: message('Seo'),\n  to: '/admin/appearance/seo-settings',\n  position: 14\n}, {\n  label: message('Themes'),\n  to: '/admin/appearance/themes',\n  position: 15\n}].filter(Boolean);\nexport const SettingsNavConfig = filteredSettingsNavConfig;","import clsx from 'clsx';\nimport { NavLink, Outlet, useLocation, useNavigate } from 'react-router';\nimport { SettingsNavConfig } from './settings-nav-config';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nimport { Option, Select } from '@ui/forms/select/select';\nimport { Trans } from '@ui/i18n/trans';\nimport { StaticPageTitle } from '../../seo/static-page-title';\nimport { useMemo } from 'react';\nexport function AdminSettingsPage({\n  className,\n  navConfig: propsNavConfig\n}) {\n  const isMobile = useIsMobileMediaQuery();\n  const navConfig = useMemo(() => {\n    const config = propsNavConfig ?? SettingsNavConfig;\n    return config.sort((a, b) => (a.position ?? 0) - (b.position ?? 0));\n  }, [propsNavConfig]);\n  return <div className={clsx(className, 'container mx-auto min-h-full items-start gap-30 p-24 md:flex')}>\n      <StaticPageTitle>\n        <Trans message=\"Settings\" />\n      </StaticPageTitle>\n      {isMobile ? <MobileNav navConfig={navConfig} /> : <DesktopNav navConfig={navConfig} />}\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\n        <Outlet />\n      </div>\n    </div>;\n}\nfunction MobileNav({\n  navConfig\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const navigate = useNavigate();\n  const value = pathname.split('/').pop();\n  return <Select minWidth=\"min-w-none\" className=\"mb-24 w-full bg\" selectionMode=\"single\" selectedValue={value} onSelectionChange={newPage => {\n    navigate(newPage, {\n      state: {\n        prevPath: pathname\n      }\n    });\n  }}>\n      {navConfig.map(item => <Option key={item.to} value={item.to}>\n          <Trans {...item.label} />\n        </Option>)}\n    </Select>;\n}\nfunction DesktopNav({\n  navConfig\n}) {\n  const {\n    pathname\n  } = useLocation();\n  return <div className=\"sticky top-24 w-240 flex-shrink-0\">\n      {navConfig.map(item => <NavLink key={item.to} to={item.to} state={{\n      prevPath: pathname\n    }} className={({\n      isActive\n    }) => clsx('mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color', isActive ? 'bg-primary/6 font-semibold text-primary' : 'hover:bg-hover')}>\n          <Trans {...item.label} />\n        </NavLink>)}\n    </div>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useGenerateSitemap() {\n  return useMutation({\n    mutationFn: () => generate(),\n    onSuccess: () => {\n      toast(message('Sitemap generated'));\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction generate() {\n  return apiClient.post('sitemap/generate').then(r => r.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nimport { message } from '@ui/i18n/message';\nexport function useUpdateAdminSettings(form) {\n  return useMutation({\n    mutationFn: props => updateAdminSettings(props),\n    onSuccess: response => {\n      toast(message('Settings updated'), {\n        position: 'bottom-right'\n      });\n      return queryClient.setQueryData(['fetchAdminSettings'], response);\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}\nfunction updateAdminSettings({\n  client,\n  server,\n  files\n}) {\n  const formData = new FormData();\n  if (client) {\n    formData.set('client', JSON.stringify(client));\n  }\n  if (server) {\n    formData.set('server', JSON.stringify(server));\n  }\n  Object.entries(files || {}).forEach(([key, file]) => {\n    formData.set(key, file);\n  });\n  return apiClient.post('settings', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }).then(r => r.data);\n}","export function SettingsSeparator() {\n  return <div className=\"bg-divider-lighter my-30 h-1\" />;\n}","import React from 'react';\nimport { Skeleton } from '@ui/skeleton/skeleton';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nimport { m } from 'framer-motion';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nexport function SettingsFormLoadingIndicator() {\n  return <m.div className=\"text-sm\" {...opacityAnimation}>\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <div className=\"mt-10 flex items-center gap-8\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-20\" />\n          <Skeleton className=\"max-w-64 text-xs\" />\n        </div>\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-4/5 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton className=\"mb-4 max-w-140\" />\n        <Skeleton variant=\"rect\" size=\"h-42 w-full\" />\n        <Skeleton className=\"mt-10 max-w-[90%] text-xs\" />\n      </div>\n      <div>\n        <div className=\"mt-20 flex items-center gap-12\">\n          <Skeleton variant=\"rect\" size=\"h-20 w-40\" radius=\"rounded-full\" />\n          <Skeleton className=\"max-w-140\" />\n        </div>\n        <Skeleton className=\"mt-10 max-w-240 text-xs\" />\n      </div>\n      <SettingsSeparator />\n      <div>\n        <Skeleton variant=\"rect\" size=\"h-30 w-132\" radius=\"rounded-button\" />\n        <div className=\"mt-14\">\n          <Skeleton className=\"max-w-240\" />\n          <Skeleton className=\"max-w-384\" />\n        </div>\n      </div>\n      <div className=\"mt-40\">\n        <Skeleton variant=\"rect\" size=\"h-36 w-132\" radius=\"rounded-button\" />\n      </div>\n    </m.div>;\n}","import { useFormState } from 'react-hook-form';\nimport { Fragment } from 'react';\nimport { Form } from '@ui/forms/form';\nimport { Button } from '@ui/buttons/button';\nimport { Trans } from '@ui/i18n/trans';\nimport { useUpdateAdminSettings } from '@common/admin/settings/requests/use-update-admin-settings';\nimport { BlockerDialog } from '@ui/overlays/dialog/blocker-dialog';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { useAdminSettings } from '@common/admin/settings/requests/use-admin-settings';\nimport { SettingsFormLoadingIndicator } from '@common/admin/settings/form/settings-form-loading-indicator';\nexport function AdminSettingsForm({\n  children,\n  form\n}) {\n  const updateSettings = useUpdateAdminSettings(form);\n  const {\n    isDirty\n  } = useFormState({\n    control: form.control\n  });\n  return <m.section key=\"settings-form\" {...opacityAnimation}>\n      <Form form={form} onBeforeSubmit={() => {\n      // clear group errors, because hook form won't automatically\n      // clear errors that are not bound to a specific form field\n      const errors = form.formState.errors;\n      const keys = Object.keys(errors).filter(key => {\n        return key.endsWith('_group');\n      });\n      form.clearErrors(keys);\n    }} onSubmit={values => {\n      updateSettings.mutate(values, {\n        onSuccess: () => form.reset(values)\n      });\n    }}>\n        {children}\n        <div className=\"mt-40\">\n          <Button type=\"submit\" variant=\"flat\" color=\"primary\" startIcon={updateSettings.isPending ? <ProgressCircle size=\"xs\" isIndeterminate /> : null} disabled={updateSettings.isPending || !isDirty}>\n            <Trans message=\"Save changes\" />\n          </Button>\n        </div>\n      </Form>\n      <BlockerDialog isBlocked={isDirty} />\n    </m.section>;\n}\nexport function AdminSettingsLayout({\n  title,\n  description,\n  headerMargin = 'mb-40',\n  children,\n  isLoading\n}) {\n  const {\n    data\n  } = useAdminSettings();\n  return <Fragment>\n      <div className={headerMargin}>\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\n        <div className=\"text-sm text-muted\">{description}</div>\n      </div>\n      <AnimatePresence initial={false} mode=\"wait\">\n        {data && !isLoading ? children(data) : <SettingsFormLoadingIndicator key=\"settings-skeleton\" />}\n      </AnimatePresence>\n    </Fragment>;\n}","import clsx from 'clsx';\nimport { LinkIcon } from '@ui/icons/material/Link';\nimport { ExternalLink } from '@ui/buttons/external-link';\nimport { Trans } from '@ui/i18n/trans';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function LearnMoreLink({\n  link,\n  className\n}) {\n  const {\n    site\n  } = useSettings();\n  if (site.hide_docs_button) {\n    return null;\n  }\n  return <div className={clsx('flex items-center gap-8', className)}>\n      <LinkIcon size=\"sm\" />\n      <ExternalLink href={link}>\n        <Trans message=\"Learn more\" />\n      </ExternalLink>\n    </div>;\n}","import { useAdminSettings } from '../requests/use-admin-settings';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { FormSelect, Option } from '@ui/forms/select/select';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { Button } from '@ui/buttons/button';\nimport { ExternalLink } from '@ui/buttons/external-link';\nimport { Trans } from '@ui/i18n/trans';\nimport React, { Fragment, useContext } from 'react';\nimport { SiteConfigContext } from '@common/core/settings/site-config-context';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { useValueLists } from '@common/http/value-lists';\nimport { useForm, useFormContext } from 'react-hook-form';\nimport { useGenerateSitemap } from '@common/admin/settings/requests/use-generate-sitemap';\nimport { useBootstrapDataStore } from '@ui/bootstrap-data/bootstrap-data-store';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nimport { LearnMoreLink } from '@common/admin/settings/form/learn-more-link';\nexport function GeneralSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"General\" />} description={<Trans message=\"Configure site url, homepage, theme and other general settings.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      client: {\n        homepage: {\n          type: data.client.homepage?.type ?? 'landingPage',\n          value: data.client.homepage?.value ?? ''\n        },\n        themes: {\n          default_id: data.client.themes?.default_id ? parseInt(data.client.themes.default_id) : 0,\n          user_change: data.client.themes?.user_change ?? false\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <SiteUrlSection />\n      <SettingsSeparator />\n      <HomepageSection />\n      <SettingsSeparator />\n      <ThemeSection />\n      <SettingsSeparator />\n      <SitemapSection />\n    </AdminSettingsForm>;\n}\nfunction SiteUrlSection() {\n  const {\n    data\n  } = useAdminSettings();\n  if (!data) return null;\n  let append = null;\n  const server = data.server;\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\n  if (isInvalid) {\n    append = <div className=\"mt-20 text-sm text-danger\">\n        <Trans values={{\n        baseUrl: server.app_url,\n        currentUrl: server.newAppUrl,\n        b: chunks => <b>{chunks}</b>\n      }} message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\" />\n      </div>;\n  }\n  return <Fragment>\n      <TextField readOnly invalid={!!isInvalid} value={server.app_url} label={<Trans message=\"Primary site url\" />} description={<LearnMoreLink link=\"https://support.vebto.com/hc/articles/35/primary-site-url\" />} />\n      {append}\n    </Fragment>;\n}\nfunction HomepageSection() {\n  const {\n    watch\n  } = useFormContext();\n  const {\n    homepage\n  } = useContext(SiteConfigContext);\n  const {\n    data\n  } = useValueLists(['menuItemCategories']);\n  const selectedType = watch('client.homepage.type');\n  return <div>\n      <FormSelect name=\"client.homepage.type\" selectionMode=\"single\" label={<Trans message=\"Site home page\" />} description={<Trans message=\"Which page should be used as site homepage.\" />}>\n        {homepage.options.map(option => <Option key={option.value} value={option.value}>\n            <Trans {...option.label} />\n          </Option>)}\n        {data?.menuItemCategories?.map(category => <Option key={category.type} value={category.type}>\n            {category.name}\n          </Option>)}\n      </FormSelect>\n      {data?.menuItemCategories?.map(category => {\n      return selectedType === category.type ? <FormSelect className=\"mt-24\" name=\"client.homepage.value\" key={category.name} selectionMode=\"single\" label={<Trans message=\"Homepage :name\" values={{\n        name: category.name\n      }} />}>\n            {category.items.map(item => <Option key={item.label} value={`${item.model_id}`}>\n                {item.label}\n              </Option>)}\n          </FormSelect> : null;\n    })}\n    </div>;\n}\nfunction ThemeSection() {\n  const themes = useBootstrapDataStore(s => s.data.themes);\n  return <Fragment>\n      <FormSelect className=\"mb-20\" name=\"client.themes.default_id\" selectionMode=\"single\" label={<Trans message=\"Default site theme\" />} description={<Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />}>\n        <Option value={0}>\n          <Trans message=\"System\" />\n        </Option>\n        {themes.map(theme => <Option key={theme.id} value={theme.id}>\n            {theme.name}\n          </Option>)}\n      </FormSelect>\n      <FormSwitch name=\"client.themes.user_change\" description={<Trans message=\"Allow users to manually change site theme.\" />}>\n        <Trans message=\"Allow theme change\" />\n      </FormSwitch>\n    </Fragment>;\n}\nfunction SitemapSection() {\n  const generateSitemap = useGenerateSitemap();\n  const {\n    base_url\n  } = useSettings();\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\n  return <>\n      <Button variant=\"outline\" size=\"xs\" color=\"primary\" disabled={generateSitemap.isPending} onClick={() => {\n      generateSitemap.mutate();\n    }}>\n        <Trans message=\"Generate sitemap\" />\n      </Button>\n      <div className=\"mt-14 text-sm text-muted\">\n        <Trans message=\"Once generated, sitemap url will be: :url\" values={{\n        url: link\n      }} />\n      </div>\n    </>;\n}","import { useEffect, useRef } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport clsx from 'clsx';\nexport function SettingsErrorGroup({\n  children,\n  name,\n  separatorBottom = true,\n  separatorTop = true\n}) {\n  const {\n    formState: {\n      errors\n    }\n  } = useFormContext();\n  const ref = useRef(null);\n  const error = errors[name];\n  useEffect(() => {\n    if (error) {\n      ref.current?.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [error]);\n  return <div className={clsx(separatorBottom && 'border-b mb-20 pb-20', separatorTop && 'border-t mt-20 pt-20', error && 'border-y-error')} ref={ref}>\n      {children(!!error)}\n      {error && <div className=\"text-danger text-sm mt-20\" dangerouslySetInnerHTML={{\n      __html: error.message\n    }} />}\n    </div>;\n}","import { useController } from 'react-hook-form';\nimport React, { useMemo } from 'react';\nimport { mergeProps } from '@react-aria/utils';\nimport { ChipField } from '@ui/forms/input-field/chip-field/chip-field';\nexport function JsonChipField({\n  children,\n  ...props\n}) {\n  const {\n    field: {\n      onChange,\n      onBlur,\n      value = [],\n      ref\n    },\n    fieldState: {\n      invalid,\n      error\n    }\n  } = useController({\n    name: props.name\n  });\n  const arrayValue = useMemo(() => {\n    const mixedValue = value;\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\n  }, [value]);\n  const formProps = {\n    onChange,\n    onBlur,\n    value: arrayValue,\n    invalid,\n    errorMessage: error?.message\n  };\n  return <ChipField valueKey=\"name\" ref={ref} {...mergeProps(formProps, props)} />;\n}","import { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { Tabs } from '@ui/tabs/tabs';\nimport { TabList } from '@ui/tabs/tab-list';\nimport { Tab } from '@ui/tabs/tab';\nimport { TabPanel, TabPanels } from '@ui/tabs/tab-panels';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { useForm, useFormContext } from 'react-hook-form';\nimport { LearnMoreLink } from '@common/admin/settings/form/learn-more-link';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport React, { Fragment } from 'react';\nimport { JsonChipField } from '@common/admin/settings/form/json-chip-field';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nexport function SubscriptionSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Subscriptions\" />} description={<Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const {\n    trans\n  } = useTrans();\n  const form = useForm({\n    defaultValues: {\n      client: {\n        billing: {\n          enable: data.client.billing?.enable ?? false,\n          accepted_cards: data.client.billing?.accepted_cards ?? [],\n          paypal_test_mode: data.client.billing?.paypal_test_mode ?? false,\n          paypal: {\n            enable: data.client.billing?.paypal?.enable ?? false\n          },\n          stripe: {\n            enable: data.client.billing?.stripe?.enable ?? false\n          },\n          invoice: {\n            address: data.client.billing?.invoice?.address ?? '',\n            notes: data.client.billing?.invoice?.notes ?? ''\n          }\n        }\n      },\n      server: {\n        paypal_client_id: data.server?.paypal_client_id ?? '',\n        paypal_secret: data.server?.paypal_secret ?? '',\n        paypal_webhook_id: data.server?.paypal_webhook_id ?? '',\n        stripe_key: data.server?.stripe_key ?? '',\n        stripe_secret: data.server?.stripe_secret ?? '',\n        stripe_webhook_secret: data.server?.stripe_webhook_secret ?? ''\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <Tabs>\n        <TabList>\n          <Tab>\n            <Trans message=\"General\" />\n          </Tab>\n          <Tab>\n            <Trans message=\"Invoices\" />\n          </Tab>\n        </TabList>\n        <TabPanels className=\"pt-30\">\n          <TabPanel>\n            <FormSwitch name=\"client.billing.enable\" description={<Trans message=\"Enable or disable all subscription related functionality across the site.\" />}>\n              <Trans message=\"Enable subscriptions\" />\n            </FormSwitch>\n            <SettingsSeparator />\n            <PaypalSection />\n            <StripeSection />\n            <SettingsSeparator />\n            <JsonChipField label={<Trans message=\"Accepted cards\" />} name=\"client.billing.accepted_cards\" placeholder={trans({\n            message: 'Add new card...'\n          })} />\n          </TabPanel>\n          <TabPanel>\n            <FormTextField inputElementType=\"textarea\" rows={5} label={<Trans message=\"Invoice address\" />} name=\"client.billing.invoice.address\" className=\"mb-30\" />\n            <FormTextField inputElementType=\"textarea\" rows={5} label={<Trans message=\"Invoice notes\" />} description={<Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />} name=\"client.billing.invoice.notes\" />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </AdminSettingsForm>;\n}\nfunction PaypalSection() {\n  const {\n    watch\n  } = useFormContext();\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\n  return <div className=\"mb-30\">\n      <FormSwitch name=\"client.billing.paypal.enable\" description={<div>\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\n            <LearnMoreLink className=\"mt-6\" link=\"https://support.vebto.com/hc/articles/147/configuring-paypal\" />\n          </div>}>\n        <Trans message=\"PayPal gateway\" />\n      </FormSwitch>\n      {paypalIsEnabled ? <SettingsErrorGroup name=\"paypal_group\">\n          {isInvalid => <Fragment>\n              <FormTextField name=\"server.paypal_client_id\" label={<Trans message=\"PayPal Client ID\" />} required invalid={isInvalid} className=\"mb-20\" />\n              <FormTextField name=\"server.paypal_secret\" label={<Trans message=\"PayPal Secret\" />} required invalid={isInvalid} className=\"mb-20\" />\n              <FormTextField name=\"server.paypal_webhook_id\" label={<Trans message=\"PayPal Webhook ID\" />} required invalid={isInvalid} className=\"mb-20\" />\n              <FormSwitch name=\"client.billing.paypal_test_mode\" invalid={isInvalid} description={<div>\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\n                  </div>}>\n                <Trans message=\"PayPal test mode\" />\n              </FormSwitch>\n            </Fragment>}\n        </SettingsErrorGroup> : null}\n    </div>;\n}\nfunction StripeSection() {\n  const {\n    watch\n  } = useFormContext();\n  const stripeEnabled = watch('client.billing.stripe.enable');\n  return <Fragment>\n      <FormSwitch name=\"client.billing.stripe.enable\" description={<div>\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\n            <LearnMoreLink className=\"mt-6\" link=\"https://support.vebto.com/hc/articles/148/configuring-stripe\" />\n          </div>}>\n        <Trans message=\"Stripe gateway\" />\n      </FormSwitch>\n      {stripeEnabled ? <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\n          {isInvalid => <Fragment>\n              <FormTextField name=\"server.stripe_key\" label={<Trans message=\"Stripe publishable key\" />} required className=\"mb-20\" invalid={isInvalid} />\n              <FormTextField name=\"server.stripe_secret\" label={<Trans message=\"Stripe secret key\" />} required className=\"mb-20\" invalid={isInvalid} />\n              <FormTextField name=\"server.stripe_webhook_secret\" label={<Trans message=\"Stripe webhook signing secret\" />} className=\"mb-20\" invalid={isInvalid} />\n            </Fragment>}\n        </SettingsErrorGroup> : null}\n    </Fragment>;\n}","import { FormSelect, Option } from '@ui/forms/select/select';\nimport { useValueLists } from '@common/http/value-lists';\nimport { Section } from '@ui/forms/listbox/section';\nimport { FormRadio } from '@ui/forms/radio-group/radio';\nimport { FormRadioGroup } from '@ui/forms/radio-group/radio-group';\nimport { DateFormatPresets, FormattedDate } from '@ui/i18n/formatted-date';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { Trans } from '@ui/i18n/trans';\nimport { useCurrentDateTime } from '@ui/i18n/use-current-date-time';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { message } from '@ui/i18n/message';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nexport function LocalizationSettings() {\n  const optionQuery = useValueLists(['timezones', 'localizations']);\n  return <AdminSettingsLayout title={<Trans message=\"Localization\" />} description={<Trans message=\"Configure global date, time and language settings.\" />} isLoading={optionQuery.isLoading}>\n      {data => <Form data={data} timezones={optionQuery.data.timezones} localizations={optionQuery.data.localizations} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data,\n  timezones,\n  localizations\n}) {\n  const today = useCurrentDateTime();\n  const {\n    trans\n  } = useTrans();\n  const form = useForm({\n    defaultValues: {\n      client: {\n        dates: {\n          default_timezone: data.client.dates.default_timezone ?? 'auto',\n          format: data.client.dates.format ?? 'auto'\n        },\n        locale: {\n          default: data.client.locale?.default ?? 'auto'\n        },\n        i18n: {\n          enable: data.client.i18n.enable ?? true\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <FormSelect className=\"mb-30\" required name=\"client.dates.default_timezone\" showSearchField selectionMode=\"single\" label={<Trans message=\"Default timezone\" />} searchPlaceholder={trans(message('Search timezones'))} description={<Trans message=\"Which timezone should be selected by default for new users and guests.\" />}>\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {Object.entries(timezones).map(([groupName, timezones]) => <Section key={groupName} label={groupName}>\n            {timezones.map(timezone => <Option key={timezone.value} value={timezone.value}>\n                {timezone.text}\n              </Option>)}\n          </Section>)}\n      </FormSelect>\n      <FormSelect name=\"client.locale.default\" className=\"mb-30\" selectionMode=\"single\" label={<Trans message=\"Default language\" />} description={<Trans message=\"Which localization should be selected by default for new users and guests.\" />}>\n        <Option key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </Option>\n        {localizations.map(locale => <Option key={locale.language} value={locale.language} capitalizeFirst>\n            {locale.name}\n          </Option>)}\n      </FormSelect>\n      <FormRadioGroup required className=\"mb-30\" size=\"sm\" name=\"client.dates.format\" orientation=\"vertical\" label={<Trans message=\"Date verbosity\" />} description={<Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />}>\n        <FormRadio key=\"auto\" value=\"auto\">\n          <Trans message=\"Auto\" />\n        </FormRadio>\n        {Object.entries(DateFormatPresets).map(([format, options]) => <FormRadio key={format} value={format}>\n            <FormattedDate date={today} options={options} />\n          </FormRadio>)}\n      </FormRadioGroup>\n      <FormSwitch name=\"client.i18n.enable\" description={<Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />}>\n        <Trans message=\"Enable translations\" />\n      </FormSwitch>\n    </AdminSettingsForm>;\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport { Trans } from '@ui/i18n/trans';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { Button } from '@ui/buttons/button';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nexport function AuthenticationSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Authentication\" />} description={<Trans message=\"Configure registration, social login and related 3rd party integrations.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      client: {\n        require_email_confirmation: data.client?.require_email_confirmation ?? false,\n        registration: {\n          disable: data.client.registration?.disable ?? false\n        },\n        social: {\n          requireAccount: data.client.social?.requireAccount ?? false,\n          compact_buttons: data.client.social?.compact_buttons ?? false,\n          envato: {\n            enable: data.client.social?.envato?.enable ?? false\n          },\n          google: {\n            enable: data.client.social?.google?.enable ?? false\n          },\n          facebook: {\n            enable: data.client.social?.facebook?.enable ?? false\n          },\n          twitter: {\n            enable: data.client.social?.twitter?.enable ?? false\n          }\n        },\n        single_device_login: data.client.single_device_login ?? false,\n        auth: {\n          domain_blacklist: data.client.auth?.domain_blacklist ?? ''\n        }\n      },\n      server: {\n        envato_id: data.server?.envato_id ?? '',\n        envato_secret: data.server?.envato_secret ?? '',\n        envato_personal_token: data.server?.envato_personal_token ?? '',\n        google_id: data.server?.google_id ?? '',\n        google_secret: data.server?.google_secret ?? '',\n        facebook_id: data.server?.facebook_id ?? '',\n        facebook_secret: data.server?.facebook_secret ?? '',\n        twitter_id: data.server?.twitter_id ?? '',\n        twitter_secret: data.server?.twitter_secret ?? '',\n        mail_setup: data.server?.mail_setup ?? false\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <EmailConfirmationSection />\n      <FormSwitch className=\"mb-24\" name=\"client.registration.disable\" description={<Trans message=\"All registration related functionality will be disabled and hidden from users.\" />}>\n        <Trans message=\"Disable registration\" />\n      </FormSwitch>\n      <FormSwitch className=\"mb-24\" name=\"client.social.requireAccount\" description={<Trans message=\"If enabled, user will only be able to login via particular social site, if they have connected it from their account settings page.\" />}>\n        <Trans message=\"Social login requires existing account\" />\n      </FormSwitch>\n      <FormSwitch className=\"mb-24\" name=\"client.single_device_login\" description={<Trans message=\"Only allow one device to be logged into user account at the same time.\" />}>\n        <Trans message=\"Single device login\" />\n      </FormSwitch>\n      <FormSwitch name=\"client.social.compact_buttons\" description={<Trans message=\"Use compact design for social login buttons.\" />}>\n        <Trans message=\"Compact buttons\" />\n      </FormSwitch>\n      <EnvatoSection />\n      <GoogleSection />\n      <FacebookSection />\n      <TwitterSection />\n      <SettingsSeparator />\n      <FormTextField inputElementType=\"textarea\" rows={3} className=\"mt-24\" name=\"client.auth.domain_blacklist\" label={<Trans message=\"Domain blacklist\" />} description={<Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />} />\n    </AdminSettingsForm>;\n}\nexport function MailNotSetupWarning() {\n  const {\n    watch\n  } = useFormContext();\n  const mailSetup = watch('server.mail_setup');\n  if (mailSetup) return null;\n  return <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\n      <Trans message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\" values={{\n      a: text => <Button elementType={Link} variant=\"outline\" size=\"xs\" display=\"flex\" className=\"mt-10 max-w-max\" to=\"/admin/settings/outgoing-email\">\n              {text}\n            </Button>\n    }} />\n    </p>;\n}\nfunction EmailConfirmationSection() {\n  return <FormSwitch className=\"mb-30\" name=\"client.require_email_confirmation\" description={<Fragment>\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\n          <MailNotSetupWarning />\n        </Fragment>}>\n      <Trans message=\"Require email confirmation\" />\n    </FormSwitch>;\n}\nfunction EnvatoSection() {\n  const {\n    watch\n  } = useFormContext();\n  const settings = useSettings();\n  const envatoLoginEnabled = watch('client.social.envato.enable');\n  if (!settings.envato?.enable) return null;\n  return <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\n      {isInvalid => <>\n          <FormSwitch invalid={isInvalid} name=\"client.social.envato.enable\" description={<Trans message=\"Enable logging into the site via envato.\" />}>\n            <Trans message=\"Envato login\" />\n          </FormSwitch>\n          {!!envatoLoginEnabled && <>\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.envato_id\" label={<Trans message=\"Envato ID\" />} required />\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.envato_secret\" label={<Trans message=\"Envato secret\" />} required />\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.envato_personal_token\" label={<Trans message=\"Envato personal token\" />} required />\n            </>}\n        </>}\n    </SettingsErrorGroup>;\n}\nfunction GoogleSection() {\n  const {\n    watch\n  } = useFormContext();\n  const googleLoginEnabled = watch('client.social.google.enable');\n  return <SettingsErrorGroup name=\"google_group\">\n      {isInvalid => <>\n          <FormSwitch invalid={isInvalid} name=\"client.social.google.enable\" description={<Trans message=\"Enable logging into the site via google.\" />}>\n            <Trans message=\"Google login\" />\n          </FormSwitch>\n          {!!googleLoginEnabled && <>\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.google_id\" label={<Trans message=\"Google client ID\" />} required />\n              <FormTextField className=\"mt-30\" name=\"server.google_secret\" label={<Trans message=\"Google client secret\" />} required />\n            </>}\n        </>}\n    </SettingsErrorGroup>;\n}\nfunction FacebookSection() {\n  const {\n    watch\n  } = useFormContext();\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\n  return <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\n      {isInvalid => <>\n          <FormSwitch invalid={isInvalid} name=\"client.social.facebook.enable\" description={<Trans message=\"Enable logging into the site via facebook.\" />}>\n            <Trans message=\"Facebook login\" />\n          </FormSwitch>\n          {!!facebookLoginEnabled && <>\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.facebook_id\" label={<Trans message=\"Facebook app ID\" />} required />\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.facebook_secret\" label={<Trans message=\"Facebook app secret\" />} required />\n            </>}\n        </>}\n    </SettingsErrorGroup>;\n}\nfunction TwitterSection() {\n  const {\n    watch\n  } = useFormContext();\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\n  return <SettingsErrorGroup name=\"twitter_group\" separatorTop={false} separatorBottom={false}>\n      {isInvalid => <>\n          <FormSwitch invalid={isInvalid} name=\"client.social.twitter.enable\" description={<Trans message=\"Enable logging into the site via twitter.\" />}>\n            <Trans message=\"Twitter login\" />\n          </FormSwitch>\n          {!!twitterLoginEnabled && <>\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.twitter_id\" label={<Trans message=\"Twitter ID\" />} required />\n              <FormTextField invalid={isInvalid} className=\"mt-30\" name=\"server.twitter_secret\" label={<Trans message=\"Twitter secret\" />} required />\n            </>}\n        </>}\n    </SettingsErrorGroup>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nfunction fetchMaxServerUploadSize() {\n  return apiClient.get('uploads/server-max-file-size').then(response => response.data);\n}\nexport function useMaxServerUploadSize() {\n  return useQuery({\n    queryKey: ['MaxServerUploadSize'],\n    queryFn: () => fetchMaxServerUploadSize()\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useGenerateDropboxRefreshToken() {\n  return useMutation({\n    mutationFn: props => generateToken(props),\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction generateToken(payload) {\n  return apiClient.post('settings/uploading/dropbox-refresh-token', payload).then(r => r.data);\n}","import { Fragment } from 'react';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { useForm, useFormContext } from 'react-hook-form';\nimport { Form } from '@ui/forms/form';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { useGenerateDropboxRefreshToken } from './use-generate-dropbox-refresh-token';\nexport function DropboxForm({\n  isInvalid\n}) {\n  const {\n    watch,\n    setValue\n  } = useFormContext();\n  const appKey = watch('server.storage_dropbox_app_key');\n  const appSecret = watch('server.storage_dropbox_app_secret');\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-20\" name=\"server.storage_dropbox_app_key\" label={<Trans message=\"Dropbox application key\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-20\" name=\"server.storage_dropbox_app_secret\" label={<Trans message=\"Dropbox application secret\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-20\" name=\"server.storage_dropbox_refresh_token\" label={<Trans message=\"Dropbox refresh token\" />} required />\n      <DialogTrigger type=\"modal\" onClose={refreshToken => {\n      if (refreshToken) {\n        setValue('server.storage_dropbox_refresh_token', refreshToken);\n      }\n    }}>\n        <Button variant=\"outline\" color=\"primary\" size=\"xs\" disabled={!appKey || !appSecret}>\n          <Trans message=\"Get dropbox refresh token\" />\n        </Button>\n        <DropboxRefreshTokenDialog appKey={appKey} appSecret={appSecret} />\n      </DialogTrigger>\n    </Fragment>;\n}\nfunction DropboxRefreshTokenDialog({\n  appKey,\n  appSecret\n}) {\n  const form = useForm();\n  const {\n    formId,\n    close\n  } = useDialogContext();\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Connected dropbox account\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form id={formId} form={form} onSubmit={data => {\n        generateRefreshToken.mutate({\n          app_key: appKey,\n          app_secret: appSecret,\n          access_code: data.accessCode\n        }, {\n          onSuccess: response => {\n            close(response.refreshToken);\n          }\n        });\n      }}>\n          <div className=\"mb-20 border-b pb-20\">\n            <div className=\"mb-10 text-sm text-muted\">\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\n            </div>\n            <Button variant=\"outline\" color=\"primary\" size=\"xs\" elementType=\"a\" target=\"_blank\" href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}>\n              <Trans message=\"Get access code\" />\n            </Button>\n          </div>\n          <FormTextField name=\"accessCode\" label={<Trans message=\"Dropbox access code\" />} required />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={() => {\n        close();\n      }}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" form={formId} type=\"submit\" disabled={!appKey || !appSecret || generateRefreshToken.isPending}>\n          <Trans message=\"Connect\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { message } from '@ui/i18n/message';\nimport { toast } from '@ui/toast/toast';\nexport function useUploadS3Cors() {\n  const {\n    trans\n  } = useTrans();\n  return useMutation({\n    mutationFn: () => uploadCors(),\n    onSuccess: () => {\n      toast(trans(message('CORS file updated')));\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction uploadCors() {\n  return apiClient.post('s3/cors/upload').then(r => r.data);\n}","import { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport { FormRadioGroup } from '@ui/forms/radio-group/radio-group';\nimport { FormRadio } from '@ui/forms/radio-group/radio';\nimport { FormFileSizeField } from '@common/uploads/components/file-size-field';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nimport { JsonChipField } from '@common/admin/settings/form/json-chip-field';\nimport { message } from '@ui/i18n/message';\nimport { useMaxServerUploadSize } from '@common/admin/settings/pages/uploading-settings/max-server-upload-size';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { useForm, useFormContext } from 'react-hook-form';\nimport { FormSelect } from '@ui/forms/select/select';\nimport { DropboxForm } from '@common/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form';\nimport React, { Fragment } from 'react';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { useUploadS3Cors } from '@common/admin/settings/pages/uploading-settings/use-upload-s3-cors';\nimport { useAdminSettings } from '@common/admin/settings/requests/use-admin-settings';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { Button } from '@ui/buttons/button';\nimport { Item } from '@ui/forms/listbox/item';\nexport function UploadingSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Uploading\" />} description={<Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const {\n    trans\n  } = useTrans();\n  const form = useForm({\n    defaultValues: {\n      client: {\n        uploads: {\n          max_size: data.client.uploads.max_size ?? 0,\n          chunk_size: data.client.uploads.chunk_size ?? 0,\n          available_space: data.client.uploads.available_space ?? 0,\n          allowed_extensions: data.client.uploads.allowed_extensions ?? [],\n          blocked_extensions: data.client.uploads.blocked_extensions ?? [],\n          s3_direct_upload: data.client.uploads.s3_direct_upload ?? false\n        }\n      },\n      server: {\n        static_file_delivery: data.server.static_file_delivery ?? '',\n        uploads_disk_driver: data.server.uploads_disk_driver ?? 'local',\n        public_disk_driver: data.server.public_disk_driver ?? 'local',\n        // s3\n        storage_s3_key: data.server.storage_s3_key ?? '',\n        storage_s3_secret: data.server.storage_s3_secret ?? '',\n        storage_s3_region: data.server.storage_s3_region ?? '',\n        storage_s3_bucket: data.server.storage_s3_bucket ?? '',\n        storage_s3_endpoint: data.server.storage_s3_endpoint ?? '',\n        // digitalocean spaces\n        storage_digitalocean_key: data.server.storage_digitalocean_key ?? '',\n        storage_digitalocean_secret: data.server.storage_digitalocean_secret ?? '',\n        storage_digitalocean_region: data.server.storage_digitalocean_region ?? '',\n        storage_digitalocean_bucket: data.server.storage_digitalocean_bucket ?? '',\n        // backblaze\n        storage_backblaze_key: data.server.storage_backblaze_key ?? '',\n        storage_backblaze_secret: data.server.storage_backblaze_secret ?? '',\n        storage_backblaze_region: data.server.storage_backblaze_region ?? '',\n        storage_backblaze_bucket: data.server.storage_backblaze_bucket ?? '',\n        // ftp\n        storage_ftp_host: data.server.storage_ftp_host ?? '',\n        storage_ftp_username: data.server.storage_ftp_username ?? '',\n        storage_ftp_password: data.server.storage_ftp_password ?? '',\n        storage_ftp_root: data.server.storage_ftp_root ?? '',\n        storage_ftp_port: data.server.storage_ftp_port ?? '21',\n        storage_ftp_passive: data.server.storage_ftp_passive ?? false,\n        storage_ftp_ssl: data.server.storage_ftp_ssl ?? false,\n        // dropbox\n        storage_dropbox_app_key: data.server.storage_dropbox_app_key ?? '',\n        storage_dropbox_app_secret: data.server.storage_dropbox_app_secret ?? '',\n        storage_dropbox_refresh_token: data.server.storage_dropbox_refresh_token ?? ''\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <PrivateUploadSection />\n      <PublicUploadSection />\n      <CredentialsSection />\n      <SettingsErrorGroup name=\"static_delivery_group\">\n        {isInvalid => <FormRadioGroup invalid={isInvalid} size=\"sm\" name=\"server.static_file_delivery\" orientation=\"vertical\" label={<Trans message=\"File delivery optimization\" />} description={<Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />}>\n            <FormRadio value=\"\">\n              <Trans message=\"None\" />\n            </FormRadio>\n            <FormRadio value=\"xsendfile\">\n              <Trans message=\"X-Sendfile (Apache)\" />\n            </FormRadio>\n            <FormRadio value=\"xaccel\">\n              <Trans message=\"X-Accel (Nginx)\" />\n            </FormRadio>\n          </FormRadioGroup>}\n      </SettingsErrorGroup>\n      <FormFileSizeField className=\"mb-30\" name=\"client.uploads.chunk_size\" min={1} label={<Trans message=\"Chunk size\" />} placeholder=\"Infinity\" description={<Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />} />\n      <MaxUploadSizeSection />\n      <SettingsSeparator />\n      <FormFileSizeField min={1} name=\"client.uploads.max_size\" className=\"mb-30\" label={<Trans message=\"Maximum file size\" />} description={<Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />} />\n      <FormFileSizeField min={1} name=\"client.uploads.available_space\" className=\"mb-30\" label={<Trans message=\"Available space\" />} description={<Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />} />\n      <JsonChipField name=\"client.uploads.allowed_extensions\" className=\"mb-30\" label={<Trans message=\"Allowed extensions\" />} placeholder={trans(message('Add extension...'))} description={<Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />} />\n      <JsonChipField name=\"client.uploads.blocked_extensions\" label={<Trans message=\"Blocked extensions\" />} placeholder={trans(message('Add extension...'))} description={<Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />} />\n    </AdminSettingsForm>;\n}\nfunction MaxUploadSizeSection() {\n  const {\n    data\n  } = useMaxServerUploadSize();\n  return <SectionHelper color=\"warning\" description={<Trans message=\"Maximum upload size on your server currently is set to <b>:size</b>\" values={{\n    size: data?.maxSize,\n    b: chunks => <b>{chunks}</b>\n  }} />} />;\n}\nfunction PrivateUploadSection() {\n  const {\n    watch,\n    clearErrors\n  } = useFormContext();\n  const isEnabled = watch('server.uploads_disk_driver');\n  if (!isEnabled) return null;\n  return <FormSelect className=\"mb-30\" selectionMode=\"single\" name=\"server.uploads_disk_driver\" label={<Trans message=\"User Uploads Storage Method\" />} description={<Trans message=\"Where should user private file uploads be stored.\" />} onSelectionChange={() => {\n    clearErrors();\n  }}>\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n      <Item value=\"s3\">Amazon S3 (Or compatible service)</Item>\n      <Item value=\"dropbox\">Dropbox</Item>\n      <Item value=\"rackspace\">Rackspace</Item>\n    </FormSelect>;\n}\nfunction PublicUploadSection() {\n  const {\n    watch,\n    clearErrors\n  } = useFormContext();\n  const isEnabled = watch('server.public_disk_driver');\n  if (!isEnabled) return null;\n  return <FormSelect label={<Trans message=\"Public Uploads Storage Method\" />} selectionMode=\"single\" name=\"server.public_disk_driver\" description={<Trans message=\"Where should user public uploads (like avatars) be stored.\" />} onSelectionChange={() => {\n    clearErrors();\n  }}>\n      <Item value=\"local\">\n        <Trans message=\"Local Disk (Default)\" />\n      </Item>\n      <Item value=\"s3\">Amazon S3</Item>\n      <Item value=\"ftp\">FTP</Item>\n      <Item value=\"digitalocean_s3\">DigitalOcean Spaces</Item>\n      <Item value=\"backblaze_s3\">Backblaze</Item>\n    </FormSelect>;\n}\nfunction CredentialsSection() {\n  const {\n    watch\n  } = useFormContext();\n  const drives = [watch('server.uploads_disk_driver'), watch('server.public_disk_driver')];\n  if (drives[0] === 'local' && drives[1] === 'local') {\n    return null;\n  }\n  return <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\n      {isInvalid => {\n      if (drives.includes('s3')) {\n        return <S3Form isInvalid={isInvalid} />;\n      }\n      if (drives.includes('ftp')) {\n        return <FtpForm isInvalid={isInvalid} />;\n      }\n      if (drives.includes('dropbox')) {\n        return <DropboxForm isInvalid={isInvalid} />;\n      }\n      if (drives.includes('digitalocean_s3')) {\n        return <DigitalOceanForm isInvalid={isInvalid} />;\n      }\n      if (drives.includes('backblaze_s3')) {\n        return <BackblazeForm isInvalid={isInvalid} />;\n      }\n    }}\n    </SettingsErrorGroup>;\n}\nfunction S3Form({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_s3_key\" label={<Trans message=\"Amazon S3 key\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_s3_secret\" label={<Trans message=\"Amazon S3 secret\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_s3_region\" label={<Trans message=\"Amazon S3 region\" />} placeholder=\"us-east-1\" />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_s3_bucket\" label={<Trans message=\"Amazon S3 bucket\" />} required />\n      <FormTextField invalid={isInvalid} name=\"server.storage_s3_endpoint\" label={<Trans message=\"Amazon S3 endpoint\" />} description={<Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />} />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>;\n}\nfunction DigitalOceanForm({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_digitalocean_key\" label={<Trans message=\"DigitalOcean key\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_digitalocean_secret\" label={<Trans message=\"DigitalOcean secret\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_digitalocean_region\" label={<Trans message=\"DigitalOcean region\" />} pattern=\"[a-z0-9\\-]+\" placeholder=\"us-east-1\" required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_digitalocean_bucket\" label={<Trans message=\"DigitalOcean bucket\" />} required />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>;\n}\nfunction BackblazeForm({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_backblaze_key\" label={<Trans message=\"Backblaze KeyID\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_backblaze_secret\" label={<Trans message=\"Backblaze applicationKey\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_backblaze_region\" label={<Trans message=\"Backblaze Region\" />} pattern=\"[a-z0-9\\-]+\" placeholder=\"us-west-002\" required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_backblaze_bucket\" label={<Trans message=\"Backblaze bucket name\" />} required />\n      <S3DirectUploadField invalid={isInvalid} />\n    </Fragment>;\n}\nfunction S3DirectUploadField({\n  invalid\n}) {\n  const uploadCors = useUploadS3Cors();\n  const {\n    data: defaultSettings\n  } = useAdminSettings();\n  const s3DriverEnabled = defaultSettings?.server.uploads_disk_driver?.endsWith('s3') || defaultSettings?.server.public_disk_driver?.endsWith('s3');\n  return <Fragment>\n      <FormSwitch className=\"mt-30\" invalid={invalid} name=\"client.uploads.s3_direct_upload\" description={<div>\n            <p>\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\n            </p>\n            <p className=\"mt-10\">\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\n            </p>\n          </div>}>\n        <Trans message=\"Direct upload\" />\n      </FormSwitch>\n      <Button variant=\"flat\" color=\"primary\" size=\"xs\" className=\"mt-20\" onClick={() => {\n      uploadCors.mutate();\n    }} disabled={!s3DriverEnabled || uploadCors.isPending}>\n        <Trans message=\"Configure CORS\" />\n      </Button>\n    </Fragment>;\n}\nfunction FtpForm({\n  isInvalid\n}) {\n  return <>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_ftp_host\" label={<Trans message=\"FTP hostname\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_ftp_username\" label={<Trans message=\"FTP username\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_ftp_password\" label={<Trans message=\"FTP password\" />} type=\"password\" required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_ftp_root\" label={<Trans message=\"FTP directory\" />} placeholder=\"/\" />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.storage_ftp_port\" label={<Trans message=\"FTP port\" />} type=\"number\" min={0} placeholder=\"21\" />\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_passive\" className=\"mb-30\">\n        <Trans message=\"Passive\" />\n      </FormSwitch>\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\n        <Trans message=\"SSL\" />\n      </FormSwitch>\n    </>;\n}","import { Fragment } from 'react';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nexport function MailgunCredentials({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.mailgun_domain\" label={<Trans message=\"Mailgun domain\" />} description={<Trans message=\"Usually the domain of your site (site.com)\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.mailgun_secret\" label={<Trans message=\"Mailgun API key\" />} description={<Trans message=\"Should start with `key-`\" />} required />\n      <FormTextField invalid={isInvalid} name=\"server.mailgun_endpoint\" label={<Trans message=\"Mailgun endpoint\" />} description={<Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />} placeholder=\"api.eu.mailgun.net\" />\n    </Fragment>;\n}","import { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { FormSelect } from '@ui/forms/select/select';\nimport { Item } from '@ui/forms/listbox/item';\nexport function SmtpCredentials({\n  isInvalid\n}) {\n  return <>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.mail_host\" label={<Trans message=\"SMTP host\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.mail_username\" label={<Trans message=\"SMTP username\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" type=\"password\" name=\"server.mail_password\" label={<Trans message=\"SMTP password\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" type=\"number\" name=\"server.mail_port\" label={<Trans message=\"SMTP port\" />} />\n      <FormSelect selectionMode=\"single\" invalid={isInvalid} className=\"mb-30\" name=\"server.mail_encryption\" label={<Trans message=\"SMTP encryption\" />}>\n        <Item value=\"\">\n          <Trans message=\"None\" />\n        </Item>\n        <Item value=\"tls\">\n          <Trans message=\"TLS\" />\n        </Item>\n        <Item value=\"ssl\">\n          <Trans message=\"SSL\" />\n        </Item>\n      </FormSelect>\n    </>;\n}","import { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { Fragment } from 'react';\nexport function SesCredentials({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.ses_key\" label={<Trans message=\"SES key\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.ses_secret\" label={<Trans message=\"SES secret\" />} required />\n      <FormTextField invalid={isInvalid} name=\"server.ses_region\" label={<Trans message=\"SES region\" />} placeholder=\"us-east-1\" required />\n    </Fragment>;\n}","import { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nexport function PostmarkCredentials({\n  isInvalid\n}) {\n  return <FormTextField invalid={isInvalid} name=\"server.postmark_token\" label={<Trans message=\"Postmark token\" />} required />;\n}","import { createSvgIcon } from '@ui/icons/create-svg-icon';\nexport const GmailIcon = createSvgIcon([<path key=\"0\" fill=\"#4caf50\" d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\" />, <path key=\"1\" fill=\"#1e88e5\" d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\" />, <polygon key=\"2\" fill=\"#e53935\" points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\" />, <path key=\"3\" fill=\"#c62828\" d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\" />, <path key=\"4\" fill=\"#fbc02d\" d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\" />], 'Gmail', '0 0 48 48');","import { useFormContext } from 'react-hook-form';\nimport { useSocialLogin } from '@common/auth/requests/use-social-login';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { Button } from '@ui/buttons/button';\nimport { GmailIcon } from './gmail-icon';\nimport { Trans } from '@ui/i18n/trans';\nimport { Fragment } from 'react';\nexport function ConnectGmailPanel() {\n  const {\n    watch,\n    setValue\n  } = useFormContext();\n  const {\n    connectSocial\n  } = useSocialLogin();\n  const connectedEmail = watch('server.connectedGmailAccount');\n  const handleGmailConnect = async () => {\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\n    if (e?.status === 'SUCCESS') {\n      const email = e.callbackData.profile.email;\n      setValue('server.connectedGmailAccount', email);\n      toast(message('Connected gmail account: :email', {\n        values: {\n          email\n        }\n      }));\n    }\n  };\n  const connectButton = <Button variant=\"outline\" color=\"primary\" startIcon={<GmailIcon />} onClick={() => handleGmailConnect()}>\n      <Trans message=\"Connect gmail account\" />\n    </Button>;\n  const reconnectPanel = <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\n      <GmailIcon size=\"lg\" />\n      {connectedEmail}\n      <Button variant=\"text\" color=\"primary\" className=\"ml-auto\" onClick={() => handleGmailConnect()}>\n        <Trans message=\"Reconnect\" />\n      </Button>\n    </div>;\n  return <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Gmail account\" />\n      </div>\n      {connectedEmail ? reconnectPanel : connectButton}\n    </Fragment>;\n}","import { useFormContext } from 'react-hook-form';\nimport { Fragment } from 'react';\nimport { MailgunCredentials } from './mailgun-credentials';\nimport { SmtpCredentials } from './smtp-credentials';\nimport { SesCredentials } from './ses-credentials';\nimport { PostmarkCredentials } from './postmark-credentials';\nimport { ConnectGmailPanel } from './connect-gmail-panel';\nimport { FormSelect, Option } from '@ui/forms/select/select';\nimport { Trans } from '@ui/i18n/trans';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport { LearnMoreLink } from '@common/admin/settings/form/learn-more-link';\nexport function OutgoingMailGroup() {\n  const {\n    watch,\n    clearErrors\n  } = useFormContext();\n  const selectedDriver = watch('server.mail_driver');\n  const credentialForms = [];\n  if (selectedDriver === 'mailgun') {\n    credentialForms.push(MailgunCredentials);\n  }\n  if (selectedDriver === 'smtp') {\n    credentialForms.push(SmtpCredentials);\n  }\n  if (selectedDriver === 'ses') {\n    credentialForms.push(SesCredentials);\n  }\n  if (selectedDriver === 'postmark') {\n    credentialForms.push(PostmarkCredentials);\n  }\n  if (selectedDriver === 'gmailApi') {\n    credentialForms.push(ConnectGmailPanel);\n  }\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"mail_group\">\n      {isInvalid => <Fragment>\n          <FormSelect onSelectionChange={() => {\n        clearErrors();\n      }} invalid={isInvalid} selectionMode=\"single\" name=\"server.mail_driver\" label={<Trans message=\"Outgoing mail method\" />} description={<div>\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\n                <LearnMoreLink className=\"mt-8\" link=\"https://support.vebto.com/hc/articles/42/44/76/outgoing-emails\" />\n              </div>}>\n            <Option value=\"mailgun\">Mailgun</Option>\n            <Option value=\"gmailApi\">Gmail Api</Option>\n            <Option value=\"smtp\">SMTP</Option>\n            <Option value=\"postmark\">Postmark</Option>\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\n            <Option value=\"sendmail\">SendMail</Option>\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\n          </FormSelect>\n          {credentialForms.length ? <div className=\"mt-30\">\n              {credentialForms.map((CredentialsForm, index) => <CredentialsForm key={index} isInvalid={isInvalid} />)}\n            </div> : null}\n        </Fragment>}\n    </SettingsErrorGroup>;\n}","import { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { ExternalLink } from '@ui/buttons/external-link';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { Trans } from '@ui/i18n/trans';\nimport { OutgoingMailGroup } from './outgoing-mail-group';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nexport function OutgoingEmailSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Outgoing email settings\" />} description={<Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      server: {\n        mail_from_address: data.server.mail_from_address ?? '',\n        mail_from_name: data.server.mail_from_name ?? '',\n        mail_driver: data.server.mail_driver ?? '',\n        mailgun_domain: data.server.mailgun_domain ?? '',\n        mailgun_secret: data.server.mailgun_secret ?? '',\n        mailgun_endpoint: data.server.mailgun_endpoint ?? '',\n        mail_host: data.server.mail_host ?? '',\n        mail_username: data.server.mail_username ?? '',\n        mail_password: data.server.mail_password ?? '',\n        mail_port: data.server.mail_port ?? '',\n        mail_encryption: data.server.mail_encryption ?? '',\n        ses_key: data.server.ses_key ?? '',\n        ses_secret: data.server.ses_secret ?? '',\n        ses_region: data.server.ses_region ?? '',\n        postmark_token: data.server.postmark_token ?? '',\n        connectedGmailAccount: data.server.connectedGmailAccount ?? ''\n      },\n      client: {\n        mail: {\n          contact_page_address: data.client.mail?.contact_page_address ?? ''\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <FormTextField id=\"outgoing-emails\" className=\"mb-30\" type=\"email\" name=\"server.mail_from_address\" label={<Trans message=\"From address\" />} description={<Trans message=\"All outgoing application emails will be sent from this email address.\" />} required />\n      <ContactAddressSection />\n      <FormTextField className=\"mb-30\" name=\"server.mail_from_name\" label={<Trans message=\"From name\" />} description={<Trans message=\"All outgoing application emails will be sent using this name.\" />} required />\n      <SectionHelper color=\"warning\" description={<Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />} />\n      <SettingsSeparator />\n      <OutgoingMailGroup />\n    </AdminSettingsForm>;\n}\nfunction ContactAddressSection() {\n  const {\n    base_url\n  } = useSettings();\n  const contactPageUrl = `${base_url}/contact`;\n  const link = <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>;\n  return <FormTextField className=\"mb-30\" type=\"email\" name=\"client.mail.contact_page_address\" label={<Trans message=\"Contact page address\" />} description={<Trans values={{\n    contactPageUrl: link\n  }} message=\"Where emails from :contactPageUrl page should be sent to.\" />} />;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction clearCache() {\n  return apiClient.post('cache/flush').then(r => r.data);\n}\nexport function useClearCache() {\n  return useMutation({\n    mutationFn: () => clearCache(),\n    onSuccess: () => {\n      toast(message('Cache cleared'));\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport React from 'react';\nimport { FormSelect, Option } from '@ui/forms/select/select';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { useClearCache } from '@common/admin/settings/pages/cache-settings/clear-cache';\nimport { Button } from '@ui/buttons/button';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { Trans } from '@ui/i18n/trans';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nexport function CacheSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Cache settings\" />} description={<Trans message=\"Select cache provider and manually clear cache.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const clearCache = useClearCache();\n  const form = useForm({\n    defaultValues: {\n      server: {\n        cache_driver: data.server.cache_driver ?? 'file',\n        memcached_host: data.server.memcached_host ?? '',\n        memcached_port: data.server.memcached_port ?? ''\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <CacheSelect />\n      <Button type=\"button\" variant=\"outline\" size=\"xs\" color=\"primary\" disabled={clearCache.isPending} onClick={() => clearCache.mutate()}>\n        <Trans message=\"Clear cache\" />\n      </Button>\n      <SectionHelper color=\"warning\" className=\"mt-30\" description={<Trans message={'\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'} />} />\n    </AdminSettingsForm>;\n}\nfunction CacheSelect() {\n  const {\n    watch,\n    clearErrors\n  } = useFormContext();\n  const cacheDriver = watch('server.cache_driver');\n  let CredentialSection = null;\n  if (cacheDriver === 'memcached') {\n    CredentialSection = MemcachedCredentials;\n  }\n  return <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\n      {isInvalid => {\n      return <>\n            <FormSelect invalid={isInvalid} onSelectionChange={() => clearErrors()} selectionMode=\"single\" name=\"server.cache_driver\" label={<Trans message=\"Cache method\" />} description={<Trans message=\"Which method should be used for storing and retrieving cached items.\" />}>\n              <Option value=\"file\">\n                <Trans message=\"File (Default)\" />\n              </Option>\n              <Option value=\"array\">\n                <Trans message=\"None\" />\n              </Option>\n              <Option value=\"apc\">APC</Option>\n              <Option value=\"memcached\">Memcached</Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>}\n          </>;\n    }}\n    </SettingsErrorGroup>;\n}\nfunction MemcachedCredentials({\n  isInvalid\n}) {\n  return <>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.memcached_host\" label={<Trans message=\"Memcached host\" />} required />\n      <FormTextField invalid={isInvalid} type=\"number\" name=\"server.memcached_port\" label={<Trans message=\"Memcached port\" />} required />\n    </>;\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { ExternalLink } from '@ui/buttons/external-link';\nimport { Trans } from '@ui/i18n/trans';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nexport function LoggingSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Error logging\" />} description={<Trans message=\"Configure site error logging and related 3rd party integrations.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      server: {\n        sentry_dsn: data.server.sentry_dsn ?? ''\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <SentrySection />\n      <SectionHelper className=\"mt-30\" color=\"positive\" description={<Trans values={{\n      a: parts => <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\n    }} message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\" />} />\n    </AdminSettingsForm>;\n}\nfunction SentrySection() {\n  const {\n    clearErrors\n  } = useFormContext();\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"logging_group\">\n      {isInvalid => {\n      return <FormTextField onChange={() => clearErrors()} invalid={isInvalid} name=\"server.sentry_dsn\" type=\"url\" minLength={30} label={<Trans message=\"Sentry DSN\" />} />;\n    }}\n    </SettingsErrorGroup>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nexport function useQueueStats() {\n  return useQuery({\n    queryKey: ['queue-stats'],\n    queryFn: () => fetchStats(),\n    refetchInterval: 5000 // Poll every 5s\n  });\n}\nfunction fetchStats() {\n  return apiClient.get('horizon/api/stats').then(response => response.data);\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport React, { Fragment } from 'react';\nimport { FormSelect, Option } from '@ui/forms/select/select';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { useQueueStats } from '@common/admin/settings/requests/use-queue-stats';\nimport clsx from 'clsx';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { Button } from '@ui/buttons/button';\nimport { OpenInNewIcon } from '@ui/icons/material/OpenInNew';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { LearnMoreLink } from '@common/admin/settings/form/learn-more-link';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nexport function QueueSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Queue\" />} description={<Fragment>\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. They are fully optional and do not provide any additional functionality.\" />\n          <LearnMoreLink className=\"mt-6 text-sm\" link=\"https://support.vebto.com/hc/articles/224/queues\" />\n        </Fragment>}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      server: {\n        queue_driver: data.server.queue_driver ?? 'sync',\n        sqs_queue_key: data.server.sqs_queue_key ?? '',\n        sqs_queue_secret: data.server.sqs_queue_secret ?? '',\n        sqs_queue_prefix: data.server.sqs_queue_prefix ?? '',\n        sqs_queue_name: data.server.sqs_queue_name ?? '',\n        sqs_queue_region: data.server.sqs_queue_region ?? ''\n      }\n    }\n  });\n  const selectedDriver = form.watch('server.queue_driver');\n  return <AdminSettingsForm form={form}>\n      {selectedDriver !== 'sync' && <StatusWidget />}\n      <DriverSection />\n    </AdminSettingsForm>;\n}\nfunction StatusWidget() {\n  const {\n    base_url\n  } = useSettings();\n  const {\n    data\n  } = useQueueStats();\n  const status = data?.status;\n  return <div className=\"mb-30 flex h-32 items-center justify-between gap-14\">\n      {status && <Fragment>\n          <div className={clsx('min-w-108 flex w-max items-center gap-8 rounded-button px-10 py-4 text-sm capitalize', status === 'running' && 'bg-positive-lighter', status === 'inactive' && 'bg-danger-lighter', status === 'paused' && 'bg-chip')}>\n            <div className={clsx('h-10 w-10 rounded-full', status === 'running' && 'bg-positive', status === 'inactive' && 'bg-danger', status === 'paused' && 'bg-chip')} />\n            <Trans message={`Worker ${status}`} />\n          </div>\n          <Button variant=\"outline\" size=\"xs\" elementType=\"a\" href={`${base_url}/horizon`} target=\"_blank\" endIcon={<OpenInNewIcon />}>\n            <Trans message=\"Monitor\" />\n          </Button>\n        </Fragment>}\n    </div>;\n}\nfunction DriverSection() {\n  const {\n    watch,\n    clearErrors\n  } = useFormContext();\n  const queueDriver = watch('server.queue_driver');\n  let CredentialSection = null;\n  if (queueDriver === 'sqs') {\n    CredentialSection = SqsCredentials;\n  }\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"queue_group\">\n      {isInvalid => {\n      return <>\n            <FormSelect invalid={isInvalid} onSelectionChange={() => {\n          clearErrors();\n        }} selectionMode=\"single\" name=\"server.queue_driver\" label={<Trans message=\"Queue method\" />} required>\n              <Option value=\"sync\">\n                <Trans message=\"None (Default)\" />\n              </Option>\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\n              <Option value=\"database\">\n                <Trans message=\"Database\" />\n              </Option>\n              <Option value=\"sqs\">\n                <Trans message=\"SQS (Amazon simple queue service)\" />\n              </Option>\n              <Option value=\"redis\">Redis</Option>\n            </FormSelect>\n            {CredentialSection && <div className=\"mt-30\">\n                <CredentialSection isInvalid={isInvalid} />\n              </div>}\n          </>;\n    }}\n    </SettingsErrorGroup>;\n}\nfunction SqsCredentials({\n  isInvalid\n}) {\n  return <>\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.sqs_queue_key\" label={<Trans message=\"SQS queue key\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.sqs_queue_secret\" label={<Trans message=\"SQS queue secret\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.sqs_queue_prefix\" label={<Trans message=\"SQS queue prefix\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.sqs_queue_name\" label={<Trans message=\"SQS queue name\" />} required />\n      <FormTextField invalid={isInvalid} className=\"mb-30\" name=\"server.sqs_queue_region\" label={<Trans message=\"SQS queue region\" />} required />\n    </>;\n}","import { useForm, useFormContext, useWatch } from 'react-hook-form';\nimport React, { Fragment } from 'react';\nimport { FormSelect, Option } from '@ui/forms/select/select';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { LearnMoreLink } from '@common/admin/settings/form/learn-more-link';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nexport function WebsocketSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Websockets\" />} description={<Fragment>\n          <Trans message=\"Configure websockets provider responsible for all realtime functionality on the site.\" />\n          <LearnMoreLink className=\"mt-6 text-sm\" link=\"https://support.vebto.com/hc/articles/224/queues\" />\n        </Fragment>}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      server: {\n        broadcast_driver: data.server.broadcast_driver ?? 'null',\n        // pusher\n        pusher_app_id: data.server.pusher_app_id ?? '',\n        pusher_app_key: data.server.pusher_app_key ?? '',\n        pusher_app_secret: data.server.pusher_app_secret ?? '',\n        pusher_app_cluster: data.server.pusher_app_cluster ?? '',\n        // reverb\n        reverb_app_id: data.server.reverb_app_id ?? '',\n        reverb_app_key: data.server.reverb_app_key ?? '',\n        reverb_app_secret: data.server.reverb_app_secret ?? '',\n        reverb_host: data.server.reverb_host ?? '',\n        reverb_port: data.server.reverb_port ?? '',\n        reverb_scheme: data.server.reverb_scheme ?? 'https',\n        // ably\n        ably_app_id: data.server.ably_app_id ?? '',\n        ably_app_key: data.server.ably_app_key ?? '',\n        ably_app_secret: data.server.ably_app_secret ?? ''\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <DriverSection />\n    </AdminSettingsForm>;\n}\nfunction DriverSection() {\n  const {\n    clearErrors,\n    control\n  } = useFormContext();\n  const driver = useWatch({\n    control,\n    name: 'server.broadcast_driver'\n  });\n  let CredentialSection = null;\n  if (driver === 'pusher') {\n    CredentialSection = PusherFields;\n  } else if (driver === 'ably') {\n    CredentialSection = AblyFields;\n  }\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"queue_group\">\n      {isInvalid => <Fragment>\n          <FormSelect invalid={isInvalid} onSelectionChange={() => clearErrors()} selectionMode=\"single\" name=\"server.broadcast_driver\" label={<Trans message=\"Websockets provider\" />} required>\n            <Option value=\"null\">\n              <Trans message=\"None (Disabled)\" />\n            </Option>\n            <Option value=\"reverb\">Local</Option>\n            <Option value=\"pusher\">Pusher</Option>\n            <Option value=\"ably\">\n              <Trans message=\"Ably\" />\n            </Option>\n          </FormSelect>\n          {CredentialSection && <div className=\"mt-30\">\n              <CredentialSection isInvalid={isInvalid} />\n            </div>}\n        </Fragment>}\n    </SettingsErrorGroup>;\n}\nfunction PusherFields({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField name=\"server.pusher_app_id\" label={<Trans message=\"Pusher app ID\" />} className=\"mb-30\" required />\n      <FormTextField name=\"server.pusher_app_key\" label={<Trans message=\"Pusher app key\" />} className=\"mb-30\" required />\n      <FormTextField name=\"server.pusher_app_secret\" label={<Trans message=\"Pusher app secret\" />} className=\"mb-30\" required />\n      <FormTextField name=\"server.pusher_app_cluster\" label={<Trans message=\"Pusher app cluster\" />} className=\"mb-30\" placeholder=\"mt1\" required />\n    </Fragment>;\n}\nfunction AblyFields({\n  isInvalid\n}) {\n  return <Fragment>\n      <FormTextField name=\"server.ably_app_id\" label={<Trans message=\"Ably app ID\" />} className=\"mb-30\" required />\n      <FormTextField name=\"server.ably_app_key\" label={<Trans message=\"Ably app key\" />} className=\"mb-30\" required />\n      <FormTextField name=\"server.ably_app_secret\" label={<Trans message=\"Ably app secret\" />} className=\"mb-30\" required />\n    </Fragment>;\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport React, { useContext } from 'react';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { SiteConfigContext } from '@common/core/settings/site-config-context';\nimport { Trans } from '@ui/i18n/trans';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nexport function RecaptchaSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Recaptcha\" />} description={<Trans message=\"Configure google recaptcha integration and credentials.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const {\n    settings\n  } = useContext(SiteConfigContext);\n  const form = useForm({\n    defaultValues: {\n      client: {\n        recaptcha: {\n          enable: {\n            link_creation: data.client.recaptcha?.enable?.link_creation ?? false,\n            contact: data.client.recaptcha?.enable?.contact ?? false,\n            register: data.client.recaptcha?.enable?.register ?? false\n          },\n          site_key: data.client.recaptcha?.site_key ?? '',\n          secret_key: data.client.recaptcha?.secret_key ?? ''\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      {settings?.showRecaptchaLinkSwitch && <FormSwitch className=\"mb-30\" name=\"client.recaptcha.enable.link_creation\" description={<Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />}>\n          <Trans message=\"Link creation\" />\n        </FormSwitch>}\n      <FormSwitch className=\"mb-30\" name=\"client.recaptcha.enable.contact\" description={<Trans message={'Enable recaptcha integration for \"contact us\" page.'} />}>\n        <Trans message=\"Contact page\" />\n      </FormSwitch>\n      <FormSwitch className=\"mb-30\" name=\"client.recaptcha.enable.register\" description={<Trans message=\"Enable recaptcha integration for registration page.\" />}>\n        <Trans message=\"Registration page\" />\n      </FormSwitch>\n      <RecaptchaSection />\n    </AdminSettingsForm>;\n}\nfunction RecaptchaSection() {\n  const {\n    clearErrors\n  } = useFormContext();\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"recaptcha_group\">\n      {isInvalid => {\n      return <>\n            <FormTextField className=\"mb-30\" onChange={() => {\n          clearErrors();\n        }} invalid={isInvalid} name=\"client.recaptcha.site_key\" label={<Trans message=\"Recaptcha v3 site key\" />} />\n            <FormTextField onChange={() => {\n          clearErrors();\n        }} invalid={isInvalid} name=\"client.recaptcha.secret_key\" label={<Trans message=\"Recaptcha v3 secret key\" />} />\n          </>;\n    }}\n    </SettingsErrorGroup>;\n}","import React from 'react';\nimport { mergeProps, useObjectRef } from '@react-aria/utils';\nimport { useController } from 'react-hook-form';\nimport clsx from 'clsx';\nimport { useField } from './use-field';\nimport { getInputFieldClassNames } from './get-input-field-class-names';\nimport { Field } from './field';\nexport const FileField = React.forwardRef((props, ref) => {\n  const inputRef = useObjectRef(ref);\n  const {\n    fieldProps,\n    inputProps\n  } = useField({\n    ...props,\n    focusRef: inputRef\n  });\n  const inputFieldClassNames = getInputFieldClassNames(props);\n  return <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\n        <input type=\"file\" ref={inputRef} {...inputProps} className={clsx(inputFieldClassNames.input, 'py-8', 'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10')} />\n      </Field>;\n});\nexport function FormFileField({\n  name,\n  ...props\n}) {\n  const {\n    field: {\n      onChange,\n      onBlur,\n      ref\n    },\n    fieldState: {\n      invalid,\n      error\n    }\n  } = useController({\n    name\n  });\n  const [value, setValue] = React.useState('');\n  const formProps = {\n    onChange: e => {\n      onChange(e.target.files?.[0]);\n      setValue(e.target.value);\n    },\n    onBlur,\n    value,\n    invalid,\n    errorMessage: error?.message\n  };\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\n}","import { useForm, useFormContext } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { FormFileField } from '@ui/forms/input-field/file-field';\nimport { Trans } from '@ui/i18n/trans';\nimport React, { Fragment } from 'react';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsErrorGroup } from '@common/admin/settings/form/settings-error-group';\nexport function ReportsSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Analytics\" />} description={<Trans message=\"Configure google analytics integration and credentials.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      files: {\n        certificate: ''\n      },\n      server: {\n        analytics_property_id: data.server.analytics_property_id ?? ''\n      },\n      client: {\n        analytics: {\n          tracking_code: data.client.analytics?.tracking_code ?? '',\n          gchart_api_key: data.client.analytics?.gchart_api_key ?? ''\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <AnalyticsSection />\n    </AdminSettingsForm>;\n}\nfunction AnalyticsSection() {\n  const {\n    clearErrors\n  } = useFormContext();\n  return <SettingsErrorGroup separatorTop={false} separatorBottom={false} name=\"analytics_group\">\n      {isInvalid => <Fragment>\n          <FormFileField className=\"mb-30\" onChange={() => clearErrors()} invalid={isInvalid} name=\"files.certificate\" accept=\".json\" label={<Trans message=\"Google service account key file (.json)\" />} />\n          <FormTextField className=\"mb-30\" onChange={() => clearErrors()} invalid={isInvalid} name=\"server.analytics_property_id\" type=\"number\" label={<Trans message=\"Google analytics property ID\" />} />\n          <FormTextField className=\"mb-30\" onChange={() => clearErrors()} invalid={isInvalid} name=\"client.analytics.tracking_code\" placeholder=\"G-******\" min=\"1\" max=\"20\" description={<Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />} label={<Trans message=\"Google tag manager measurement ID\" />} />\n          <FormTextField name=\"client.analytics.gchart_api_key\" label={<Trans message=\"Google maps javascript API key\" />} description={<Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />} />\n        </Fragment>}\n    </SettingsErrorGroup>;\n}","import { useTrans } from '@ui/i18n/use-trans';\nimport { useFormContext } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Trans } from '@ui/i18n/trans';\nimport { message } from '@ui/i18n/message';\nimport { FormSelect } from '@ui/forms/select/select';\nimport { Item } from '@ui/forms/listbox/item';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { FormPermissionSelector } from '@common/auth/ui/permission-selector';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { Button } from '@ui/buttons/button';\nexport function CrupdateRolePageSettingsPanel({\n  isInternal = false\n}) {\n  const {\n    trans\n  } = useTrans();\n  const {\n    workspaces\n  } = useSettings();\n  const {\n    watch,\n    setValue\n  } = useFormContext();\n  const watchedType = watch('type');\n  return <>\n      <FormTextField label={<Trans message=\"Name\" />} name=\"name\" className=\"mb-20\" required />\n      <FormTextField label={<Trans message=\"Description\" />} name=\"description\" inputElementType=\"textarea\" placeholder={trans(message('Role description...'))} rows={4} className=\"mb-20\" />\n      {workspaces.integrated && <FormSelect label={<Trans message=\"Type\" />} name=\"type\" selectionMode=\"single\" className=\"mb-20\" description={<Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />}>\n          <Item value=\"sitewide\">\n            <Trans message=\"Sitewide\" />\n          </Item>\n          <Item value=\"workspace\">\n            <Trans message=\"Workspace\" />\n          </Item>\n        </FormSelect>}\n      {!isInternal && <>\n          <FormSwitch name=\"default\" className=\"mb-20\" description={<Trans message=\"Assign this role to new users automatically.\" />}>\n            <Trans message=\"Default\" />\n          </FormSwitch>\n          {watchedType === 'sitewide' && <FormSwitch name=\"guests\" description={<Trans message=\"Assign this role to guests (not logged in users).\" />}>\n              <Trans message=\"Guests\" />\n            </FormSwitch>}\n        </>}\n      <div className=\"mb-14 mt-30 flex items-end justify-between gap-12\">\n        <h2 className=\"text-lg leading-tight\">\n          <Trans message=\"Permissions\" />\n        </h2>\n        <Button variant=\"outline\" size=\"xs\" onClick={() => setValue('permissions', [])}>\n          <Trans message=\"Remove all\" />\n        </Button>\n      </div>\n      <FormPermissionSelector name=\"permissions\" valueListKey={watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'} />\n    </>;\n}","import { Trans } from '@ui/i18n/trans';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { useFieldArray, useForm, useFormContext } from 'react-hook-form';\nimport React, { Fragment } from 'react';\nimport { FormSelect } from '@ui/forms/select/select';\nimport { Item } from '@ui/forms/listbox/item';\nimport { MenuItemForm } from '../../menus/menu-item-form';\nimport { Button } from '@ui/buttons/button';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { AddMenuItemDialog } from '../../appearance/sections/menus/add-menu-item-dialog';\nimport { Accordion, AccordionItem } from '@ui/accordion/accordion';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport { SettingsSeparator } from '@common/admin/settings/form/settings-separator';\nimport { useValueLists } from '@common/http/value-lists';\nexport function GdprSettings() {\n  const optionQuery = useValueLists(['menuItemCategories']);\n  return <AdminSettingsLayout title={<Trans message=\"GDPR\" />} description={<Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />} isLoading={optionQuery.isLoading}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      client: {\n        cookie_notice: {\n          enable: data.client.cookie_notice?.enable ?? false,\n          button: data.client.cookie_notice?.button ?? {},\n          position: data.client.cookie_notice?.position ?? 'bottom'\n        },\n        registration: {\n          policies: data.client.registration?.policies ?? []\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <CookieNoticeSection />\n      <SettingsSeparator />\n      <RegistrationPoliciesSection />\n    </AdminSettingsForm>;\n}\nfunction CookieNoticeSection() {\n  const {\n    watch\n  } = useFormContext();\n  const noticeEnabled = watch('client.cookie_notice.enable');\n  return <div>\n      <FormSwitch name=\"client.cookie_notice.enable\" className=\"mb-20\" description={<Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />}>\n        <Trans message=\"Enable cookie notice\" />\n      </FormSwitch>\n      {noticeEnabled && <Fragment>\n          <div className=\"mb-20 border-b pb-6\">\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\n              <Trans message=\"Information button\" />\n            </div>\n            <div className=\"mb-20\">\n              <MenuItemForm hideRoleAndPermissionFields formPathPrefix=\"client.cookie_notice.button\" />\n            </div>\n          </div>\n          <FormSelect name=\"client.cookie_notice.position\" selectionMode=\"single\" label={<Trans message=\"Cookie notice position\" />} className=\"mb-20\">\n            <Item value=\"top\">\n              <Trans message=\"Top\" />\n            </Item>\n            <Item value=\"bottom\">\n              <Trans message=\"Bottom\" />\n            </Item>\n          </FormSelect>\n        </Fragment>}\n    </div>;\n}\nfunction RegistrationPoliciesSection() {\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: 'client.registration.policies'\n  });\n  const {\n    watch\n  } = useFormContext();\n  return <Fragment>\n      <div className=\"mb-6 text-sm\">\n        <Trans message=\"Registration policies\" />\n      </div>\n      <div className=\"text-xs text-muted\">\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\n      </div>\n      <Accordion className=\"mt-16\" variant=\"outline\">\n        {fields.map((field, index) => <AccordionItem key={field.id} label={field.label} chevronPosition=\"left\" endAppend={<IconButton variant=\"text\" color=\"danger\" size=\"sm\" onClick={() => remove(index)}>\n                <CloseIcon />\n              </IconButton>}>\n            <MenuItemForm hideRoleAndPermissionFields formPathPrefix={`client.registration.policies.${index}`} />\n          </AccordionItem>)}\n      </Accordion>\n      <DialogTrigger type=\"modal\" onClose={value => {\n      if (value) {\n        append(value);\n      }\n    }}>\n        <Button className=\"mt-12\" variant=\"link\" color=\"primary\" startIcon={<AddIcon />} size=\"xs\">\n          <Trans message=\"Add another policy\" />\n        </Button>\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\n      </DialogTrigger>\n    </Fragment>;\n}","import { Trans } from '@ui/i18n/trans';\nimport { FormRadioGroup } from '@ui/forms/radio-group/radio-group';\nimport { FormRadio } from '@ui/forms/radio-group/radio';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { AdminSettingsForm, AdminSettingsLayout } from '@common/admin/settings/form/admin-settings-form';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nexport function DriveSettings() {\n  return <AdminSettingsLayout title={<Trans message=\"Drive\" />} description={<Trans message=\"Configure defaults for drive user dashboard.\" />}>\n      {data => <Form data={data} />}\n    </AdminSettingsLayout>;\n}\nfunction Form({\n  data\n}) {\n  const form = useForm({\n    defaultValues: {\n      client: {\n        drive: {\n          default_view: data.client.drive?.default_view ?? 'list',\n          send_share_notification: data.client.drive?.send_share_notification ?? false\n        },\n        share: {\n          suggest_emails: data.client.share?.suggest_emails ?? false\n        }\n      }\n    }\n  });\n  return <AdminSettingsForm form={form}>\n      <FormRadioGroup required className=\"mb-30\" size=\"md\" name=\"client.drive.default_view\" orientation=\"vertical\" label={<Trans message=\"Default view mode\" />} description={<Trans message=\"Which view mode should user drive use by default.\" />}>\n        <FormRadio value=\"list\">\n          <Trans message=\"List\" />\n        </FormRadio>\n        <FormRadio value=\"grid\">\n          <Trans message=\"Grid\" />\n        </FormRadio>\n      </FormRadioGroup>\n      <FormSwitch className=\"mb-30\" name=\"client.drive.send_share_notification\" description={<Trans message=\"Send a notification to user when a file or folder is shared with them.\" />}>\n        <Trans message=\"Share notifications\" />\n      </FormSwitch>\n      <FormSwitch name=\"client.share.suggest_emails\" description={<Trans message=\"Suggest email address of existing users when sharing a file or folder.\" />}>\n        <Trans message=\"Suggest emails\" />\n      </FormSwitch>\n    </AdminSettingsForm>;\n}","import React, { Fragment } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { Card } from '@ui/card/card';\nimport { CardContent } from '@ui/card/card-content';\nimport { CardHeader } from '@ui/card/card-header';\nimport { CardTitle } from '@ui/card/card-title';\nimport { Form } from '@ui/forms/form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { FormSwitch } from '@ui/forms/toggle/switch';\nimport { FormSelect } from '@ui/forms/select/select';\nimport { Item } from '@ui/forms/listbox/item';\nimport { Button } from '@ui/buttons/button';\nimport { SaveIcon } from '@ui/icons/material/Save';\nimport { RestoreIcon } from '@ui/icons/material/Restore';\nimport { InfoIcon } from '@ui/icons/material/Info';\nimport { WarningIcon } from '@ui/icons/material/Warning';\nimport { SecurityIcon } from '@ui/icons/material/Security';\nimport { StorageIcon } from '@ui/icons/material/Storage';\nimport { SpeedIcon } from '@ui/icons/material/Speed';\nimport { EmailIcon } from '@ui/icons/material/Email';\nimport { Badge } from '@ui/badge/badge';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { useForm } from 'react-hook-form';\nimport { useMutation, useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { queryClient } from '@common/http/query-client';\n\nexport function TransferSettingsPage() {\n  const { data: settings, isLoading } = useQuery({\n    queryKey: ['transfer-settings'],\n    queryFn: () => apiClient.get('admin/settings/transfer').then(response => response.data),\n  });\n\n  const form = useForm({\n    defaultValues: settings || {},\n  });\n\n  const updateSettings = useMutation({\n    mutationFn: (values) => apiClient.put('admin/settings/transfer', values),\n    onSuccess: () => {\n      toast.positive(<Trans message=\"Transfer settings updated successfully\" />);\n      queryClient.invalidateQueries({ queryKey: ['transfer-settings'] });\n    },\n    onError: (error) => {\n      toast.danger(error.response?.data?.message || <Trans message=\"Failed to update settings\" />);\n    },\n  });\n\n  const resetToDefaults = useMutation({\n    mutationFn: () => apiClient.post('admin/settings/transfer/reset'),\n    onSuccess: () => {\n      toast.positive(<Trans message=\"Settings reset to defaults\" />);\n      queryClient.invalidateQueries({ queryKey: ['transfer-settings'] });\n    },\n  });\n\n  const handleSubmit = (values) => {\n    updateSettings.mutate(values);\n  };\n\n  const handleReset = () => {\n    if (confirm('Are you sure you want to reset all settings to defaults?')) {\n      resetToDefaults.mutate();\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">\n              <Trans message=\"Transfer Service Settings\" />\n            </h1>\n            <p className=\"text-muted mt-1\">\n              <Trans message=\"Configure your transfer service parameters and security settings\" />\n            </p>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              onClick={handleReset}\n              disabled={resetToDefaults.isPending}\n              startIcon={<RestoreIcon />}\n            >\n              <Trans message=\"Reset to Defaults\" />\n            </Button>\n          </div>\n        </div>\n\n        <Form form={form} onSubmit={handleSubmit}>\n          <div className=\"space-y-6\">\n            {/* General Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <StorageIcon className=\"text-primary\" />\n                  <Trans message=\"General Settings\" />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"max_file_size\"\n                    label={<Trans message=\"Maximum File Size (MB)\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10240\"\n                    description={<Trans message=\"Maximum size for individual files\" />}\n                  />\n                  <FormTextField\n                    name=\"max_total_size\"\n                    label={<Trans message=\"Maximum Total Transfer Size (MB)\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"51200\"\n                    description={<Trans message=\"Maximum total size for all files in a transfer\" />}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"max_files_per_transfer\"\n                    label={<Trans message=\"Maximum Files per Transfer\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"1000\"\n                    description={<Trans message=\"Maximum number of files in a single transfer\" />}\n                  />\n                  <FormSelect\n                    name=\"default_expiry\"\n                    label={<Trans message=\"Default Expiry Period\" />}\n                    description={<Trans message=\"Default expiration time for new transfers\" />}\n                  >\n                    <Item value=\"1_hour\">\n                      <Trans message=\"1 Hour\" />\n                    </Item>\n                    <Item value=\"24_hours\">\n                      <Trans message=\"24 Hours\" />\n                    </Item>\n                    <Item value=\"7_days\">\n                      <Trans message=\"7 Days\" />\n                    </Item>\n                    <Item value=\"30_days\">\n                      <Trans message=\"30 Days\" />\n                    </Item>\n                    <Item value=\"never\">\n                      <Trans message=\"Never\" />\n                    </Item>\n                  </FormSelect>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSwitch\n                    name=\"allow_anonymous_transfers\"\n                    description={<Trans message=\"Allow users to create transfers without registration\" />}\n                  >\n                    <Trans message=\"Allow Anonymous Transfers\" />\n                  </FormSwitch>\n                  <FormSwitch\n                    name=\"require_email_verification\"\n                    description={<Trans message=\"Require email verification for anonymous transfers\" />}\n                  >\n                    <Trans message=\"Require Email Verification\" />\n                  </FormSwitch>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Security Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <SecurityIcon className=\"text-success\" />\n                  <Trans message=\"Security Settings\" />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSwitch\n                    name=\"enable_password_protection\"\n                    description={<Trans message=\"Allow users to password protect their transfers\" />}\n                  >\n                    <Trans message=\"Enable Password Protection\" />\n                  </FormSwitch>\n                  <FormSwitch\n                    name=\"enable_download_notifications\"\n                    description={<Trans message=\"Notify senders when files are downloaded\" />}\n                  >\n                    <Trans message=\"Enable Download Notifications\" />\n                  </FormSwitch>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"max_download_attempts\"\n                    label={<Trans message=\"Maximum Download Attempts\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"100\"\n                    description={<Trans message=\"Maximum number of download attempts per transfer\" />}\n                  />\n                  <FormSelect\n                    name=\"virus_scanning\"\n                    label={<Trans message=\"Virus Scanning\" />}\n                    description={<Trans message=\"Enable virus scanning for uploaded files\" />}\n                  >\n                    <Item value=\"disabled\">\n                      <Trans message=\"Disabled\" />\n                    </Item>\n                    <Item value=\"enabled\">\n                      <Trans message=\"Enabled\" />\n                    </Item>\n                    <Item value=\"quarantine\">\n                      <Trans message=\"Enabled with Quarantine\" />\n                    </Item>\n                  </FormSelect>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"blocked_file_extensions\"\n                    label={<Trans message=\"Blocked File Extensions\" />}\n                    placeholder=\"exe,bat,com,scr\"\n                    description={<Trans message=\"Comma-separated list of blocked file extensions\" />}\n                  />\n                  <FormTextField\n                    name=\"allowed_domains\"\n                    label={<Trans message=\"Allowed Email Domains\" />}\n                    placeholder=\"company.com,partner.org\"\n                    description={<Trans message=\"Restrict transfers to specific email domains (leave empty for all)\" />}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Performance Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <SpeedIcon className=\"text-info\" />\n                  <Trans message=\"Performance Settings\" />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"chunk_size\"\n                    label={<Trans message=\"Upload Chunk Size (MB)\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"100\"\n                    description={<Trans message=\"Size of upload chunks for large files\" />}\n                  />\n                  <FormTextField\n                    name=\"concurrent_uploads\"\n                    label={<Trans message=\"Concurrent Uploads\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"10\"\n                    description={<Trans message=\"Maximum number of concurrent file uploads\" />}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSwitch\n                    name=\"enable_compression\"\n                    description={<Trans message=\"Compress files during upload to save bandwidth\" />}\n                  >\n                    <Trans message=\"Enable File Compression\" />\n                  </FormSwitch>\n                  <FormSwitch\n                    name=\"enable_deduplication\"\n                    description={<Trans message=\"Remove duplicate files to save storage space\" />}\n                  >\n                    <Trans message=\"Enable File Deduplication\" />\n                  </FormSwitch>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Email Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <EmailIcon className=\"text-warning\" />\n                  <Trans message=\"Email Settings\" />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormTextField\n                    name=\"sender_email\"\n                    label={<Trans message=\"Sender Email Address\" />}\n                    type=\"email\"\n                    description={<Trans message=\"Email address used for transfer notifications\" />}\n                  />\n                  <FormTextField\n                    name=\"sender_name\"\n                    label={<Trans message=\"Sender Name\" />}\n                    description={<Trans message=\"Name displayed in transfer notification emails\" />}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSwitch\n                    name=\"send_upload_confirmation\"\n                    description={<Trans message=\"Send confirmation email when transfer is uploaded\" />}\n                  >\n                    <Trans message=\"Send Upload Confirmation\" />\n                  </FormSwitch>\n                  <FormSwitch\n                    name=\"send_expiry_reminder\"\n                    description={<Trans message=\"Send reminder email before transfer expires\" />}\n                  >\n                    <Trans message=\"Send Expiry Reminder\" />\n                  </FormSwitch>\n                </div>\n\n                <FormTextField\n                  name=\"custom_email_footer\"\n                  label={<Trans message=\"Custom Email Footer\" />}\n                  multiline\n                  rows={3}\n                  description={<Trans message=\"Custom footer text for transfer notification emails\" />}\n                />\n              </CardContent>\n            </Card>\n\n            {/* Storage Settings */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <StorageIcon className=\"text-purple-500\" />\n                  <Trans message=\"Storage Settings\" />\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSelect\n                    name=\"storage_driver\"\n                    label={<Trans message=\"Storage Driver\" />}\n                    description={<Trans message=\"Storage backend for transfer files\" />}\n                  >\n                    <Item value=\"local\">\n                      <Trans message=\"Local Storage\" />\n                    </Item>\n                    <Item value=\"s3\">\n                      <Trans message=\"Amazon S3\" />\n                    </Item>\n                    <Item value=\"gcs\">\n                      <Trans message=\"Google Cloud Storage\" />\n                    </Item>\n                    <Item value=\"azure\">\n                      <Trans message=\"Azure Blob Storage\" />\n                    </Item>\n                  </FormSelect>\n                  <FormTextField\n                    name=\"cleanup_interval\"\n                    label={<Trans message=\"Cleanup Interval (hours)\" />}\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"168\"\n                    description={<Trans message=\"How often to clean up expired transfers\" />}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <FormSwitch\n                    name=\"auto_cleanup_expired\"\n                    description={<Trans message=\"Automatically delete expired transfers\" />}\n                  >\n                    <Trans message=\"Auto Cleanup Expired Transfers\" />\n                  </FormSwitch>\n                  <FormSwitch\n                    name=\"backup_before_cleanup\"\n                    description={<Trans message=\"Create backup before deleting expired transfers\" />}\n                  >\n                    <Trans message=\"Backup Before Cleanup\" />\n                  </FormSwitch>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Save Button */}\n            <div className=\"flex justify-end\">\n              <Button\n                type=\"submit\"\n                disabled={updateSettings.isPending}\n                startIcon={<SaveIcon />}\n              >\n                <Trans message=\"Save Settings\" />\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </Fragment>\n  );\n}"],"names":["Radio","forwardRef","props","ref","children","autoFocus","size","invalid","isFirst","display","domProps","inputRef","useObjectRef","useAutoFocus","sizeClassNames","getSizeClassNames","jsxs","clsx","jsx","FormRadio","onChange","onBlur","value","useController","formProps","mergeProps","RadioGroup","style","getInputFieldClassNames","label","className","orientation","disabled","required","errorMessage","description","labelProps","id","useId","name","Children","child","isValidElement","cloneElement","FormRadioGroup","error","appSettingsRoutes","lazyAdminRoute","useAdminSettings","useQuery","adminSettingsQueryOptions","queryOptions","fetchAdminSettings","prepareSettingsForHookForm","apiClient","r","obj","key","AppSettingsNavConfig","message","filteredSettingsNavConfig","getBootstrapData","SettingsNavConfig","AdminSettingsPage","propsNavConfig","isMobile","useIsMobileMediaQuery","navConfig","useMemo","a","b","StaticPageTitle","Trans","MobileNav","DesktopNav","Outlet","pathname","useLocation","navigate","useNavigate","Select","newPage","Option","item","NavLink","isActive","useGenerateSitemap","useMutation","generate","toast","err","showHttpErrorToast","useUpdateAdminSettings","form","updateAdminSettings","response","queryClient","onFormQueryError","client","server","files","formData","file","SettingsSeparator","SettingsFormLoadingIndicator","m","opacityAnimation","Skeleton","AdminSettingsForm","updateSettings","isDirty","useFormState","Form","errors","keys","values","Button","ProgressCircle","BlockerDialog","AdminSettingsLayout","title","headerMargin","isLoading","data","Fragment","AnimatePresence","LearnMoreLink","link","site","useSettings","LinkIcon","ExternalLink","GeneralSettings","useForm","_a","_b","_c","_d","SiteUrlSection","HomepageSection","ThemeSection","SitemapSection","append","isInvalid","chunks","TextField","watch","useFormContext","homepage","useContext","SiteConfigContext","useValueLists","selectedType","FormSelect","option","category","themes","useBootstrapDataStore","s","theme","FormSwitch","generateSitemap","base_url","url","SettingsErrorGroup","separatorBottom","separatorTop","useRef","useEffect","JsonChipField","arrayValue","mixedValue","ChipField","SubscriptionSettings","trans","useTrans","_e","_g","_f","_i","_h","_k","_j","_l","_m","_n","_o","_p","_q","Tabs","TabList","Tab","TabPanels","TabPanel","PaypalSection","StripeSection","FormTextField","paypalIsEnabled","stripeEnabled","LocalizationSettings","optionQuery","timezones","localizations","today","useCurrentDateTime","groupName","Section","timezone","locale","DateFormatPresets","format","options","FormattedDate","AuthenticationSettings","_r","_s","_t","_u","_v","_w","EmailConfirmationSection","EnvatoSection","GoogleSection","FacebookSection","TwitterSection","MailNotSetupWarning","text","Link","settings","envatoLoginEnabled","googleLoginEnabled","facebookLoginEnabled","twitterLoginEnabled","fetchMaxServerUploadSize","useMaxServerUploadSize","useGenerateDropboxRefreshToken","generateToken","payload","DropboxForm","setValue","appKey","appSecret","DialogTrigger","refreshToken","DropboxRefreshTokenDialog","formId","close","useDialogContext","generateRefreshToken","Dialog","DialogHeader","DialogBody","DialogFooter","useUploadS3Cors","uploadCors","UploadingSettings","PrivateUploadSection","PublicUploadSection","CredentialsSection","FormFileSizeField","MaxUploadSizeSection","SectionHelper","clearErrors","Item","drives","S3Form","FtpForm","DigitalOceanForm","BackblazeForm","S3DirectUploadField","defaultSettings","s3DriverEnabled","MailgunCredentials","SmtpCredentials","SesCredentials","PostmarkCredentials","GmailIcon","createSvgIcon","ConnectGmailPanel","connectSocial","useSocialLogin","connectedEmail","handleGmailConnect","e","email","connectButton","reconnectPanel","OutgoingMailGroup","selectedDriver","credentialForms","CredentialsForm","index","OutgoingEmailSettings","ContactAddressSection","contactPageUrl","clearCache","useClearCache","CacheSettings","CacheSelect","cacheDriver","CredentialSection","MemcachedCredentials","LoggingSettings","SentrySection","parts","useQueueStats","fetchStats","QueueSettings","StatusWidget","DriverSection","status","OpenInNewIcon","queueDriver","SqsCredentials","WebsocketSettings","control","driver","useWatch","PusherFields","AblyFields","RecaptchaSettings","RecaptchaSection","FileField","React","fieldProps","inputProps","useField","inputFieldClassNames","Field","FormFileField","ReportsSettings","AnalyticsSection","CrupdateRolePageSettingsPanel","isInternal","workspaces","watchedType","FormPermissionSelector","GdprSettings","CookieNoticeSection","RegistrationPoliciesSection","noticeEnabled","MenuItemForm","fields","remove","useFieldArray","Accordion","field","AccordionItem","IconButton","CloseIcon","AddIcon","AddMenuItemDialog","DriveSettings","TransferSettingsPage","resetToDefaults","handleSubmit","handleReset","RestoreIcon","Card","CardHeader","CardTitle","StorageIcon","CardContent","SecurityIcon","SpeedIcon","EmailIcon","SaveIcon"],"mappings":"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"}