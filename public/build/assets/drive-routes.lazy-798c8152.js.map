{"version":3,"file":"drive-routes.lazy-798c8152.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../../common/foundation/resources/client/ui/library/progress/meter.jsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.jsx","../../../common/foundation/resources/client/workspace/requests/create-workspace.jsx","../../../common/foundation/resources/client/workspace/new-workspace-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/workspace-with-members.jsx","../../../common/foundation/resources/client/workspace/requests/invite-members.jsx","../../../common/foundation/resources/client/workspace/requests/resend-invite.jsx","../../../common/foundation/resources/client/workspace/requests/change-role.jsx","../../../common/foundation/resources/client/workspace/requests/remove-member.jsx","../../../common/foundation/resources/client/workspace/leave-workspace-confirmation.jsx","../../../common/foundation/resources/client/ui/library/utils/string/is-email.jsx","../../../common/foundation/resources/client/workspace/workspace-members-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/update-workspace.jsx","../../../common/foundation/resources/client/workspace/rename-workspace-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/delete-workspace.jsx","../../../common/foundation/resources/client/billing/upgrade/policy-fail-message.jsx","../../../common/foundation/resources/client/workspace/workspace-selector.jsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.jsx","../../../resources/client/drive/menu-positions.jsx","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.jsx","../../../resources/client/drive/files/queries/use-move-entries.jsx","../../../resources/client/drive/files/utils/can-move-entries-into.jsx","../../../resources/client/drive/files/use-folder-drop-action.jsx","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.jsx","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-context.jsx","../../../common/foundation/resources/client/ui/library/tree/render-tree.jsx","../../../common/foundation/resources/client/ui/library/tree/tree.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-label.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-item.jsx","../../../resources/client/drive/layout/sidebar/folder-tree.jsx","../../../resources/client/drive/files/queries/use-delete-entries.jsx","../../../resources/client/drive/layout/sidebar/sidebar-menu.jsx","../../../resources/client/drive/layout/create-new-button.jsx","../../../resources/client/drive/layout/sidebar/sidebar.jsx","../../../resources/client/drive/files/queries/use-paginated-entries.jsx","../../../resources/client/drive/search/drive-search-filters.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-layout-context.jsx","../../../resources/client/drive/search/search-filter-list.jsx","../../../common/foundation/resources/client/ui/library/interactions/utils/restrict-resizable-within-boundary.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selectable.jsx","../../../common/foundation/resources/client/ui/library/interactions/utils/rects-intersect.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selection-box.jsx","../../../resources/client/drive/shareable-link/queries/create-shareable-link.jsx","../../../resources/client/drive/files/queries/use-add-star-to-entries.jsx","../../../resources/client/drive/files/queries/use-remove-star-from-entries.jsx","../../../resources/client/drive/files/queries/use-duplicate-entries.jsx","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.jsx","../../../resources/client/drive/files/queries/use-restore-entries.jsx","../../../resources/client/drive/entry-actions/use-entry-actions.jsx","../../../resources/client/drive/entry-actions/use-drive-page-actions.jsx","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.jsx","../../../resources/client/drive/files/queries/use-entries.jsx","../../../resources/client/drive/files/use-selected-entries.jsx","../../../resources/client/drive/entry-actions/entry-action-list.jsx","../../../resources/client/drive/files/drive-context-menu.jsx","../../../common/foundation/resources/client/ui/library/utils/hooks/is-touch-device.jsx","../../../resources/client/drive/file-view/use-file-view-dnd.jsx","../../../resources/client/drive/file-view/file-table/file-table-row.jsx","../../../resources/client/drive/file-view/use-view-item-action-handler.jsx","../../../resources/client/drive/file-view/file-table/file-table-columns.jsx","../../../resources/client/drive/file-view/file-table/file-table.jsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.jsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.jsx","../../../resources/client/drive/file-view/file-grid/file-grid.jsx","../../../resources/client/drive/layout/sorting/available-sorts.jsx","../../../resources/client/drive/layout/sorting/entries-sort-button.jsx","../../../resources/client/drive/layout/sorting/drive-sort-button.jsx","../../../resources/client/drive/files/queries/use-folder-path.jsx","../../../resources/client/drive/page-breadcrumbs.jsx","../../../common/foundation/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.jsx","../../../common/foundation/resources/client/admin/ads/ad-host.jsx","../../../resources/client/drive/drop-target-mask.jsx","../../../resources/client/drive/file-view/file-view.jsx","../../../common/foundation/resources/client/uploads/uploader/upload-analytics-utils.jsx","../../../common/foundation/resources/client/uploads/uploader/use-upload-analytics.jsx","../../../resources/client/drive/uploading/upload-queue-item.jsx","../../../resources/client/drive/uploading/upload-queue.jsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.jsx","../../../common/foundation/resources/client/tags/use-taggable-tags.jsx","../../../common/foundation/resources/client/tags/use-detach-tag-from-taggables.jsx","../../../common/foundation/resources/client/tags/use-tags.jsx","../../../common/foundation/resources/client/tags/use-attach-tag-to-taggables.jsx","../../../common/foundation/resources/client/tags/manage-tags-dialog.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-tags.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.jsx","../../../resources/client/drive/details-sidebar/details-sidebar.jsx","../../../resources/client/drive/files/queries/use-rename-entry.jsx","../../../resources/client/drive/files/dialogs/rename-entry-dialog.jsx","../../../resources/client/drive/files/queries/create-folder.jsx","../../../resources/client/drive/files/dialogs/new-folder-dialog.jsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.jsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.jsx","../../../resources/client/drive/files/drive-entry.jsx","../../../resources/client/drive/share-dialog/permission-selector.jsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.jsx","../../../resources/client/drive/share-dialog/member-list.jsx","../../../resources/client/drive/share-dialog/share-panel.jsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.jsx","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.jsx","../../../common/foundation/resources/client/ui/library/utils/string/random-string.jsx","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.jsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.jsx","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.jsx","../../../resources/client/drive/share-dialog/share-dialog.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.jsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.jsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.jsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.jsx","../../../resources/client/drive/search/navbar-search.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/use-drag-monitor.jsx","../../../resources/client/drive/file-view/entry-drag-preview.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-content-header.jsx","../../../resources/client/drive/layout/drive-content-header.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-sidenav.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-navbar.jsx","../../../common/foundation/resources/client/ui/library/utils/hooks/use-block-body-overflow.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-layout.jsx","../../../resources/client/drive/layout/drive-layout.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.jsx","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.jsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options) {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior()\n    });\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const parentResult = super.createResult(query, options);\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n    return result;\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import React from 'react';\nimport { ProgressBarBase } from '@ui/progress/progress-bar-base';\nexport function Meter(props) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}","import React from 'react';\nimport { useStorageSummary } from './storage-summary';\nimport { StorageIcon } from '@ui/icons/material/Storage';\nimport { Meter } from '@ui/progress/meter';\nimport { Trans } from '@ui/i18n/trans';\nimport clsx from 'clsx';\nexport function StorageMeter() {\n  const {\n    isLoading,\n    data\n  } = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans message=\":used of :available used\" values={{\n      used: data?.usedFormatted,\n      available: data?.availableFormatted\n    }} />\n    </span>;\n  return <div className=\"mt-24 flex items-start gap-16 border-t pl-24 pt-24\">\n      <StorageIcon className=\"-mt-4 icon-md\" />\n      <Meter className=\"max-w-144 flex-auto\" size=\"xs\" value={data?.percentage} label={label} showValueLabel={false} labelPosition=\"bottom\" />\n    </div>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { onFormQueryError } from '../../errors/on-form-query-error';\nimport { message } from '@ui/i18n/message';\nexport function useCreateWorkspace(form) {\n  return useMutation({\n    mutationFn: props => createWorkspace(props),\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}\nfunction createWorkspace(props) {\n  return apiClient.post('workspace', props).then(r => r.data);\n}","import { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Form } from '@ui/forms/form';\nimport { Button } from '@ui/buttons/button';\nimport { useCreateWorkspace } from './requests/create-workspace';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nexport function NewWorkspaceDialog() {\n  const form = useForm();\n  const {\n    formId,\n    close\n  } = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form form={form} id={formId} onSubmit={() => {\n        createWorkspace.mutate(form.getValues(), {\n          onSuccess: response => {\n            close(response.workspace.id);\n          }\n        });\n      }}>\n          <FormTextField name=\"name\" autoFocus label={<Trans message=\"Workspace name\" />} minLength={3} required />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId} disabled={createWorkspace.isPending}>\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { apiClient } from '../../http/query-client';\nfunction fetchWorkspaceWithMembers(workspaceId) {\n  return apiClient.get(`workspace/${workspaceId}`).then(response => response.data);\n}\nexport function useWorkspaceWithMembers(workspaceId) {\n  return useQuery({\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction InviteMembers({\n  workspaceId,\n  ...other\n}) {\n  return apiClient.post(`workspace/${workspaceId}/invite`, other).then(r => r.data);\n}\nexport function useInviteMembers() {\n  return useMutation({\n    mutationFn: props => InviteMembers(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient } from '../../http/query-client';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}) {\n  return apiClient.post(`workspace/${workspaceId}/${inviteId}/resend`, other).then(r => r.data);\n}\nexport function useResendInvite() {\n  return useMutation({\n    mutationFn: props => ResendInvite(props),\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction ChangeRole({\n  workspaceId,\n  member,\n  ...other\n}) {\n  const modelType = member.model_type;\n  const memberId = member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient.post(`workspace/${workspaceId}/${modelType}/${memberId}/change-role`, other).then(r => r.data);\n}\nexport function useChangeRole() {\n  return useMutation({\n    mutationFn: props => ChangeRole(props),\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { useAuth } from '../../auth/use-auth';\nimport { useActiveWorkspaceId } from '../active-workspace-id-context';\nimport { PersonalWorkspace } from '../user-workspaces';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType\n}) {\n  const endpoint = memberType === 'invite' ? `workspace/invite/${memberId}` : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\nexport function useRemoveMember() {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const {\n    user\n  } = useAuth();\n  return useMutation({\n    mutationFn: props => removeMember(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nexport function LeaveWorkspaceConfirmation({\n  onConfirm,\n  isLoading\n}) {\n  return <ConfirmationDialog isDanger title={<Trans message=\"Leave workspace\" />} isLoading={isLoading} onConfirm={onConfirm} body={<div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>} confirm={<Trans message=\"Leave\" />} />;\n}","const matcher = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nexport function isEmail(string) {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}","import { useEffect, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { useWorkspaceWithMembers } from './requests/workspace-with-members';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { GroupIcon } from '@ui/icons/material/Group';\nimport { useAuth } from '../auth/use-auth';\nimport { ChipField } from '@ui/forms/input-field/chip-field/chip-field';\nimport { useValueLists } from '../http/value-lists';\nimport { Button } from '@ui/buttons/button';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { useInviteMembers } from './requests/invite-members';\nimport { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { useResendInvite } from './requests/resend-invite';\nimport { useChangeRole } from './requests/change-role';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useRemoveMember } from './requests/remove-member';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { ExitToAppIcon } from '@ui/icons/material/ExitToApp';\nimport { toast } from '@ui/toast/toast';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { message } from '@ui/i18n/message';\nimport { LeaveWorkspaceConfirmation } from './leave-workspace-confirmation';\nimport { isEmail } from '@ui/utils/string/is-email';\nimport { Avatar } from '@ui/avatar/avatar';\nexport function WorkspaceMembersDialog({\n  workspace\n}) {\n  const {\n    data,\n    isLoading\n  } = useWorkspaceWithMembers(workspace.id);\n  return <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? <div className=\"flex min-h-[238px] items-center justify-center\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div> : <Manager workspace={data.workspace} />}\n      </DialogBody>\n    </Dialog>;\n}\nfunction Manager({\n  workspace\n}) {\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  const members = [...(workspace.members || []), ...(workspace.invites || [])];\n  const shouldHideOtherMembers = !can.update && !can.delete;\n  return <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans message=\"Members of `:workspace`\" values={{\n        workspace: workspace.name\n      }} />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => {\n        if (shouldHideOtherMembers && member.id !== user?.id) {\n          return null;\n        }\n        return <MemberListItem key={`${member.model_type}.${member.id}`} workspace={workspace} member={member} />;\n      })}\n        {shouldHideOtherMembers && <div className=\"text-muted\">\n            <Trans message=\"And [one one other member|:count other members]\" values={{\n          count: members.length\n        }} />\n          </div>}\n      </AnimatePresence>\n    </div>;\n}\nfunction MemberListItem({\n  workspace,\n  member\n}) {\n  return <m.div initial={{\n    x: '-100%',\n    opacity: 0\n  }} animate={{\n    x: 0,\n    opacity: 1\n  }} exit={{\n    x: '100%',\n    opacity: 0\n  }} transition={{\n    type: 'tween',\n    duration: 0.125\n  }} className=\"mb-20 flex items-start gap-14 text-sm\" key={`${member.model_type}.${member.id}`}>\n      <Avatar className=\"flex-shrink-0\" size=\"lg\" circle label={member.name} src={member.image} fallback=\"initials\" />\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>;\n}\nfunction usePermissions(workspace) {\n  const {\n    user: authUser\n  } = useAuth();\n  const response = {\n    update: false,\n    invite: false,\n    delete: false\n  };\n  const permissions = ['update', 'invite', 'delete'];\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] = authMember.is_owner || !!authMember.permissions?.find(p => p.name === `workspace_members.${permission}`);\n    });\n  }\n  return response;\n}\nfunction MemberActions({\n  workspace,\n  member\n}) {\n  const [selectedRole, setSelectedRole] = useState(member.role_id);\n  const changeRole = useChangeRole();\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser = member.model_type === 'member' && user?.id === member.id;\n  const roleSelector = !can.update || isOwner || isCurrentUser ? <div className=\"ml-auto text-muted first:capitalize\">\n        <Trans message={member.role_name} />\n      </div> : <RoleMenuTrigger className=\"ml-auto flex-shrink-0\" size=\"xs\" value={selectedRole} isDisabled={changeRole.isPending} onChange={roleId => {\n    setSelectedRole(roleId);\n    changeRole.mutate({\n      roleId,\n      workspaceId: workspace.id,\n      member\n    });\n  }} />;\n  return <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && <RemoveMemberButton type={isCurrentUser ? 'leave' : 'remove'} member={member} workspace={workspace} />}\n    </>;\n}\nfunction InviteChipField({\n  workspace\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [chips, setChips] = useState([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = chip => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState();\n  const inviteMembers = useInviteMembers();\n  const {\n    data\n  } = useValueLists(['workspaceRoles']);\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n  return <div className=\"mb-30\">\n      <ChipField value={chips} onChange={setChips} displayWith={displayWith} validateWith={chip => {\n      const invalid = !isEmail(chip.description);\n      return {\n        ...chip,\n        invalid,\n        errorMessage: invalid ? trans({\n          message: 'Not a valid email'\n        }) : undefined\n      };\n    }} placeholder={trans({\n      message: 'Enter email addresses'\n    })} label={<Trans message=\"Invite people\" />} />\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? <Button variant=\"flat\" color=\"primary\" size=\"sm\" disabled={inviteMembers.isPending || !allEmailsValid} onClick={() => {\n        inviteMembers.mutate({\n          emails: chips.map(c => displayWith(c)),\n          roleId: selectedRole,\n          workspaceId: workspace.id\n        }, {\n          onSuccess: () => {\n            setChips([]);\n          }\n        });\n      }}>\n            <Trans message=\"Invite\" />\n          </Button> : null}\n      </div>\n    </div>;\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type\n}) {\n  const removeMember = useRemoveMember();\n  const {\n    close\n  } = useDialogContext();\n  return <DialogTrigger type=\"modal\" onClose={isConfirmed => {\n    if (isConfirmed) {\n      removeMember.mutate({\n        workspaceId: workspace.id,\n        memberId: member.id,\n        memberType: member.model_type\n      });\n      if (type === 'leave') {\n        close();\n        toast(message('Left workspace'));\n      }\n    }\n  }}>\n      <IconButton size=\"md\" className=\"flex-shrink-0 text-muted\" disabled={removeMember.isPending}>\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? <LeaveWorkspaceConfirmation /> : <RemoveMemberConfirmation member={member} />}\n    </DialogTrigger>;\n}\nfunction RemoveMemberConfirmation({\n  member\n}) {\n  return <ConfirmationDialog isDanger title={<Trans message=\"Remove member\" />} body={<div>\n          <Trans message=\"Are you sure you want to remove `:name`?\" values={{\n      name: member.name\n    }} />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All workspace resources created by `:name` will be transferred to workspace owner.\" values={{\n        name: member.name\n      }} />\n          </div>\n        </div>} confirm={<Trans message=\"Remove\" />} />;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled\n}) {\n  const {\n    data\n  } = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n  return <MenuTrigger selectionMode=\"single\" selectedValue={value} onSelectionChange={newValue => {\n    onChange(newValue);\n  }}>\n      <Button className={className} size={size} variant=\"flat\" color=\"chip\" disabled={isDisabled} endIcon={<ArrowDropDownIcon />}>\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>)}\n      </Menu>\n    </MenuTrigger>;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace\n}) {\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  if (user?.id === member.id) {\n    return <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>;\n  }\n  if (member.model_type === 'invite') {\n    return <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </> : null}\n      </div>;\n  }\n  return null;\n}\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace\n}) {\n  const resendInvite = useResendInvite();\n  return <DialogTrigger type=\"modal\" onClose={isConfirmed => {\n    if (isConfirmed) {\n      resendInvite.mutate({\n        workspaceId: workspace.id,\n        inviteId: member.id\n      });\n    }\n  }}>\n      <Button variant=\"link\" size=\"sm\" color=\"primary\" disabled={resendInvite.isPending}>\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog title={<Trans message=\"Resend invite\" />} body={<Trans message=\"Are you sure you want to send this invite again?\" />} confirm={<Trans message=\"Send\" />} />\n    </DialogTrigger>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { onFormQueryError } from '../../errors/on-form-query-error';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { message } from '@ui/i18n/message';\nfunction updateWorkspace({\n  id,\n  ...props\n}) {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\nexport function useUpdateWorkspace(form) {\n  const {\n    close\n  } = useDialogContext();\n  return useMutation({\n    mutationFn: props => updateWorkspace(props),\n    onSuccess: response => {\n      close();\n      toast(message('Updated workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(response.workspace.id)\n      });\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}","import { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Form } from '@ui/forms/form';\nimport { Button } from '@ui/buttons/button';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { useUpdateWorkspace } from './requests/update-workspace';\nimport { Trans } from '@ui/i18n/trans';\nexport function RenameWorkspaceDialog({\n  workspace\n}) {\n  const form = useForm({\n    defaultValues: {\n      id: workspace.id,\n      name: workspace.name\n    }\n  });\n  const {\n    formId,\n    close\n  } = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form form={form} id={formId} onSubmit={() => {\n        updateWorkspace.mutate(form.getValues());\n      }}>\n          <FormTextField name=\"name\" autoFocus label={<Trans message=\"Name\" />} minLength={3} required />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId} disabled={updateWorkspace.isPending}>\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { useActiveWorkspaceId } from '../active-workspace-id-context';\nimport { PersonalWorkspace } from '../user-workspaces';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction deleteWorkspace({\n  id\n}) {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\nexport function useDeleteWorkspace() {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  return useMutation({\n    mutationFn: props => deleteWorkspace(props),\n    onSuccess: (r, payload) => {\n      toast(message('Deleted workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id)\n      });\n\n      // if user deleted workspace that is currently active, switch to personal workspace\n      if (workspaceId === payload.id) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { Trans } from '@ui/i18n/trans';\nimport { Link } from 'react-router';\nimport { LinkStyle } from '@ui/buttons/external-link';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function PolicyFailMessage({\n  resourceName,\n  className,\n  size = 'md',\n  color = 'bgAlt',\n  reason = 'overQuota',\n  ...other\n}) {\n  const message = other.message ?? <MessageText resourceName={resourceName} reason={reason} />;\n  return <SectionHelper color={color} size={size} className={className} description={message} />;\n}\nfunction MessageText({\n  resourceName,\n  reason\n}) {\n  const {\n    billing\n  } = useSettings();\n  if (reason === 'noWorkspacePermission') {\n    return <Trans message=\"You can't create new :name in this workspace.\" values={{\n      name: resourceName\n    }} />;\n  }\n  const upgradeMsgValues = {\n    name: resourceName,\n    a: text => <Link className={LinkStyle} to=\"/pricing\">\n        {text}\n      </Link>\n  };\n  if (reason === 'overQuota' && billing.enable) {\n    return <Trans message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\" values={upgradeMsgValues} />;\n  }\n  if (reason === 'noPermission' && billing.enable) {\n    return <Trans message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\" values={upgradeMsgValues} />;\n  }\n  return <Trans message=\"You don't have permissions to create :name.\" />;\n}","import clsx from 'clsx';\nimport { cloneElement, forwardRef, Fragment, useEffect, useState } from 'react';\nimport { ButtonBase } from '@ui/buttons/button-base';\nimport { PersonalWorkspace, useUserWorkspaces } from './user-workspaces';\nimport { UnfoldMoreIcon } from '@ui/icons/material/UnfoldMore';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { NewWorkspaceDialog } from './new-workspace-dialog';\nimport { WorkspaceMembersDialog } from './workspace-members-dialog';\nimport { useActiveWorkspace, useActiveWorkspaceId } from './active-workspace-id-context';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Button } from '@ui/buttons/button';\nimport { CheckIcon } from '@ui/icons/material/Check';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { KeyboardArrowDownIcon } from '@ui/icons/material/KeyboardArrowDown';\nimport { PersonAddIcon } from '@ui/icons/material/PersonAdd';\nimport { DeleteIcon } from '@ui/icons/material/Delete';\nimport { ExitToAppIcon } from '@ui/icons/material/ExitToApp';\nimport { EditIcon } from '@ui/icons/material/Edit';\nimport { RenameWorkspaceDialog } from './rename-workspace-dialog';\nimport { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { useDeleteWorkspace } from './requests/delete-workspace';\nimport { useRemoveMember } from './requests/remove-member';\nimport { useAuth } from '../auth/use-auth';\nimport { Trans } from '@ui/i18n/trans';\nimport { LeaveWorkspaceConfirmation } from './leave-workspace-confirmation';\nimport { openDialog } from '@ui/overlays/store/dialog-store';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { PolicyFailMessage } from '@common/billing/upgrade/policy-fail-message';\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger,\n  placement = 'top'\n}) {\n  const {\n    data: workspaces,\n    isFetched,\n    isFetching\n  } = useUserWorkspaces();\n  const {\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const activeWorkspace = useActiveWorkspace();\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {\n    hasPermission\n  } = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\n  if (\n  // if we have a custom trigger, leave rendering up to the customer trigger\n  !trigger && (!activeWorkspace || !hasPermission('workspaces.create') && workspaces?.length === 1)) {\n    return null;\n  }\n  return <Fragment>\n      <DialogTrigger type=\"popover\" placement={placement} isOpen={selectorIsOpen} onClose={() => {\n      setSelectorIsOpen(false);\n    }}>\n        {trigger ? cloneElement(trigger, {\n        onClick: () => setSelectorIsOpen(!selectorIsOpen)\n      }) : <DefaultTrigger onClick={() => setSelectorIsOpen(!selectorIsOpen)} workspace={activeWorkspace} className={className} />}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 border-b pb-10\">\n              {workspaces?.map(workspace => <WorkspaceItem key={workspace.id} workspace={workspace} setSelectorIsOpen={setSelectorIsOpen} onChange={onChange} />)}\n            </div>\n            <div className=\"mb-4 px-4 text-center\">\n              <CreateWorkspaceButton onClick={() => setSelectorIsOpen(false)} onCreated={id => onChange?.(id)} workspaceCount={workspaces ? workspaces.length - 1 : 0} />\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n    </Fragment>;\n}\nfunction CreateWorkspaceButton({\n  onClick,\n  onCreated,\n  workspaceCount\n}) {\n  const {\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const {\n    checkOverQuotaOrNoPermission\n  } = useAuth();\n  const {\n    overQuotaOrNoPermission\n  } = checkOverQuotaOrNoPermission('workspaces.create', 'count', workspaceCount);\n  return <Fragment>\n      <Button disabled={overQuotaOrNoPermission} onClick={async e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onClick();\n      const workspaceId = await openDialog(NewWorkspaceDialog);\n      if (workspaceId) {\n        setWorkspaceId(workspaceId);\n        onCreated?.(workspaceId);\n      }\n    }} variant=\"outline\" startIcon={<AddIcon />} color=\"primary\" className=\"h-40 w-full\">\n        <Trans message=\"Create new workspace\" />\n      </Button>\n      {overQuotaOrNoPermission && <PolicyFailMessage size=\"sm\" className=\"mt-12 max-w-288\" resourceName={<Trans message=\"worksapces\" />} />}\n    </Fragment>;\n}\nconst DefaultTrigger = forwardRef(({\n  workspace,\n  className,\n  onClick,\n  ...other\n}, ref) => {\n  return <ButtonBase ref={ref} onClick={onClick} className={clsx('flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2', className)} {...other}>\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\n            {workspace.default ? <Trans message={workspace.name} /> : workspace.name}\n          </span>\n          <span className=\"block text-xs text-muted\">\n            {workspace.default ? <Trans message=\"Personal workspace\" /> : <Trans message=\":count members\" values={{\n          count: workspace.members_count\n        }} />}\n          </span>\n        </span>\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\n      </ButtonBase>;\n});\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen\n}) {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n  return <div onClick={() => {\n    setWorkspaceId(workspace.id);\n    onChange?.(workspace.id);\n    setSelectorIsOpen(false);\n  }} className={clsx('mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left', isActive && 'bg-primary/5', !isActive && 'hover:bg-hover')}>\n      <CheckIcon size=\"sm\" className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')} />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-sm text-muted\">\n          {workspace.default ? <Trans message=\"Personal workspace\" /> : <Trans message=\":count members\" values={{\n          count: workspace.members_count\n        }} />}\n        </div>\n      </div>\n      {workspace.id !== 0 && <ManageButton setSelectorIsOpen={setSelectorIsOpen} workspace={workspace} onChange={onChange} />}\n    </div>;\n}\nfunction LeaveWorkspaceDialog({\n  workspace,\n  onChange\n}) {\n  const removeMember = useRemoveMember();\n  const {\n    user\n  } = useAuth();\n  const {\n    close\n  } = useDialogContext();\n  return <LeaveWorkspaceConfirmation isLoading={removeMember.isPending} onConfirm={() => {\n    removeMember.mutate({\n      workspaceId: workspace.id,\n      memberId: user.id,\n      memberType: 'member'\n    }, {\n      onSuccess: () => {\n        close();\n        onChange?.(PersonalWorkspace.id);\n      }\n    });\n  }} />;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n  onChange\n}) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const {\n    close\n  } = useDialogContext();\n  return <ConfirmationDialog isDanger title={<Trans message=\"Delete workspace\" />} body={<Trans message=\"Are you sure you want to delete “:name“?\" values={{\n    name: workspace.name\n  }} />} confirm={<Trans message=\"Delete\" />} isLoading={deleteWorkspace.isPending} onConfirm={() => {\n    deleteWorkspace.mutate({\n      id: workspace.id\n    }, {\n      onSuccess: () => {\n        close();\n        onChange?.(PersonalWorkspace.id);\n      }\n    });\n  }} />;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  workspace,\n  onChange\n}) {\n  const {\n    user\n  } = useAuth();\n  return <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\n      <Button onClick={e => {\n      e.preventDefault();\n      e.stopPropagation();\n    }} color=\"primary\" size=\"xs\" variant=\"outline\" endIcon={<KeyboardArrowDownIcon />}>\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(WorkspaceMembersDialog, {\n          workspace\n        });\n      }} value=\"workspaceMembers\" startIcon={<PersonAddIcon />}>\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(RenameWorkspaceDialog, {\n          workspace\n        });\n      }} value=\"updateWorkspace\" startIcon={<EditIcon />}>\n            <Trans message=\"Rename\" />\n          </MenuItem>}\n        {workspace.owner_id !== user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(LeaveWorkspaceDialog, {\n          workspace,\n          onChange\n        });\n      }} value=\"leaveWorkspace\" startIcon={<ExitToAppIcon />}>\n            <Trans message=\"Leave\" />\n          </MenuItem>}\n        {workspace.owner_id === user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(DeleteWorkspaceConfirmation, {\n          workspace,\n          onChange\n        });\n      }} value=\"deleteWorkspace\" startIcon={<DeleteIcon />}>\n            <Trans message=\"Delete\" />\n          </MenuItem>}\n      </Menu>\n    </MenuTrigger>;\n}","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import { message } from '@ui/i18n/message';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from '../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nconst defaultSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc'\n};\nexport function makeFolderPage(folder) {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload: folder.permissions['files.create'] || folder.permissions['files.update'],\n    label: folder.name,\n    folder\n  };\n}\nexport function makePartialFolderPage(hash) {\n  return {\n    name: 'folder',\n    uniqueId: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg\n    })\n  };\n}\nexport function getPathForFolder(hash) {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\n\nconst rootFolder = getBootstrapData().rootFolder;\nexport const RootFolderPage = {\n  ...makeFolderPage(rootFolder),\n  name: 'home'\n};\nexport const RecentPage = {\n  name: 'recent',\n  uniqueId: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc'\n  },\n  queryParams: {\n    recentOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement\n  })\n};\nexport const SearchPage = {\n  name: 'search',\n  uniqueId: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching\n    };\n  }\n};\nexport const SharesPage = {\n  name: 'sharedWithMe',\n  uniqueId: 'sharedWithMe',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg\n  })\n};\nexport const TrashPage = {\n  name: 'trash',\n  uniqueId: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message('There are no files or folders in your trash currently'),\n    image: throwAwaySvg\n  })\n};\nexport const StarredPage = {\n  name: 'starred',\n  uniqueId: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message('Add stars to files and folders that you want to easily find later'),\n    image: lovingItSvg\n  })\n};\nexport const DRIVE_PAGES = [RootFolderPage, RecentPage, SearchPage, SharesPage, TrashPage, StarredPage];","export let MenuPositions = /*#__PURE__*/function (MenuPositions) {\n  MenuPositions[\"DriveSidebar\"] = \"drive-sidebar\";\n  return MenuPositions;\n}({});","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import { useQuery } from '@tanstack/react-query';\nimport { useAuth } from '@common/auth/use-auth';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nfunction fetchUserFolders(params) {\n  return apiClient.get(`users/${params.userId}/folders`, {\n    params\n  }).then(response => response.data);\n}\nexport function useFolders() {\n  const {\n    user\n  } = useAuth();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = {\n    userId: user.id,\n    workspaceId\n  };\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\n    queryFn: () => fetchUserFolders(params),\n    enabled: !!user\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { RootFolderPage } from '../../drive-page/drive-page';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useMoveEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(message('Moving [one 1 item|other :count items]...', {\n        values: {\n          count: payload.entryIds.length\n        }\n      }), {\n        disableExitAnimation: true\n      });\n      return moveEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message('Moved [one 1 item|other :count items] to \":destination\"', {\n        values: {\n          count: p.entryIds.length,\n          destination: (r.destination || RootFolderPage.folder).name\n        }\n      }), {\n        disableEnterAnimation: true\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not move items'), null, {\n      disableEnterAnimation: true\n    })\n  });\n}\nfunction moveEntries(payload) {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient.post('file-entries/move', payload).then(response => response.data);\n}","export function canMoveEntriesInto(targets, destination) {\n  if (destination.type !== 'folder') return false;\n\n  // prevent moving if user does not have permissions\n  if (!destination.permissions['files.update'] && !targets.every(t => t.permissions['files.update'])) {\n    return false;\n  }\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (destination.id === target.parent_id ||\n    // root folder check\n    !target.parent_id && destination.id === 0) {\n      return false;\n    }\n    return !destinationIsInTarget(destination, target);\n  });\n}\nfunction destinationIsInTarget(destination, target) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}","import { useMoveEntries } from './queries/use-move-entries';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { canMoveEntriesInto } from './utils/can-move-entries-into';\nimport { driveState } from '@app/drive/drive-store';\nexport function useFolderDropAction(folder) {\n  const moveEntries = useMoveEntries();\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const onDrop = async target => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {\n          parentId: folder.id\n        }\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData();\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id)\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n  return {\n    onDrop\n  };\n}\nexport function folderAcceptsDrop(target, destination) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData();\n    return canMoveEntriesInto(entries, destination);\n  }\n  return true;\n}","export function makeFolderTreeDragId(entry) {\n  return `${entry.id}-tree`;\n}\nexport function isFolderTreeDragId(id) {\n  return `${id}`.endsWith('-tree');\n}","import { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { driveState } from '../../drive-store';\nimport { useState } from 'react';\nimport { folderAcceptsDrop, useFolderDropAction } from '../../files/use-folder-drop-action';\nimport { makeFolderTreeDragId } from './folder-tree-drag-id';\nexport function useSidebarTreeDropTarget({\n  folder,\n  ref\n}) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {\n    onDrop\n  } = useFolderDropAction(folder);\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([...driveState().sidebarExpandedKeys, folder.id]);\n      }\n    },\n    onDrop\n  });\n  return {\n    ...dropProps,\n    isDragOver\n  };\n}","import { createContext } from 'react';\nexport const TreeContext = createContext(null);","import { cloneElement } from 'react';\nexport function renderTree({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level\n}) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer\n    });\n  });\n}","import React, { useState } from 'react';\nimport { useControlledState } from '@react-stately/utils';\nimport { FocusScope } from '@react-aria/focus';\nimport { TreeContext } from './tree-context';\nimport { renderTree } from './render-tree';\nexport function Tree({\n  children,\n  nodes,\n  ...props\n}) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(props.expandedKeys, props.defaultSelectedKeys, props.onExpandedKeysChange);\n  const [selectedKeys, setSelectedKeys] = useControlledState(props.selectedKeys, props.defaultSelectedKeys, props.onSelectedKeysChange);\n  const [focusedNode, setFocusedNode] = useState();\n  const value = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode\n  };\n  return <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>;\n}\nfunction TreeRoot(props) {\n  return <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>;\n}","import React, { forwardRef, useContext } from 'react';\nimport { TreeContext } from './tree-context';\nimport clsx from 'clsx';\nimport { ArrowRightIcon } from '@ui/icons/material/ArrowRight';\nexport const TreeLabel = forwardRef(({\n  icon,\n  label,\n  level = 0,\n  node,\n  className,\n  ...domProps\n}, ref) => {\n  const {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys\n  } = useContext(TreeContext);\n  const isExpanded = expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const handleExpandIconClick = e => {\n    e.stopPropagation();\n    const index = expandedKeys.indexOf(node.id);\n    const newExpandedKeys = [...expandedKeys];\n    if (index > -1) {\n      newExpandedKeys.splice(index, 1);\n    } else {\n      newExpandedKeys.push(node.id);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n  return <div {...domProps} ref={ref} onClick={e => {\n    e.stopPropagation();\n    setSelectedKeys([node.id]);\n  }} className={clsx('header tree-label flex cursor-pointer flex-nowrap items-center gap-4 overflow-hidden text-ellipsis whitespace-nowrap rounded py-6', className, isSelected && 'bg-primary/selected font-bold text-primary', !isSelected && 'hover:bg-hover')}>\n        {level > 0 && <div className=\"flex\">\n            {Array.from({\n        length: level\n      }).map((_, i) => {\n        return <div key={i} className=\"h-24 w-24\" />;\n      })}\n          </div>}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon className={clsx('cursor-default transition-transform icon-sm', isExpanded && 'rotate-90')} />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>;\n});\nTreeLabel.displayName = 'TreeLabel';","import React, { useContext, useEffect } from 'react';\nimport { useFocusManager } from '@react-aria/focus';\nimport { TreeContext } from './tree-context';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { renderTree } from './render-tree';\nimport { TreeLabel } from './tree-label';\nexport function TreeItem({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n  if (!node || !itemRenderer) return null;\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused = focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n  const onKeyDown = e => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n        if (!hasChildren) return;\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager?.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl = document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            parentEl.focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (childNode.children.length && !expandedKeys.includes(childNode.id)) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n  return <li role=\"treeitem\" aria-expanded={isExpanded ? 'true' : 'false'} aria-selected={isSelected} tabIndex={isFocused ? 0 : -1} onKeyDown={createEventHandler(onKeyDown)} onFocus={e => {\n    e.stopPropagation();\n    setFocusedNode(node.id);\n  }} onBlur={e => {\n    e.stopPropagation();\n    // only clear focus state when focus moves outside the tree\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setFocusedNode(undefined);\n    }\n  }} className={clsx('outline-none',\n  // focus direct .tree-label child when this element has :focus-visible\n  '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset', className)}>\n      <TreeLabel ref={labelRef} className={labelClassName} node={node} level={level} label={label} icon={icon} {...domProps} />\n      <AnimatePresence initial={false}>\n        {isExpanded ? <m.ul key={`${node.id}-group`} role=\"group\" initial=\"closed\" animate=\"open\" exit=\"closed\" variants={{\n        open: {\n          opacity: 1,\n          height: 'auto'\n        },\n        closed: {\n          opacity: 0,\n          height: 0,\n          overflow: 'hidden'\n        }\n      }}>\n            {renderTree({\n          nodes: node.children,\n          parentNode: node,\n          itemRenderer,\n          level\n        })}\n          </m.ul> : null}\n      </AnimatePresence>\n    </li>;\n}","import React, { useMemo, useRef } from 'react';\nimport { arrayToTree } from 'performant-array-to-tree';\nimport { useFolders } from '../../files/queries/use-folders';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { getPathForFolder, RootFolderPage } from '../../drive-page/drive-page';\nimport { mergeProps } from '@react-aria/utils';\nimport { useDraggable } from '@ui/interactions/dnd/use-draggable';\nimport { useSidebarTreeDropTarget } from './use-sidebar-tree-drop-target';\nimport { makeFolderTreeDragId } from './folder-tree-drag-id';\nimport clsx from 'clsx';\nimport { BackupIcon } from '@ui/icons/material/Backup';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { Tree } from '@ui/tree/tree';\nimport { TreeItem } from '@ui/tree/tree-item';\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {\n    data\n  } = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null\n    });\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n  return <Tree nodes={tree} expandedKeys={expandedKeys} onExpandedKeysChange={keys => {\n    driveState().setSidebarExpandedKeys(keys);\n  }} selectedKeys={selectedKeys} onSelectedKeysChange={([id]) => {\n    const entryHash = findHash(id, tree);\n    if (entryHash) {\n      navigate(getPathForFolder(entryHash));\n    } else {\n      navigate(RootFolderPage.path);\n    }\n  }}>\n      {() => <FolderTreeItem />}\n    </Tree>;\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props) {\n  const {\n    node\n  } = props;\n  const labelRef = useRef(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s => s.entriesBeingDragged.includes(node.id));\n  const {\n    draggableProps\n  } = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node]\n  });\n  const {\n    droppableProps,\n    isDragOver\n  } = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef\n  });\n  return <TreeItem {...mergeProps(draggableProps, droppableProps, props)} onContextMenu={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({\n      x: e.clientX,\n      y: e.clientY,\n      entry: node\n    });\n  }} labelRef={labelRef} className={isRootFolder ? 'focus-visible:ring-2' : undefined} labelClassName={clsx(isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary', isDragging && 'opacity-30', isRootFolder && 'h-40')} icon={isRootFolder ? <BackupIcon size=\"md\" className=\"mr-6\" /> : <FolderIcon size=\"sm\" className=\"mr-4\" />} label={node.name} />;\n}\nconst findHash = (id, nodes) => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { DriveQueryKeys, invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { getAxiosErrorMessage } from '@common/http/get-axios-error-message';\nfunction deleteEntries(payload) {\n  return apiClient.post('file-entries/delete', payload).then(response => response.data);\n}\nexport function useDeleteEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(getLoaderMessage(payload), {\n        disableExitAnimation: true\n      });\n      return deleteEntries(payload);\n    },\n    onSuccess: (r, {\n      entryIds,\n      emptyTrash,\n      deleteForever\n    }) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary\n      });\n      if (emptyTrash) {\n        toast(message('Emptied trash'), {\n          disableEnterAnimation: true\n        });\n      } else if (deleteForever) {\n        toast(message('Permanently deleted [one 1 item|other :count items]', {\n          values: {\n            count: entryIds.length\n          }\n        }), {\n          disableEnterAnimation: true\n        });\n      } else {\n        toast(message('Moved [one 1 item|other :count items] to trash', {\n          values: {\n            count: entryIds.length\n          }\n        }), {\n          disableEnterAnimation: true\n        });\n      }\n    },\n    onError: (err, {\n      emptyTrash\n    }) => {\n      const backendError = getAxiosErrorMessage(err);\n      if (backendError) {\n        toast.danger(backendError, {\n          disableEnterAnimation: true\n        });\n      } else if (emptyTrash) {\n        toast.danger('could not empty trash', {\n          disableEnterAnimation: true\n        });\n      } else {\n        toast.danger('Could not delete items', {\n          disableEnterAnimation: true\n        });\n      }\n    }\n  });\n}\nfunction getLoaderMessage(payload) {\n  if (payload.emptyTrash) {\n    return message('Emptying trash...');\n  } else if (payload.deleteForever) {\n    return message('Deleting files...');\n  } else {\n    return message('Moving to trash...');\n  }\n}","import { CustomMenu, CustomMenuItem } from '@common/menus/custom-menu';\nimport { MenuPositions } from '../../menu-positions';\nimport React, { forwardRef, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { FolderTree } from '@app/drive/layout/sidebar/folder-tree';\nimport { useDeleteEntries } from '@app/drive/files/queries/use-delete-entries';\nimport { useDroppable } from '@common/ui/library/interactions/dnd/use-droppable';\nexport function SidebarMenu() {\n  return <div className=\"mt-2 px-2 text-muted\">\n      <FolderTree />\n      <CustomMenu menu={MenuPositions.DriveSidebar} orientation=\"vertical\" gap=\"gap-0\">\n        {item => {\n        if (item.action === '/drive/trash') {\n          return <TrashMenuItem key={item.id} item={item} />;\n        }\n        return <MenuItem key={item.id} item={item} />;\n      }}\n      </CustomMenu>\n    </div>;\n}\nexport const MenuItem = forwardRef(({\n  item,\n  className,\n  ...domProps\n}, ref) => {\n  return <CustomMenuItem className={({\n    isActive\n  }) => clsx(className, 'my-4 h-40 w-full rounded px-24', isActive ? 'cursor-default bg-primary/selected font-bold text-primary' : 'hover:bg-hover')} item={item} ref={ref} {...domProps} />;\n});\nfunction TrashMenuItem({\n  item\n}) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef(null);\n  const {\n    droppableProps\n  } = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = draggable.getData().map(e => e.id);\n      deleteEntries.mutate({\n        entryIds,\n        deleteForever: false\n      });\n    }\n  });\n  return <MenuItem className={clsx(isDragOver && 'bg-primary/selected')} ref={ref} {...droppableProps} item={item} />;\n}","import { driveState, useDriveStore } from '../drive-store';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { Button } from '@ui/buttons/button';\nimport { FileUploadIcon } from '@ui/icons/material/FileUpload';\nimport { Trans } from '@ui/i18n/trans';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { UploadFileIcon } from '@ui/icons/material/UploadFile';\nimport { DriveFolderUploadIcon } from '@ui/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { openUploadWindow } from '@ui/utils/files/open-upload-window';\nexport function CreateNewButton({\n  isCompact,\n  className\n}) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const button = isCompact ? <IconButton size=\"md\" disabled={!activePage?.canUpload}>\n      <AddIcon />\n    </IconButton> : <Button color=\"primary\" variant=\"flat\" size=\"sm\" startIcon={<FileUploadIcon />} disabled={!activePage?.canUpload}>\n      <Trans message=\"Upload\" />\n    </Button>;\n  return <div className={className}>\n      <MenuTrigger onItemSelected={async value => {\n      if (value === 'uploadFiles') {\n        uploadFiles(await openUploadWindow({\n          multiple: true\n        }));\n      } else if (value === 'uploadFolder') {\n        uploadFiles(await openUploadWindow({\n          directory: true\n        }));\n      } else if (value === 'newFolder') {\n        const activeFolder = driveState().activePage?.folder;\n        driveState().setActiveActionDialog('newFolder', activeFolder ? [activeFolder] : []);\n      }\n    }}>\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>;\n}","import React from 'react';\nimport { StorageMeter } from './storage-summary/storage-meter';\nimport { WorkspaceSelector } from '@common/workspace/workspace-selector';\nimport { RootFolderPage } from '../../drive-page/drive-page';\nimport { SidebarMenu } from './sidebar-menu';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { CreateNewButton } from '../create-new-button';\nimport { Button } from '@ui/buttons/button';\nimport { Link } from 'react-router';\nimport { Trans } from '@ui/i18n/trans';\nimport { useAuth } from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function Sidebar({\n  className\n}) {\n  const {\n    isSubscribed\n  } = useAuth();\n  const {\n    billing\n  } = useSettings();\n  return <div className={clsx(className, 'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted')}>\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\n        <CreateNewButton className=\"px-2 pt-2 text-center\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable ? <div className=\"mt-2 pl-60\">\n            <Button elementType={Link} to={isSubscribed ? '/billing/change-plan' : '/pricing'} variant=\"outline\" color=\"primary\" size=\"xs\">\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div> : null}\n      </div>\n      <WorkspaceSwitcher />\n    </div>;\n}\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return <WorkspaceSelector onChange={() => {\n    navigate(RootFolderPage.path);\n  }} className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\" />;\n}","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { useSearchParams } from 'react-router';\nimport { hasNextPage } from '@common/http/backend-response/pagination-response';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { makeFolderPage, SearchPage } from '../../drive-page/drive-page';\nimport { useEffect } from 'react';\nimport { shallowEqual } from '@ui/utils/shallow-equal';\nfunction fetchEntries(params) {\n  return apiClient.get('drive/file-entries', {\n    params\n  }).then(response => response.data);\n}\nconst setActiveFolder = response => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n  if (newFolder && currentPage && currentPage.uniqueId === newFolder.hash && (\n  // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\n  !currentPage.folder || !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))) {\n    driveState().setActivePage(makeFolderPage(newFolder));\n  }\n  return response;\n};\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = {\n    section: page?.name,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.uniqueId : null,\n    workspaceId,\n    ...sortDescriptor\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch = page === SearchPage && !params.query && !params.filters;\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      pageParam = 1\n    }) => {\n      return fetchEntries({\n        ...params,\n        page: pageParam\n      });\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    enabled: page != null && !isDisabledInSearch\n  });\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data?.pages[0].folder) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n  return query;\n}\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData({\n    queryKey: DriveQueryKeys.fetchEntries()\n  });\n  return caches.reduce((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}","import { FilterControlType, FilterOperator } from '@common/datatable/filters/backend-filter';\nimport { FILE_ENTRY_TYPE_FILTER } from '@common/admin/file-entry/file-entry-index-filters';\nimport { message } from '@ui/i18n/message';\nimport { createdAtFilter, updatedAtFilter } from '@common/datatable/filters/timestamp-filters';\nexport const driveSearchFilters = [FILE_ENTRY_TYPE_FILTER, {\n  key: 'owner_id',\n  label: message('Owner'),\n  description: message('User file was uploaded by'),\n  defaultOperator: FilterOperator.eq,\n  control: {\n    type: FilterControlType.Select,\n    defaultValue: '02',\n    options: [{\n      key: '01',\n      label: message('anyone'),\n      value: {\n        value: null,\n        operator: '!='\n      }\n    }, {\n      key: '02',\n      label: message('me'),\n      value: '{authId}'\n    }, {\n      key: '03',\n      label: message('not me'),\n      value: {\n        value: '{authId}',\n        operator: '!='\n      }\n    }]\n  }\n}, createdAtFilter({\n  description: message('Date file was uploaded')\n}), updatedAtFilter({\n  description: message('Date file was last changed')\n}), {\n  key: 'deleted_at',\n  label: message('In trash'),\n  description: message('Only show files that are in the trash'),\n  defaultOperator: FilterOperator.ne,\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: null\n  }\n}, {\n  key: 'shareableLink',\n  label: message('Has shareable link'),\n  description: message('Only show files that have a shareable link'),\n  defaultOperator: FilterOperator.has,\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: '*'\n  }\n}, {\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: true\n  },\n  key: 'sharedByMe',\n  label: message('Shared by me'),\n  description: message('Only show files that are shared with someone'),\n  defaultOperator: FilterOperator.eq\n}];","import { createContext } from 'react';\nexport const DashboardLayoutContext = createContext(null);","import React, { useContext, useState } from 'react';\nimport { driveSearchFilters } from './drive-search-filters';\nimport { useDriveStore } from '../drive-store';\nimport { SearchPage } from '../drive-page/drive-page';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { FilterList } from '@common/datatable/filters/filter-list/filter-list';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useSearchParams } from 'react-router';\nimport { message } from '@ui/i18n/message';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    trans\n  } = useTrans();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n  if (activePage !== SearchPage) {\n    return null;\n  }\n  return <div className=\"mb-30 mt-10 px-10 md:px-26\">\n      {isMobileMode && <form className=\"contents\" onSubmit={e => {\n      e.preventDefault();\n      // blur input so mobile keyboard is hidden\n      if (document.activeElement?.tagName === 'INPUT') {\n        document.activeElement.blur();\n      }\n      navigate({\n        pathname: SearchPage.path,\n        search: `?query=${inputValue}`\n      }, {\n        replace: true\n      });\n    }}>\n          <TextField autoFocus className=\"mb-20\" startAdornment={<IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>} placeholder={trans(message('Type to search'))} value={inputValue} onChange={e => setInputValue(e.target.value)} />\n        </form>}\n      <FilterList filters={driveSearchFilters} pinnedFilters={alwaysShownFilters} />\n    </div>;\n}","export function restrictResizableWithinBoundary(rect, boundaryRect) {\n  const boundedRect = {\n    ...rect\n  };\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(boundedRect.width, boundaryRect.width - boundedRect.left);\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(boundedRect.height, boundaryRect.height - boundedRect.top);\n  return boundedRect;\n}","import { useLayoutEffect, useRef } from 'react';\nimport { droppables } from '../drag-state';\nexport const mouseSelectables = new Map();\nexport function useMouseSelectable(options) {\n  const {\n    id,\n    ref\n  } = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.()\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}","export function rectsIntersect(rectA, rectB) {\n  if (!rectA || !rectB) return false;\n  return rectA.left <= rectB.left + rectB.width && rectA.left + rectA.width >= rectB.left && rectA.top <= rectB.top + rectB.height && rectA.top + rectA.height >= rectB.top;\n}","import { useRef } from 'react';\nimport { usePointerEvents } from '../../use-pointer-events';\nimport { restrictResizableWithinBoundary } from '../../utils/restrict-resizable-within-boundary';\nimport { activeInteraction } from '../../active-interaction';\nimport { updateRects } from '../update-rects';\nimport { mouseSelectables } from './use-mouse-selectable';\nimport { rectsIntersect } from '../../utils/rects-intersect';\nexport function useMouseSelectionBox({\n  onPointerDown,\n  ...props\n} = {}) {\n  const defaultRef = useRef(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef(null);\n  let state = useRef({}).current;\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y)\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n    const boundedRect = state.boundaryRect ? restrictResizableWithinBoundary(newRect, state.boundaryRect) : {\n      ...newRect\n    };\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop\n    };\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set()\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0\n      };\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = e.target.scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge = e.clientY + 20 > state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({\n            top: 10\n          });\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({\n            top: -10\n          });\n        }\n      }\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener('scroll', state.scrollListener);\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    }\n  });\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef\n    },\n    boxProps: {\n      ref: boxRef\n    }\n  };\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction createShareableLink(entryId) {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient.post(`file-entries/${entryId}/shareable-link`).then(response => response.data);\n}\nexport function useCreateShareableLink() {\n  return useMutation({\n    mutationFn: ({\n      entryId\n    }) => createShareableLink(entryId),\n    onSuccess: (data, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), data);\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { useMutation } from '@tanstack/react-query';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction addStarToEntries({\n  entryIds\n}) {\n  return apiClient.post('file-entries/star', {\n    entryIds\n  }).then(response => response.data);\n}\nexport function useAddStarToEntries() {\n  return useMutation({\n    mutationFn: payload => addStarToEntries(payload),\n    onSuccess: (data, {\n      entryIds\n    }) => {\n      invalidateEntryQueries();\n      toast(message('Starred [one 1 item|other :count items]', {\n        values: {\n          count: entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items'))\n  });\n}","import { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { useMutation } from '@tanstack/react-query';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction removeStarFromEntries({\n  entryIds\n}) {\n  return apiClient.post('file-entries/unstar', {\n    entryIds\n  }).then(response => response.data);\n}\nexport function useRemoveStarFromEntries() {\n  return useMutation({\n    mutationFn: payload => removeStarFromEntries(payload),\n    onSuccess: (data, {\n      entryIds\n    }) => {\n      invalidateEntryQueries();\n      toast(message('Removed star from [one 1 item|other :count items]', {\n        values: {\n          count: entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star'))\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { DriveQueryKeys, invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction duplicateEntries(payload) {\n  return apiClient.post('file-entries/duplicate', payload).then(response => response.data);\n}\nexport function useDuplicateEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(message('Duplicating [one 1 item|other :count items]...', {\n        values: {\n          count: payload.entryIds.length\n        }\n      }), {\n        disableExitAnimation: true\n      });\n      return duplicateEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary\n      });\n      toast(message('Duplicated [one 1 item|other :count items]', {\n        values: {\n          count: p.entryIds.length\n        }\n      }), {\n        disableEnterAnimation: true\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not duplicate items'), null, {\n      disableEnterAnimation: true\n    })\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nexport function useUnshareEntries() {\n  return useMutation({\n    mutationFn: payload => unshareEntries(payload),\n    onSuccess: () => {\n      return invalidateEntryQueries();\n    }\n  });\n}\nfunction unshareEntries({\n  entryIds,\n  ...payload\n}) {\n  return apiClient.post(`file-entries/${entryIds.join(',')}/unshare`, payload).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useRestoreEntries() {\n  return useMutation({\n    mutationFn: payload => restoreEntries(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message('Restored [one 1 item|other :count items]', {\n        values: {\n          count: p.entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items'))\n  });\n}\nfunction restoreEntries(payload) {\n  return apiClient.post('file-entries/restore', payload).then(response => response.data);\n}","import { message } from '@ui/i18n/message';\nimport { PersonAddIcon } from '@ui/icons/material/PersonAdd';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { RemoveRedEyeIcon } from '@ui/icons/material/RemoveRedEye';\nimport { LinkIcon } from '@ui/icons/material/Link';\nimport { useCreateShareableLink } from '../shareable-link/queries/create-shareable-link';\nimport { StarIcon } from '@ui/icons/material/Star';\nimport { useAddStarToEntries } from '../files/queries/use-add-star-to-entries';\nimport { StarOutlineIcon } from '@ui/icons/material/StarOutline';\nimport { useRemoveStarFromEntries } from '../files/queries/use-remove-star-from-entries';\nimport { DriveFileMoveIcon } from '@ui/icons/material/DriveFileMove';\nimport { DriveFileRenameOutlineIcon } from '@ui/icons/material/DriveFileRenameOutline';\nimport { ContentCopyIcon } from '@ui/icons/material/ContentCopy';\nimport { useDuplicateEntries } from '../files/queries/use-duplicate-entries';\nimport { FileDownloadIcon } from '@ui/icons/material/FileDownload';\nimport { DeleteIcon } from '@ui/icons/material/Delete';\nimport { SharesPage, TrashPage } from '../drive-page/drive-page';\nimport { useDeleteEntries } from '../files/queries/use-delete-entries';\nimport { useUnshareEntries } from '../share-dialog/queries/use-unshare-entries';\nimport { toast } from '@ui/toast/toast';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { useFileEntryUrls } from '@common/uploads/file-entry-urls';\nimport { useRestoreEntries } from '../files/queries/use-restore-entries';\nimport { RestoreIcon } from '@ui/icons/material/Restore';\nimport { downloadFileFromUrl } from '@ui/utils/files/download-file-from-url';\nexport function useEntryActions(entries) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n  return [preview, share, getLink, addStar, removeStar, moveTo, rename, makeCopy, download, deleteAction, removeSharedEntries, restoreEntries].filter(action => !!action);\n}\nexport function usePreviewAction(entries) {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    }\n  };\n}\nexport function useShareAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) return;\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    }\n  };\n}\nfunction useGetLinkAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({\n        entryId: entries[0].id\n      });\n      driveState().setActiveActionDialog('getLink', entries);\n    }\n  };\n}\nfunction useAddToStarredAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (entries.every(e => e.tags?.find(tag => tag.name === 'starred')) || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useRemoveFromStarred(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (!entries.every(e => e.tags?.find(tag => tag.name === 'starred')) || activePage === TrashPage) return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useMoveToAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (!entries.every(e => e.permissions['files.update']) || activePage === SharesPage || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    }\n  };\n}\nfunction useRenameAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    }\n  };\n}\nfunction useMakeCopyAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        destinationId: activePage?.folder?.id\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useDownloadEntriesAction(entries) {\n  const {\n    downloadUrl\n  } = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash)\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    }\n  };\n}\nexport function useDeleteEntriesAction(entries) {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage === SharesPage || !entries.every(e => e.permissions['files.delete'])) return;\n  return {\n    label: activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage\n        });\n        driveState().selectEntries([]);\n      }\n    }\n  };\n}\nexport function useRestoreEntriesAction(entries) {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage || !entries.every(e => e.permissions['files.delete'])) return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nexport function useRemoveSharedEntriesAction(entries) {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        userId: 'me'\n      }, {\n        onSuccess: (r, p) => {\n          toast(message('Removed [one 1 item|other {count} items]', {\n            values: {\n              count: p.entryIds.length\n            }\n          }));\n        },\n        onError: err => showHttpErrorToast(err, message('Could not remove items'))\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}","import { message } from '@ui/i18n/message';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { TrashPage } from '../drive-page/drive-page';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { FileUploadIcon } from '@ui/icons/material/FileUpload';\nimport { DriveFolderUploadIcon } from '@ui/icons/material/DriveFolderUpload';\nimport { useDeleteEntries } from '../files/queries/use-delete-entries';\nimport { DeleteForeverIcon } from '@ui/icons/material/DeleteForever';\nimport { openUploadWindow } from '@ui/utils/files/open-upload-window';\nexport function useDrivePageActions(page) {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(action => !!action);\n}\nfunction useNewFolderAction(page) {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    }\n  };\n}\nfunction useUploadFilesAction(page) {\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({\n        multiple: true\n      }));\n    }\n  };\n}\nfunction useUploadFolderAction(page) {\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({\n        directory: true\n      }));\n    }\n  };\n}\nfunction useEmptyTrashAction(page) {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({\n        entryIds: [],\n        emptyTrash: true\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}","import React, { createElement } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { useEntryActions } from './use-entry-actions';\nimport { RootFolderPage, TrashPage } from '../drive-page/drive-page';\nimport { useDrivePageActions } from './use-drive-page-actions';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nexport function EntryActionMenuTrigger({\n  children,\n  entries,\n  page,\n  showIfNoActions\n}) {\n  if (page?.name === RootFolderPage.name) {\n    return <PageMenu page={RootFolderPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>;\n  }\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>;\n  }\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>;\n  }\n  if (entries?.length) {\n    return <EntriesMenu entries={entries} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>;\n  }\n  return null;\n}\nfunction EntriesMenu({\n  entries,\n  children,\n  showIfNoActions\n}) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>;\n}\nfunction PageMenu({\n  page,\n  children,\n  showIfNoActions\n}) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>;\n}\nfunction BaseMenu({\n  actions,\n  children,\n  showIfNoActions\n}) {\n  if (!actions.length && !showIfNoActions) {\n    return null;\n  }\n  return <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n        return <MenuItem onSelected={() => {\n          action.execute();\n        }} key={action.key} value={action.key} startIcon={createElement(action.icon)}>\n              <Trans {...action.label} />\n            </MenuItem>;\n      })}\n      </Menu>\n    </MenuTrigger>;\n}","import { usePaginatedEntries } from './use-paginated-entries';\nexport function useEntries() {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}","import { driveState, useDriveStore } from '../drive-store';\nimport { getAllEntries } from './queries/use-paginated-entries';\nimport { useEntries } from './queries/use-entries';\nimport { useFolders } from './queries/use-folders';\nexport function useSelectedEntries() {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids).map(id => entries.find(entry => entry.id === id)).filter(e => !!e);\n}\nexport function useSelectedEntry() {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\nexport function useSelectedEntryParent() {\n  const entry = useSelectedEntry();\n  const {\n    data\n  } = useFolders();\n  if (!entry || !data?.folders) return;\n  return data.folders.find(e => e.id === entry.parent_id);\n}\nexport function getSelectedEntries() {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids.map(id => allEntries.find(entry => entry.id === id)).filter(e => !!e);\n}","import React, { createElement } from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { EntryActionMenuTrigger } from './entry-action-menu-trigger';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { Trans } from '@ui/i18n/trans';\nimport { useSelectedEntries } from '../files/use-selected-entries';\nimport { useDeleteEntriesAction, usePreviewAction, useRemoveSharedEntriesAction, useShareAction } from './use-entry-actions';\nexport function EntryActionList({\n  className\n}) {\n  const selectedEntries = useSelectedEntries();\n  if (!selectedEntries.length) {\n    return null;\n  }\n  return <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>;\n}\nfunction ActionList({\n  entries\n}) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n  const actions = [preview, share, deleteAction, removeShared].filter(action => !!action);\n  return <div className=\"entry-action-list\">\n      {actions.map(action => <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton size=\"sm\" onClick={() => {\n        action.execute();\n      }}>\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>)}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>;\n}","import { useSelectedEntries } from './use-selected-entries';\nimport { useEntryActions } from '../entry-actions/use-entry-actions';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { ContextMenu } from '@ui/menu/context-menu';\nimport { MenuItem } from '@ui/menu/menu-trigger';\nimport React, { createElement } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { RootFolderPage } from '../drive-page/drive-page';\nimport { useDrivePageActions } from '../entry-actions/use-drive-page-actions';\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n  return null;\n}\nfunction EntriesContextMenu({\n  entries,\n  position\n}) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\nfunction PageContextMenu({\n  page,\n  position\n}) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\nfunction BaseContextMenu({\n  position,\n  actions\n}) {\n  return <ContextMenu position={position} onOpenChange={isOpen => {\n    if (!isOpen) {\n      driveState().setContextMenuData(null);\n    }\n  }}>\n      {actions.map(action => <MenuItem value={action.key} key={action.key} onSelected={action.execute} startIcon={createElement(action.icon)}>\n          <Trans {...action.label} />\n        </MenuItem>)}\n    </ContextMenu>;\n}","import { useMediaQuery } from '@ui/utils/hooks/use-media-query';\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}","import { useDraggable } from '@ui/interactions/dnd/use-draggable';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { getSelectedEntries } from '../files/use-selected-entries';\nimport { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { folderAcceptsDrop, useFolderDropAction } from '../files/use-folder-drop-action';\nimport { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMouseSelectable } from '@ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport { TrashPage } from '@app/drive/drive-page/drive-page';\nimport { useIsTouchDevice } from '@ui/utils/hooks/is-touch-device';\nexport function useFileViewDnd(destination) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef(null);\n  const {\n    onDrop\n  } = useFolderDropAction(destination);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s => s.entriesBeingDragged.includes(destination.id));\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    draggableProps\n  } = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: destination.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target) => {\n      if (!driveState().selectedEntries.has(destination.id)) {\n        driveState().selectEntries([destination.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries()\n  });\n  const {\n    droppableProps\n  } = useDroppable({\n    id: destination.id,\n    disabled: isTouchDevice || destination.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, destination),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop\n  });\n  useMouseSelectable({\n    id: destination.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([destination.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([destination.id]);\n    }\n  });\n  const itemClassName = clsx(isDragging && 'opacity-20', isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded');\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref\n  };\n}","import { mergeProps } from '@react-aria/utils';\nimport { useFileViewDnd } from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { driveState } from '../../drive-store';\nimport { TableContext } from '@common/ui/tables/table-context';\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}) {\n  const {\n    isCollapsedMode\n  } = useContext(TableContext);\n  const {\n    draggableProps,\n    droppableProps,\n    itemClassName,\n    ref\n  } = useFileViewDnd(item);\n  return <div className={clsx(className, itemClassName)} ref={ref} {...mergeProps(draggableProps, droppableProps, domProps, {\n    onContextMenu: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (!isCollapsedMode) {\n        if (!driveState().selectedEntries.has(item.id)) {\n          driveState().selectEntries([item.id]);\n        }\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    }\n  })}>\n      {children}\n    </div>;\n}","import { useCallback } from 'react';\nimport { getPathForFolder, TrashPage } from '../drive-page/drive-page';\nimport { driveState } from '../drive-store';\nimport { getSelectedEntries } from '../files/use-selected-entries';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n  const performViewItemAction = useCallback(entry => {\n    if (entry && entry.type === 'folder') {\n      if (driveState().activePage === TrashPage) {\n        driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n      } else {\n        navigate(getPathForFolder(entry.hash));\n      }\n    } else {\n      const selectedEntries = getSelectedEntries();\n      driveState().setActiveActionDialog('preview', selectedEntries.length ? selectedEntries : [entry]);\n    }\n  }, [navigate]);\n  return {\n    performViewItemAction\n  };\n}","import { Trans } from '@ui/i18n/trans';\nimport { FormattedDate } from '@ui/i18n/formatted-date';\nimport React, { useContext } from 'react';\nimport memoize from 'nano-memoize';\nimport { TableContext } from '@common/ui/tables/table-context';\nimport { Checkbox } from '@ui/forms/toggle/checkbox';\nimport { EntryActionMenuTrigger } from '@app/drive/entry-actions/entry-action-menu-trigger';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport clsx from 'clsx';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\nexport const fileTableColumns = [{\n  key: 'name',\n  allowsSorting: true,\n  header: () => <Trans message=\"Name\" />,\n  visibleInMode: 'all',\n  width: 'flex-3 min-w-200',\n  body: entry => <FileNameColumn entry={entry} />\n}, {\n  key: 'updated_at',\n  allowsSorting: true,\n  maxWidth: 'max-w-184',\n  header: () => <Trans message=\"Last modified\" />,\n  body: user => <FormattedDate date={user.updated_at} />\n}, {\n  key: 'file_size',\n  allowsSorting: true,\n  header: () => <Trans message=\"Size\" />,\n  maxWidth: 'max-w-144',\n  body: entry => formatFileSize(entry.file_size) ?? '-'\n}, {\n  key: 'actions',\n  hideHeader: true,\n  header: () => <Trans message=\"Actions\" />,\n  align: 'end',\n  width: 'w-42 flex-shrink-0',\n  visibleInMode: 'all',\n  body: entry => <ActionsColumn entry={entry} />\n}];\nfunction FileNameColumn({\n  entry\n}) {\n  const {\n    isCollapsedMode\n  } = useContext(TableContext);\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\n  return <div className=\"flex items-center gap-14\">\n      <FileThumbnail className={clsx('rounded', sizeClassName)} iconClassName={sizeClassName} file={entry} />\n      <div className=\"min-w-0\">\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n        {isCollapsedMode && <div className=\"mt-4 flex items-center text-xs text-muted\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>}\n      </div>\n    </div>;\n}\nfunction ActionsColumn({\n  entry\n}) {\n  const {\n    selectedRows\n  } = useContext(TableContext);\n  return selectedRows.length ? <Checkbox className=\"mr-8 block\" checked={selectedRows.includes(entry.id)} /> : <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\">\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>;\n}","import React, { useMemo } from 'react';\nimport { Table } from '@common/ui/tables/table';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { FileTableRow } from './file-table-row';\nimport { useViewItemActionHandler } from '../use-view-item-action-handler';\nimport { fileTableColumns } from './file-table-columns';\nexport function FileTable({\n  entries\n}) {\n  const {\n    performViewItemAction\n  } = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n  return <Table columns={fileTableColumns} data={entries} sortDescriptor={sortDescriptor} onSortChange={value => {\n    driveState().setSortDescriptor(value);\n  }} onAction={performViewItemAction} selectedRows={selectedRows} selectionStyle=\"highlight\" renderRowAs={FileTableRow} onSelectionChange={value => {\n    driveState().selectEntries(value);\n  }} />;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nexport const BaseFileGridItem = React.forwardRef(({\n  entry,\n  className,\n  isSelected,\n  isMobileMode,\n  footerAdornment,\n  ...domProps\n}, ref) => {\n  return <div {...domProps} ref={ref} className={clsx('grid-item flex aspect-square select-none flex-col overflow-hidden rounded border shadow outline-none transition-shadow-opacity dark:bg-alt', isSelected && 'border-primary', className)}>\n        <div className=\"relative min-h-0 flex-auto\">\n          <FileThumbnail className=\"h-full w-full\" iconClassName=\"block w-70 h-70 absolute m-auto inset-0\" file={entry} />\n        </div>\n        <Footer entry={entry} isSelected={isSelected} isMobile={isMobileMode} adornment={footerAdornment} />\n      </div>;\n});\nfunction Footer({\n  entry,\n  isSelected,\n  isMobile,\n  adornment\n}) {\n  return <div className={clsx('flex h-48 flex-shrink-0 items-center text-sm', isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16', isSelected && 'bg-primary-light/20')}>\n      <div className=\"min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>;\n}","import React, { useContext } from 'react';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { mergeProps } from '@react-aria/utils';\nimport { useFileViewDnd } from '../use-file-view-dnd';\nimport { useViewItemActionHandler } from '../use-view-item-action-handler';\nimport { BaseFileGridItem } from './base-file-grid-item';\nimport { EntryActionMenuTrigger } from '../../entry-actions/entry-action-menu-trigger';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport { Checkbox } from '@ui/forms/toggle/checkbox';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { isCtrlOrShiftPressed } from '@ui/utils/keybinds/is-ctrl-or-shift-pressed';\nimport { usePointerEvents } from '@ui/interactions/use-pointer-events';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nexport function FileGridItem({\n  entry\n}) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {\n    performViewItemAction\n  } = useViewItemActionHandler();\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    draggableProps,\n    droppableProps,\n    itemClassName,\n    ref\n  } = useFileViewDnd(entry);\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n  const pressHandler = (e, el) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      if (isCtrlOrShiftPressed(e)) {\n        toggleEntry();\n      } else {\n        driveState().selectEntries([entry.id]);\n      }\n    }\n  };\n  const {\n    domProps: pressProps\n  } = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler\n  });\n  const keyboardHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n  const contextMenuHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  return <BaseFileGridItem {...mergeProps(draggableProps, droppableProps, pressProps, {\n    onKeyDown: createEventHandler(keyboardHandler)\n  })} ref={ref} entry={entry} isSelected={isSelected} isMobileMode={!!isMobileMode} tabIndex={-1} onDoubleClick={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      performViewItemAction(entry);\n    }\n  }} footerAdornment={isMobileMode && <FooterAdornment entry={entry} isSelected={isSelected} />} onContextMenu={createEventHandler(contextMenuHandler)} className={itemClassName} />;\n}\nfunction FooterAdornment({\n  entry,\n  isSelected\n}) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n  if (anySelected) {\n    return <Checkbox className=\"mr-8 block\" checked={isSelected} />;\n  }\n  return <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\" onPointerDown={e => {\n      e.stopPropagation();\n    }}>\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>;\n}","import { FileGridItem } from './file-grid-item';\nimport React from 'react';\nexport function FileGrid({\n  entries\n}) {\n  return <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n        return <FileGridItem key={entry.id} entry={entry} />;\n      })}\n      </div>\n    </div>;\n}","import { message } from '@ui/i18n/message';\nexport const AVAILABLE_SORTS = [{\n  id: 'file_size',\n  label: message('Size')\n}, {\n  id: 'name',\n  label: message('Name')\n}, {\n  id: 'updated_at',\n  label: message('Last modified')\n}, {\n  id: 'created_at',\n  label: message('Upload date')\n}, {\n  id: 'type',\n  label: message('Type')\n}, {\n  id: 'extension',\n  label: message('Extension')\n}];","import { AVAILABLE_SORTS } from './available-sorts';\nimport { Button } from '@ui/buttons/button';\nimport { SortIcon } from '@ui/icons/material/Sort';\nimport { Trans } from '@ui/i18n/trans';\nimport { Menu, MenuItem, MenuSection, MenuTrigger } from '@ui/menu/menu-trigger';\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false\n}) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n  return <MenuTrigger showCheckmark selectionMode=\"multiple\" selectedValue={[direction || 'desc', column || '']} onItemSelected={key => {\n    if (key === 'asc' || key === 'desc') {\n      onChange({\n        orderBy: column,\n        orderDir: key\n      });\n    } else {\n      onChange({\n        orderBy: key,\n        orderDir: direction\n      });\n    }\n  }}>\n      <Button className=\"text-muted\" variant=\"text\" size=\"sm\" startIcon={<SortIcon />} disabled={isDisabled}>\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>)}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>;\n}","import { driveState, useDriveStore } from '../../drive-store';\nimport { EntriesSortButton } from './entries-sort-button';\nimport React from 'react';\nexport function DriveSortButton({\n  isDisabled\n}) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return <EntriesSortButton isDisabled={isDisabled} descriptor={descriptor} onChange={value => {\n    driveState().setSortDescriptor(value);\n  }} />;\n}","import { useQuery } from '@tanstack/react-query';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nexport function useFolderPath({\n  hash,\n  params,\n  isEnabled = true\n}) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchFolderPath(hash, params),\n    queryFn: () => fetchFolderPath(hash, params),\n    enabled: !!hash && isEnabled\n  });\n}\nfunction fetchFolderPath(hash, params) {\n  return apiClient.get(`folders/${hash}/path`, {\n    params\n  }).then(response => response.data);\n}","import React, { useContext } from 'react';\nimport { useDriveStore } from './drive-store';\nimport { makeFolderPage, RootFolderPage, SharesPage, TrashPage } from './drive-page/drive-page';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { useAuth } from '@common/auth/use-auth';\nimport { useFolderPath } from './files/queries/use-folder-path';\nimport { EntryActionMenuTrigger } from './entry-actions/entry-action-menu-trigger';\nimport { useActiveWorkspace } from '@common/workspace/active-workspace-id-context';\nimport { ButtonBase } from '@ui/buttons/button-base';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { MixedText } from '@ui/i18n/mixed-text';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nexport function PageBreadcrumbs({\n  className\n}) {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading = !page || !workspace || page.isFolderPage && !folder || query.fetchStatus !== 'idle';\n  let content;\n  if (isLoading) {\n    content = null;\n  } else {\n    const items = rootItem ? [rootItem] : [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name\n        });\n      });\n    }\n    content = <Breadcrumb className={className} size={isMobileMode ? 'md' : 'lg'} currentIsClickable>\n        {items.map((item, index) => {\n        const isLast = index === items.length - 1;\n        if (!isLast) {\n          return <BreadcrumbItem key={item.page.uniqueId} onSelected={() => {\n            navigate(item.page.path);\n          }}>\n                <MixedText value={item.label} />\n              </BreadcrumbItem>;\n        }\n        return <BreadcrumbItem key={item.page.uniqueId}>\n              {({\n            isMenuItem\n          }) => {\n            if (isMenuItem || !item.page.folder && item.page !== TrashPage) {\n              return <MixedText value={item.label} />;\n            }\n            return <EntryActionMenuTrigger page={item.page} showIfNoActions>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"text-muted icon-md\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>;\n          }}\n            </BreadcrumbItem>;\n      })}\n      </Breadcrumb>;\n  }\n  return content;\n}\nfunction useRootItem() {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {\n    user\n  } = useAuth();\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (page?.isFolderPage && (page?.name === RootFolderPage.name || page.folder?.workspace_id === workspace.id)) {\n      return {\n        label: workspace.name,\n        page: RootFolderPage\n      };\n    }\n  }\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {\n        label: SharesPage.label,\n        page: SharesPage\n      };\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {\n      label: RootFolderPage.label,\n      page: RootFolderPage\n    };\n  }\n\n  // if folder page is not active, we are already at the root\n  return {\n    label: page.label,\n    page\n  };\n}","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nexport function InfiniteScrollSentinel({\n  query: {\n    isInitialLoading,\n    fetchNextPage,\n    isFetchingNextPage,\n    hasNextPage\n  },\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'sm'\n}) {\n  const sentinelRef = useRef(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant = _variant === 'loadMore' && loadMoreClickCount < 3 ? 'loadMore' : 'infiniteScroll';\n\n  // don't lazy load unless sentinel has left the view after last lazy load\n  // 1. will prevent lazy loading until initial data is rendered and pushes sentinel out of view\n  // 2. when sentinel is top (chat interface) prevent load until container is scrolled to the bottom\n  // 3. when sentinel is bottom, prevent double lazy load if \"isLoading\" is false, but sentinel is still in view\n  const leftViewAfterLoading = useRef(false);\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        if (!leftViewAfterLoading.current) return;\n        if (hasNextPage && !isLoading) {\n          leftViewAfterLoading.current = false;\n          fetchNextPage();\n        }\n      } else {\n        leftViewAfterLoading.current = true;\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n  let content;\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button size={size === 'md' ? 'sm' : 'xs'} className={clsx(size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112')} variant=\"outline\" color=\"primary\" onClick={() => {\n        fetchNextPage();\n        setLoadMoreClickCount(loadMoreClickCount + 1);\n      }} disabled={isLoading}>\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? <Trans message=\"Load all\" /> : <Trans message=\"Show more\" />}\n        </Button>\n      </div>;\n  } else {\n    content = <AnimatePresence>\n        {isFetchingNextPage && <m.div className={clsx('flex w-full justify-center', loaderMarginTop)} {...opacityAnimation}>\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>}\n      </AnimatePresence>;\n  }\n  return <div style={style} className={clsx('w-full', className, hasNextPage && 'min-h-36')} role=\"presentation\">\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>;\n}","import { useAuth } from '../../auth/use-auth';\nimport { memo, useEffect, useId, useMemo, useRef } from 'react';\nimport lazyLoader from '@ui/utils/loaders/lazy-loader';\nimport clsx from 'clsx';\nimport { useSettings } from '@ui/settings/use-settings';\nimport dot from 'dot-object';\nimport { getScrollParent } from '@react-aria/utils';\nexport function AdHost({\n  slot,\n  className\n}) {\n  const settings = useSettings();\n  const {\n    isSubscribed\n  } = useAuth();\n  const adCode = useMemo(() => {\n    return dot.pick(`ads.${slot}`, settings);\n  }, [slot, settings]);\n  if (settings.ads?.disable || isSubscribed || !adCode) return null;\n  return <InvariantAd className={className} slot={slot} adCode={adCode} />;\n}\nconst InvariantAd = memo(({\n  slot,\n  adCode,\n  className\n}) => {\n  const ref = useRef(null);\n  const id = useId();\n  useEffect(() => {\n    if (ref.current) {\n      loadAdScripts(adCode, ref.current).then(() => {\n        executeAdJavascript(adCode, id);\n      });\n    }\n    return () => {\n      // @ts-ignore\n      delete window['google_ad_modifications'];\n    };\n  }, [adCode, id]);\n\n  // remove height modifications added by adsense\n  useEffect(() => {\n    if (ref.current) {\n      const scrollParent = getScrollParent(ref.current);\n      if (scrollParent) {\n        const observer = new MutationObserver(function () {\n          scrollParent.style.height = '';\n          scrollParent.style.minHeight = '';\n        });\n        observer.observe(scrollParent, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n        return () => observer.disconnect();\n      }\n    }\n  }, []);\n  return <div ref={ref} id={id} className={clsx('ad-host flex max-h-[600px] min-h-90 w-full max-w-full items-center justify-center overflow-hidden', `${slot.replace(/\\./g, '-')}-host`, className)} dangerouslySetInnerHTML={{\n    __html: getAdHtml(adCode)\n  }}></div>;\n}, () => {\n  // never re-render\n  return false;\n});\nfunction getAdHtml(adCode) {\n  // strip out all script tags from ad code and leave only html\n  return adCode?.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '').trim();\n}\n\n// Load any external scripts needed by ad.\nfunction loadAdScripts(adCode, parentEl) {\n  const promises = [];\n\n  // load ad code script\n  const pattern = /<script.*?src=['\"](.*?)['\"]/g;\n  let match;\n  while (match = pattern.exec(adCode)) {\n    if (match[1]) {\n      promises.push(lazyLoader.loadAsset(match[1], {\n        type: 'js',\n        parentEl\n      }));\n    }\n  }\n  return Promise.all(promises);\n}\n\n// Execute ad code javascript and replace document.write if needed.\nfunction executeAdJavascript(adCode, id) {\n  // find any ad code javascript that needs to be executed\n  const pattern = /<script\\b[^>]*>([\\s\\S]*?)<\\/script>/g;\n  let content;\n  while (content = pattern.exec(adCode)) {\n    if (content[1]) {\n      const r = `var d = document.createElement('div'); d.innerHTML = $1; document.getElementById('${id}').appendChild(d.firstChild);`;\n      const toEval = content[1].replace(/document.write\\((.+?)\\);/, r);\n      eval(toEval);\n    }\n  }\n}","import { AnimatePresence, m } from 'framer-motion';\nimport { Trans } from '@ui/i18n/trans';\nimport React from 'react';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nexport function DropTargetMask({\n  isVisible\n}) {\n  const mask = <m.div key=\"dragTargetMask\" {...opacityAnimation} transition={{\n    duration: 0.3\n  }} className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\">\n      <m.div initial={{\n      y: '100%',\n      opacity: 0\n    }} animate={{\n      y: '-10px',\n      opacity: 1\n    }} exit={{\n      y: '100%',\n      opacity: 0\n    }} className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\">\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>;\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}","import React, { useContext, useRef, useState } from 'react';\nimport { usePaginatedEntries } from '../files/queries/use-paginated-entries';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { SearchFilterList } from '../search/search-filter-list';\nimport { Trans } from '@ui/i18n/trans';\nimport { useMouseSelectionBox } from '@ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { mergeProps } from '@react-aria/utils';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { EntryActionList } from '../entry-actions/entry-action-list';\nimport { DriveContextMenu } from '../files/drive-context-menu';\nimport { FileTable } from './file-table/file-table';\nimport { FileGrid } from './file-grid/file-grid';\nimport { DriveSortButton } from '../layout/sorting/drive-sort-button';\nimport { PageBreadcrumbs } from '../page-breadcrumbs';\nimport { InfiniteScrollSentinel } from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport { useEntries } from '../files/queries/use-entries';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { DropTargetMask } from '../drop-target-mask';\nimport { useSearchParams } from 'react-router';\nimport clsx from 'clsx';\nimport { useDeleteEntries } from '@app/drive/files/queries/use-delete-entries';\nimport { TrashPage } from '@app/drive/drive-page/drive-page';\nimport { getSelectedEntries } from '@app/drive/files/use-selected-entries';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nimport { isCtrlKeyPressed } from '@ui/utils/keybinds/is-ctrl-key-pressed';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nexport function FileView({\n  className\n}) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering = !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef(null);\n  const query = usePaginatedEntries();\n  const entries = useEntries();\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    containerProps,\n    boxProps\n  } = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!e.target.closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    }\n  });\n  const {\n    droppableProps\n  } = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    disabled: !activePage?.canUpload,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    }\n  });\n  if (!activePage) return null;\n  let content;\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(isSearchingOrFiltering);\n    content = <IllustratedMessage className=\"mt-40\" image={<SvgImage src={noContentMessage.image} />} title={<Trans {...noContentMessage.title} />} description={<Trans {...noContentMessage.description} />} />;\n  } else if (!query.isLoading) {\n    content = viewMode === 'list' ? <FileTable entries={entries} /> : <FileGrid entries={entries} />;\n  }\n  const handleContextMenu = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleKeybinds = e => {\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      driveState().selectEntries(entries.map(entry => entry.id));\n    }\n    if (e.key === 'Delete') {\n      e.preventDefault();\n      e.stopPropagation();\n      if (driveState().selectedEntries.size && !deleteEntries.isPending) {\n        if (activePage === TrashPage) {\n          driveState().setActiveActionDialog('confirmAndDeleteForever', getSelectedEntries());\n        } else {\n          deleteEntries.mutate({\n            entryIds: [...driveState().selectedEntries],\n            deleteForever: activePage === TrashPage\n          });\n          driveState().selectEntries([]);\n        }\n      }\n    }\n  };\n  return <div className={clsx('relative outline-none', className)} tabIndex={-1} {...mergeProps(containerProps, droppableProps, {\n    onKeyDown: createEventHandler(handleKeybinds)\n  })} onContextMenu={handleContextMenu}>\n      <div className=\"relative flex min-h-full flex-col pt-10\">\n        {isMobileMode ? <PageBreadcrumbs className=\"mb-10 px-14\" /> : <Toolbar />}\n        <SearchFilterList />\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel query={query} />\n        </div>\n        <div {...boxProps} className=\"pointer-events-none absolute left-0 top-0 z-10 hidden border border-primary-light bg-primary-light/20 shadow-md\" />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>;\n}\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>;\n}","export function formatSpeed(bytesPerSecond) {\n  if (bytesPerSecond === 0) return '';\n  const units = ['B/s', 'KB/s', 'MB/s', 'GB/s'];\n  let size = bytesPerSecond;\n  let unitIndex = 0;\n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex++;\n  }\n  return `${size.toFixed(1)} ${units[unitIndex]}`;\n}\nexport function formatETA(seconds) {\n  if (seconds === 0 || !isFinite(seconds)) return '';\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const secs = Math.floor(seconds % 60);\n  if (hours > 0) {\n    return `${hours}h ${minutes}m ${secs}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n}\nexport function formatETAShort(seconds) {\n  if (seconds === 0 || !isFinite(seconds)) return '';\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const secs = Math.floor(seconds % 60);\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  } else if (minutes > 0) {\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  } else {\n    return `${secs}s`;\n  }\n}","import { useMemo } from 'react';\nimport { useFileUploadStore } from './file-upload-provider';\nimport { formatSpeed, formatETA } from './upload-analytics-utils';\n/**\n * Custom hook that provides upload analytics for a specific file\n */\nexport function useUploadAnalytics(fileId) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(fileId));\n  return useMemo(() => {\n    const percentage = fileUpload?.percentage || 0;\n    const bytesUploaded = fileUpload?.bytesUploaded || 0;\n    const speed = fileUpload?.speed || 0;\n    const eta = fileUpload?.eta || 0;\n    const status = fileUpload?.status || 'pending';\n    return {\n      percentage,\n      bytesUploaded,\n      speed,\n      eta,\n      speedFormatted: formatSpeed(speed),\n      etaFormatted: formatETA(eta),\n      status\n    };\n  }, [fileUpload?.percentage, fileUpload?.bytesUploaded, fileUpload?.speed, fileUpload?.eta, fileUpload?.status]);\n}","import { memo, useMemo, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { CheckCircleIcon } from '@ui/icons/material/CheckCircle';\nimport { useFileUploadStore } from '@common/uploads/uploader/file-upload-provider';\nimport { Trans } from '@ui/i18n/trans';\nimport { MixedText } from '@ui/i18n/mixed-text';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { ErrorIcon } from '@ui/icons/material/Error';\nimport { WarningIcon } from '@ui/icons/material/Warning';\nimport { RefreshIcon } from '@ui/icons/material/Refresh';\nimport { message } from '@ui/i18n/message';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nimport { useUploadAnalytics } from '@common/uploads/uploader/use-upload-analytics';\nexport const UploadQueueItem = memo(({\n  file,\n  style\n}) => {\n  return <div className=\"absolute left-0 top-0 flex w-full items-center gap-14 p-10\" style={style}>\n      <div className=\"shrink-0 rounded border p-8\">\n        <FileTypeIcon className=\"h-22 w-22\" mime={file.mime} />\n      </div>\n      <div className=\"min-w-0 flex-auto pr-10\">\n        <div className=\"mb-2 flex min-w-0 items-center gap-10\">\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>;\n});\nfunction SizeInfo({\n  file\n}) {\n  const analytics = useUploadAnalytics(file.id);\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(() => prettyBytes(analytics.bytesUploaded), [analytics.bytesUploaded]);\n  let statusMessage;\n  if (analytics.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (analytics.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (analytics.status === 'failed') {\n    const retryCount = fileUpload?.retryCount || 0;\n    const maxRetries = fileUpload?.maxRetries || 0;\n    const canRetry = (fileUpload?.errorType === 'network' || fileUpload?.errorType === 'server') && retryCount < maxRetries;\n    let failureMessage = 'Upload failed';\n    if (fileUpload?.errorType === 'network') {\n      failureMessage = 'Network error - check your connection';\n    } else if (fileUpload?.errorType === 'server') {\n      failureMessage = 'Server error - please try again';\n    } else if (fileUpload?.errorType === 'validation') {\n      failureMessage = 'File validation failed';\n    }\n    if (canRetry && retryCount > 0) {\n      failureMessage += ` (Attempt ${retryCount}/${maxRetries})`;\n    }\n    statusMessage = <div className=\"flex items-center gap-4\">\n        <Trans message={failureMessage} />\n        {canRetry && <span className=\"text-primary\">• Click retry button</span>}\n      </div>;\n  } else {\n    const {\n      speedFormatted,\n      etaFormatted\n    } = analytics;\n    if (fileUpload?.isRetrying) {\n      const retryCount = fileUpload?.retryCount || 0;\n      statusMessage = <Trans message=\"Retrying... (Attempt :attempt)\" values={{\n        attempt: retryCount\n      }} />;\n    } else {\n      statusMessage = <div className=\"flex items-center gap-4\">\n          <Trans message=\":bytesUploaded of :totalBytes\" values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes\n        }} />\n          {speedFormatted && <span>-</span>}\n          <span>{speedFormatted}</span>\n          {etaFormatted && <span>-</span>}\n          <span>{etaFormatted}</span>\n        </div>;\n    }\n  }\n  return <div className=\"text-xs text-muted\">{statusMessage}</div>;\n}\nfunction FileStatus({\n  file\n}) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const retryUpload = useFileUploadStore(s => s.retryUpload);\n  const analytics = useUploadAnalytics(file.id);\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n  const abortButton = <IconButton size=\"xs\" iconSize=\"sm\" onClick={() => {\n    abortUpload(file.id);\n  }}>\n      <CloseIcon />\n    </IconButton>;\n  const progressButton = <ProgressCircle aria-label=\"Upload progress\" size=\"w-24 h-24\" value={analytics.percentage} trackWidth={3} />;\n  const retryButton = <Tooltip label=\"Retry Upload\">\n        <IconButton size=\"xs\" iconSize=\"sm\" onClick={() => retryUpload(file.id)}>\n        <RefreshIcon />\n        </IconButton>\n    </Tooltip>;\n  let statusButton;\n  if (analytics.status === 'failed') {\n    const errMessage = errorMessage || message('This file could not be uploaded');\n    const canRetry = fileUpload?.errorType === 'network' || fileUpload?.errorType === 'server';\n    statusButton = <AnimatedStatus>\n          <Tooltip variant=\"danger\" label={<MixedText value={`${errMessage} (Error code: ${fileUpload?.errorCode || 'N/A'})`} />}>\n            {canRetry ? retryButton : <ErrorIcon className=\"text-danger\" size=\"md\" />}\n          </Tooltip>\n        </AnimatedStatus>;\n  } else if (analytics.status === 'aborted') {\n    statusButton = <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>;\n  } else if (analytics.status === 'completed') {\n    statusButton = <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>;\n  } else {\n    statusButton = <AnimatedStatus onPointerEnter={e => {\n      if (e.pointerType === 'mouse') {\n        setIsHovered(true);\n      }\n    }} onPointerLeave={e => {\n      if (e.pointerType === 'mouse') {\n        setIsHovered(false);\n      }\n    }}>\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>;\n  }\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\nfunction AnimatedStatus({\n  children,\n  ...domProps\n}) {\n  return <m.div {...domProps} initial={{\n    scale: 0,\n    opacity: 0\n  }} animate={{\n    scale: 1,\n    opacity: 1\n  }} exit={{\n    scale: 0,\n    opacity: 0\n  }}>\n      {children}\n    </m.div>;\n}","import { useRef } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { useFileUploadStore } from '@common/uploads/uploader/file-upload-provider';\nimport { Trans } from '@ui/i18n/trans';\nimport { UploadQueueItem } from './upload-queue-item';\nimport { useVirtualizer } from '@tanstack/react-virtual';\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n  return <AnimatePresence>\n      {isOpen && <m.div key=\"upload-queue\" className=\"fixed bottom-16 right-16 z-modal w-375 rounded border bg text-sm shadow-xl\" initial={{\n      y: '100%',\n      opacity: 0\n    }} animate={{\n      y: 0,\n      opacity: 1\n    }} exit={{\n      y: '100%',\n      opacity: 0\n    }}>\n          <Header />\n          <UploadList />\n        </m.div>}\n    </AnimatePresence>;\n}\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\n  const completedUploadsCount = useFileUploadStore(s => s.completedUploadsCount);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  let message;\n  if (inProgressUploadsCount) {\n    message = <Trans message=\"Uploading :count files\" values={{\n      count: inProgressUploadsCount\n    }} />;\n  } else if (completedUploadsCount) {\n    message = <Trans message=\"Uploaded :count files\" values={{\n      count: completedUploadsCount\n    }} />;\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return <div className=\"flex min-h-[45px] items-center justify-between gap-10 border-b bg-alt px-10 py-4\">\n      {message}\n      {inProgressUploadsCount === 0 ? <IconButton size=\"sm\" onClick={() => {\n      driveState().setUploadQueueIsOpen(false);\n      // wait for upload queue panel animation to complete, then clear inactive uploads\n      setTimeout(() => {\n        clearInactive();\n      }, 200);\n    }}>\n          <CloseIcon />\n        </IconButton> : undefined}\n    </div>;\n}\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  const uploadsArray = [...uploads.values()];\n  const ref = useRef(null);\n  const virtualizer = useVirtualizer({\n    count: uploads.size,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 60,\n    overscan: 4\n  });\n  return <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\n      <div className=\"relative w-full\" style={{\n      height: `${virtualizer.getTotalSize()}px`\n    }}>\n        {virtualizer.getVirtualItems().map(virtualItem => {\n        const upload = uploadsArray[virtualItem.index];\n        return <UploadQueueItem style={{\n          height: `${virtualItem.size}px`,\n          transform: `translateY(${virtualItem.start}px)`\n        }} key={upload.file.id} file={upload.file} />;\n      })}\n      </div>\n    </div>;\n}","export default \"__VITE_ASSET__6b065fb0__\"","import React, { useContext } from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nexport function DetailsSidebarHeader({\n  entryType,\n  entryName\n}) {\n  const {\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  return <div className=\"mb-38 flex items-center gap-16 text-text-main\">\n      <FileTypeIcon className=\"h-24 w-24\" type={entryType} />\n      <div className=\"mr-auto min-w-0 flex-auto text-ellipsis break-words text-xl font-normal\">\n        {entryName}\n      </div>\n      <IconButton size=\"md\" className=\"flex-shrink-0\" onClick={() => {\n      setRightSidenavStatus('closed');\n    }}>\n        <CloseIcon />\n      </IconButton>\n    </div>;\n}","import React from 'react';\nimport clsx from 'clsx';\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20'\n}) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nexport function useTaggableTags(params) {\n  return useQuery({\n    queryKey: getQueryKey(params),\n    queryFn: () => fetchTaggableTags(params),\n    initialData: params.initialData ? {\n      tags: params.initialData\n    } : undefined\n  });\n}\nfunction getQueryKey(params) {\n  const {\n    taggableType,\n    taggableId,\n    type,\n    notType\n  } = params;\n  const key = ['tags', 'taggable', taggableType, `${taggableId}`];\n  if (type != null) {\n    key.push(type);\n  }\n  if (notType != null) {\n    key.push(notType);\n  }\n  return key;\n}\nexport function invalidateTaggableTagsQuery({\n  taggableType,\n  taggableIds\n}) {\n  return Promise.allSettled(taggableIds.map(taggableId => queryClient.invalidateQueries({\n    queryKey: getQueryKey({\n      taggableType,\n      taggableId\n    })\n  })));\n}\nasync function fetchTaggableTags({\n  taggableType,\n  taggableId,\n  notType,\n  type\n}) {\n  return apiClient.get(`taggable/${taggableType}/${taggableId}/list-tags`, {\n    params: {\n      notType,\n      type\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { invalidateTaggableTagsQuery } from '@common/tags/use-taggable-tags';\nexport function useDetachTagFromTaggables() {\n  return useMutation({\n    mutationFn: payload => detachTag(payload),\n    onSuccess: (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction detachTag(payload) {\n  return apiClient.post(`taggable/detach-tag`, payload).then(r => r.data);\n}","import { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nexport function useTags(params) {\n  return useQuery({\n    queryKey: ['tags', params],\n    queryFn: ({\n      signal\n    }) => fetchTags(params, signal),\n    placeholderData: keepPreviousData\n  });\n}\nasync function fetchTags(params, signal) {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient.get(`tags`, {\n    params: {\n      paginate: 'simple',\n      ...params\n    },\n    signal: params.query ? signal : undefined\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { invalidateTaggableTagsQuery } from '@common/tags/use-taggable-tags';\nexport function useAttachTagToTaggables() {\n  return useMutation({\n    mutationFn: payload => attachTag(payload),\n    onSuccess: async (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction attachTag(payload) {\n  return apiClient.post(`taggable/attach-tag`, payload).then(r => r.data);\n}","import { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { List, ListItem } from '@ui/list/list';\nimport { useTags } from '@common/tags/use-tags';\nimport { PushPinIcon } from '@ui/icons/material/PushPin';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { CheckIcon } from '@ui/icons/material/Check';\nimport clsx from 'clsx';\nimport { useMemo, useState } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { useDetachTagFromTaggables } from '@common/tags/use-detach-tag-from-taggables';\nimport { useAttachTagToTaggables } from '@common/tags/use-attach-tag-to-taggables';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nexport function ManageTagsDialog({\n  attachedTags: propsAttachedTags,\n  tagType,\n  notTagType,\n  taggableType,\n  taggableIds,\n  userId,\n  isLoading,\n  onChange\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [query, setQuery] = useState('');\n  const {\n    data,\n    isPlaceholderData,\n    isLoading: queryIsLoading\n  } = useTags({\n    type: tagType,\n    notType: notTagType,\n    query,\n    userId\n  });\n  const detachTag = useDetachTagFromTaggables();\n  const attachTag = useAttachTagToTaggables();\n\n  // if all tags does not include tag in attached tags, add it to the top\n  const {\n    tags,\n    attachedTagIds\n  } = useMemo(() => {\n    const allTags = data?.pagination.data || [];\n    const attachedTags = propsAttachedTags || [];\n    const attachedTagIds = attachedTags.map(tag => tag.id);\n    const tags = allTags.filter(tag => !attachedTagIds.includes(tag.id));\n    tags.unshift(...attachedTags);\n    return {\n      tags,\n      attachedTagIds\n    };\n  }, [propsAttachedTags, data]);\n  return <Dialog>\n      <DialogBody padding=\"p-8\">\n        <form>\n          <TextField placeholder={trans({\n          message: 'Type tag name...'\n        })} inputBorder=\"border-b\" inputRadius=\"rounded-none\" inputRing=\"ring-0\" inputShadow=\"shadow-none\" startAdornment={<SearchIcon />} value={query} onChange={e => setQuery(e.target.value)} endAdornment={isPlaceholderData && <ProgressCircle isIndeterminate size=\"w-24 h-24\" />} />\n        </form>\n        <List className=\"compact-scrollbar h-320 overflow-y-auto stable-scrollbar\">\n          {tags.map(tag => {\n          const isAttached = attachedTagIds.includes(tag.id);\n          const isDisabled = attachTag.isPending || detachTag.isPending || isLoading;\n          return <ListItem isDisabled={isDisabled} onSelected={() => {\n            if (isAttached) {\n              detachTag.mutate({\n                tagId: tag.id,\n                taggableIds,\n                taggableType\n              }, {\n                onSuccess: () => onChange?.(tag.id)\n              });\n            } else {\n              attachTag.mutate({\n                taggableType,\n                taggableIds,\n                tagName: tag.name,\n                userId,\n                tagType\n              }, {\n                onSuccess: () => onChange?.(tag.id)\n              });\n            }\n          }} className={clsx(isAttached && (isDisabled ? 'text-primary-light' : 'text-primary'))} startIcon={<PushPinIcon size=\"xs\" />} key={tag.id} endSection={isAttached ? <CheckIcon size=\"sm\" className=\"block text-primary\" /> : <div className=\"h-20 w-20\" />}>\n                {tag.display_name || tag.name}\n              </ListItem>;\n        })}\n          {!isPlaceholderData && !data?.pagination.data.length && query && <ListItem startIcon={<PushPinIcon size=\"xs\" />} onSelected={() => {\n          attachTag.mutate({\n            taggableType,\n            taggableIds,\n            tagName: query,\n            userId,\n            tagType\n          }, {\n            onSuccess: r => {\n              setQuery('');\n              onChange?.(r.tag.id);\n            }\n          });\n        }}>\n              <Trans message={`Create tag \":name\"`} values={{\n            name: query\n          }} />\n            </ListItem>}\n          {data && !tags.length && !query && <li className=\"text-center text-muted\">\n              <Trans message=\"No tags found\" />\n            </li>}\n          {queryIsLoading && <li className=\"flex justify-center\">\n              <ProgressCircle isIndeterminate size=\"w-24 h24\" />\n            </li>}\n        </List>\n      </DialogBody>\n    </Dialog>;\n}","import { DetailsSidebarSectionHeader } from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport { Trans } from '@ui/i18n/trans';\nimport React from 'react';\nimport { useDetachTagFromTaggables } from '@common/tags/use-detach-tag-from-taggables';\nimport { useTaggableTags } from '@common/tags/use-taggable-tags';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Button } from '@ui/buttons/button';\nimport { ManageTagsDialog } from '@common/tags/manage-tags-dialog';\nimport { ChipList } from '@ui/forms/input-field/chip-field/chip-list';\nimport { Chip } from '@ui/forms/input-field/chip-field/chip';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { useAuth } from '@common/auth/use-auth';\nexport function DetailsSidebarTags({\n  entry\n}) {\n  const {\n    user\n  } = useAuth();\n  const detachTag = useDetachTagFromTaggables();\n  const {\n    data,\n    isFetching\n  } = useTaggableTags({\n    taggableType: 'fileEntry',\n    taggableId: entry.id,\n    initialData: entry.tags?.filter(tag => tag.type !== 'label'),\n    type: 'custom'\n  });\n  return <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <div className=\"flex items-center gap-8\">\n        <ChipList size=\"sm\" radius=\"rounded-button\" startButton={<DialogTrigger type=\"modal\">\n              <Button variant=\"outline\" startIcon={<AddIcon />} size=\"2xs\" className=\"min-h-26\">\n                <Trans message=\"Add tag\" />\n              </Button>\n              <ManageTagsDialog attachedTags={data?.tags} isLoading={isFetching} tagType=\"custom\" taggableType=\"fileEntry\" taggableIds={[entry.id]} userId={user?.id} />\n            </DialogTrigger>}>\n          {data?.tags.map(tag => <Chip key={tag.id} disabled={detachTag.isPending || isFetching} onRemove={() => {\n          detachTag.mutate({\n            tagId: tag.id,\n            taggableIds: [entry.id],\n            taggableType: 'fileEntry'\n          });\n        }}>\n              {tag.display_name || tag.name}\n            </Chip>)}\n        </ChipList>\n      </div>\n    </div>;\n}","import { useSelectedEntryParent } from '@app/drive/files/use-selected-entries';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport React, { useMemo } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { getPathForFolder, RootFolderPage } from '@app/drive/drive-page/drive-page';\nimport { FormattedDate } from '@ui/i18n/formatted-date';\nimport { GroupsIcon } from '@ui/icons/material/Groups';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { driveState } from '@app/drive/drive-store';\nimport { DetailsSidebarHeader } from '@app/drive/details-sidebar/details-sidebar-header';\nimport { DetailsSidebarSectionHeader } from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport { DetailsSidebarTags } from '@app/drive/details-sidebar/details-sidebar-tags';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nimport { Avatar } from '@ui/avatar/avatar';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nexport function DetailsSidebarProperties({\n  entry\n}) {\n  return <div>\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && <FileThumbnail className=\"mb-20\" file={entry} />}\n      <div>\n        <DetailsSidebarSectionHeader>\n          <Trans message=\"Who has access\" />\n        </DetailsSidebarSectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? <div className=\"flex h-32 w-32 items-center justify-center rounded-full border\">\n              <GroupsIcon className=\"icon-md\" />\n            </div> : null}\n          {entry.users.map(user => <Tooltip label={user.name} key={user.id}>\n              <Avatar src={user.image} size=\"md\" circle />\n            </Tooltip>)}\n        </div>\n        {entry.permissions['files.update'] && <Button className=\"mt-20 block\" variant=\"link\" color=\"primary\" onClick={() => {\n        driveState().setActiveActionDialog('share', [entry]);\n      }}>\n            <Trans message=\"Manage Access\" />\n          </Button>}\n      </div>\n      <PropertyList entry={entry} />\n      <DetailsSidebarTags entry={entry} />\n    </div>;\n}\nfunction PropertyList({\n  entry\n}) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(() => prettyBytes(entry.file_size), [entry.file_size]);\n  return <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader>\n        <Trans message=\"Properties\" />\n      </DetailsSidebarSectionHeader>\n      <PropertyItem label={<Trans message=\"Type\" />} value={<span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>} />\n      <PropertyItem label={<Trans message=\"Size\" />} value={entry.file_size ? prettySize : '-'} />\n      <PropertyItem label={<Trans message=\"Location\" />} value={<Button variant=\"link\" startIcon={<FolderIcon />} onClick={() => {\n      navigate(parent ? getPathForFolder(parent.hash) : RootFolderPage.path);\n    }}>\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>} />\n      {owner && <PropertyItem label={<Trans message=\"Owner\" />} value={owner.name} />}\n      <PropertyItem label={<Trans message=\"Modified\" />} value={<FormattedDate date={entry.updated_at} />} />\n      <PropertyItem label={<Trans message=\"Created\" />} value={<FormattedDate date={entry.updated_at} />} />\n    </div>;\n}\nfunction PropertyItem({\n  label,\n  value\n}) {\n  return <div className=\"mb-14 flex items-center\">\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>;\n}","import React, { Fragment } from 'react';\nimport { useSelectedEntry } from '../files/use-selected-entries';\nimport { Trans } from '@ui/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport { DetailsSidebarHeader } from '@app/drive/details-sidebar/details-sidebar-header';\nimport { DetailsSidebarProperties } from '@app/drive/details-sidebar/details-sidebar-properties';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function DetailsSidebar({\n  className\n}) {\n  const selectedEntry = useSelectedEntry();\n  return <div className={clsx(className, 'h-full overflow-y-auto border-l bg p-18 text-sm text-muted')}>\n      {selectedEntry ? <DetailsSidebarProperties entry={selectedEntry} /> : <NothingSelected />}\n    </div>;\n}\nfunction NothingSelected() {\n  return <Fragment>\n      <DetailsSidebarHeader entryType=\"folder\" entryName={<Trans message=\"All files\" />} />\n      <IllustratedMessage image={<SvgImage src={detailedExamination} />} description={<Trans message=\"Select file or folder to see details here\" />} />\n    </Fragment>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { apiClient } from '@common/http/query-client';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nexport function useRenameEntry(form) {\n  return useMutation({\n    mutationFn: payload => renameEntry(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message(':oldName renamed to :newName', {\n        values: {\n          oldName: p.initialName,\n          newName: r.fileEntry.name\n        }\n      }));\n    },\n    onError: err => onFormQueryError(err, form)\n  });\n}\nfunction renameEntry({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}`, payload).then(response => response.data);\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRenameEntry } from '../queries/use-rename-entry';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { Form } from '@ui/forms/form';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nexport function RenameEntryDialog({\n  entries\n}) {\n  const {\n    close,\n    formId\n  } = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({\n    defaultValues: {\n      name: initialName\n    }\n  });\n  const renameEntry = useRenameEntry(form);\n  const onSubmit = e => {\n    renameEntry.mutate({\n      entryId: entries[0].id,\n      name: e.name,\n      initialName\n    }, {\n      onSuccess: close\n    });\n  };\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField placeholder=\"Enter a name...\" aria-label=\"Entry name\" autoFocus name=\"name\" required minLength={3} maxLength={200} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} type=\"submit\" variant=\"flat\" color=\"primary\" disabled={renameEntry.isPending || !form.formState.isDirty}>\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nfunction createFolder({\n  name,\n  parentId\n}) {\n  return apiClient.post('folders', {\n    name,\n    parentId: parentId === 0 ? null : parentId\n  }).then(response => response.data);\n}\nexport function useCreateFolder(form) {\n  return useMutation({\n    mutationFn: ({\n      name,\n      parentId\n    }) => {\n      return createFolder({\n        name,\n        parentId\n      });\n    },\n    onSuccess: () => invalidateEntryQueries(),\n    onError: r => onFormQueryError(r, form)\n  });\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { toast } from '@ui/toast/toast';\nimport { Form } from '@ui/forms/form';\nimport { useCreateFolder } from '../queries/create-folder';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { message } from '@ui/i18n/message';\nimport { useTrans } from '@ui/i18n/use-trans';\nexport function NewFolderDialog({\n  parentId\n}) {\n  const {\n    close,\n    formId\n  } = useDialogContext();\n  const {\n    trans\n  } = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({\n        message: 'Untitled Folder'\n      })\n    }\n  });\n  const createFolder = useCreateFolder(form);\n  const onSubmit = value => {\n    createFolder.mutate({\n      ...value,\n      parentId\n    }, {\n      onSuccess: response => {\n        close(response.folder);\n        toast(message('Folder created'));\n      }\n    });\n  };\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField placeholder={trans({\n          message: 'Enter a name...'\n        })} aria-label=\"Entry name\" autoFocus autoSelectText name=\"name\" required minLength={3} maxLength={200} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} type=\"submit\" variant=\"flat\" color=\"primary\" disabled={createFolder.isPending}>\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { createElement, Fragment, useState } from 'react';\nimport { useShareAction } from '@app/drive/entry-actions/use-entry-actions';\nimport { Button } from '@ui/buttons/button';\nimport { Trans } from '@ui/i18n/trans';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useEntries } from '@app/drive/files/queries/use-entries';\nimport { FilePreviewDialog } from '@common/uploads/components/file-preview/file-preview-dialog';\nexport function EntryPreviewDialog({\n  selectedEntry\n}) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(file => file.id === selectedEntry?.id);\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return <FilePreviewDialog allowDownload={selectedEntry.permissions['files.download']} headerActionsLeft={<DriveActions activeIndex={activeIndex} entries={files} />} activeIndex={activeIndex} onActiveIndexChange={setActiveIndex} entries={files} />;\n}\nfunction DriveActions({\n  activeIndex,\n  entries\n}) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  if (!selectedEntry || !share) return null;\n  return <Fragment>\n      <IconButton className=\"md:hidden\" onClick={() => {\n      share.execute();\n    }}>\n        {createElement(share.icon)}\n      </IconButton>\n      <Button className=\"max-md:hidden\" variant=\"text\" startIcon={createElement(share.icon)} onClick={() => {\n      share.execute();\n    }}>\n        <Trans {...share.label} />\n      </Button>\n    </Fragment>;\n}","import axios from 'axios';\nimport { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction shareEntry({\n  entryId,\n  ...payload\n}) {\n  return apiClient.post(`file-entries/${entryId}/share`, payload).then(response => response.data);\n}\nexport function useShareEntry() {\n  return useMutation({\n    mutationFn: payload => shareEntry(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    }\n  });\n}","export const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true\n};","import { Button } from '@ui/buttons/button';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS } from '../files/drive-entry';\nimport { message } from '@ui/i18n/message';\nimport { Trans } from '@ui/i18n/trans';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nexport const PermissionSelectorItems = [{\n  key: 'view',\n  value: {\n    view: true\n  },\n  label: message('Can view')\n}, {\n  key: 'download',\n  value: {\n    view: true,\n    download: true\n  },\n  label: message('Can Download')\n}, {\n  key: 'edit',\n  value: DRIVE_ENTRY_FULL_PERMISSIONS,\n  label: message('Can edit')\n}];\nexport function PermissionSelector({\n  value,\n  onChange,\n  isDisabled\n}) {\n  return <MenuTrigger selectedValue={value.key} selectionMode=\"single\" onSelectionChange={key => {\n    if (key !== value.key) {\n      onChange(PermissionSelectorItems.find(p => p.key === key));\n    }\n  }}>\n      <Button variant=\"flat\" color=\"chip\" size=\"xs\" endIcon={<ArrowDropDownIcon />} disabled={isDisabled}>\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n        return <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>;\n      })}\n      </Menu>\n    </MenuTrigger>;\n}\nexport function getPermissionItemForUser(user) {\n  const {\n    download,\n    edit\n  } = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit');\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download');\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view');\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useChangePermission() {\n  return useMutation({\n    mutationFn: payload => changePermission(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n      toast(message('Updated user permissions'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not update permissions'))\n  });\n}\nfunction changePermission({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}/change-permissions`, payload).then(response => response.data);\n}","import { useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport clsx from 'clsx';\nimport { getPermissionItemForUser, PermissionSelector } from './permission-selector';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { useChangePermission } from './queries/use-change-permission';\nimport { useUnshareEntries } from './queries/use-unshare-entries';\nimport { Trans } from '@ui/i18n/trans';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { UserAvatar } from '@common/auth/user-avatar';\nexport function MemberList({\n  className,\n  entry\n}) {\n  if (!entry) return null;\n  const users = entry.users;\n  return <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => <MemberListItem key={user.id} user={user} entry={entry} />)}\n      </AnimatePresence>\n    </div>;\n}\nfunction MemberListItem({\n  user,\n  entry\n}) {\n  return <m.div initial={{\n    x: '-100%',\n    opacity: 0\n  }} animate={{\n    x: 0,\n    opacity: 1\n  }} exit={{\n    x: '100%',\n    opacity: 0\n  }} transition={{\n    type: 'tween',\n    duration: 0.125\n  }} className=\"mb-20 flex items-center gap-14 text-sm\" key={user.id}>\n      <UserAvatar user={user} circle size=\"w-44 h-44\" />\n      <div>\n        <div>{user.name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span> : <ActionButtons user={user} entry={entry} />}\n      </div>\n    </m.div>;\n}\nfunction ActionButtons({\n  user,\n  entry\n}) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] = useState(() => {\n    return getPermissionItemForUser(user);\n  });\n  return <div className=\"flex items-center gap-10\">\n      <PermissionSelector isDisabled={changePermissions.isPending} onChange={item => {\n      changePermissions.mutate({\n        userId: user.id,\n        permissions: item.value,\n        entryId: entry.id\n      });\n      setActivePermission(item);\n    }} value={activePermission} />\n      <IconButton disabled={unshareEntry.isPending} onClick={() => {\n      unshareEntry.mutate({\n        userId: user.id,\n        entryIds: [entry.id]\n      }, {\n        onSuccess: () => {\n          toast(message('Member removed'));\n        },\n        onError: err => showHttpErrorToast(err, message('Could not remove member'))\n      });\n    }}>\n        <CloseIcon />\n      </IconButton>\n    </div>;\n}","import { useState } from 'react';\nimport { Button } from '@ui/buttons/button';\nimport { useShareEntry } from './queries/use-share-entry';\nimport { PermissionSelector, PermissionSelectorItems } from './permission-selector';\nimport { MemberList } from './member-list';\nimport { ChipField } from '@ui/forms/input-field/chip-field/chip-field';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { Item } from '@ui/forms/listbox/item';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { useNormalizedModels } from '@common/ui/normalized-model/use-normalized-models';\nimport { isEmail } from '@ui/utils/string/is-email';\nimport { Avatar } from '@ui/avatar/avatar';\nexport function SharePanel({\n  className,\n  entry\n}) {\n  const {\n    trans\n  } = useTrans();\n  const {\n    share\n  } = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels('normalized-models/user', {\n    perPage: 7,\n    query: inputValue\n  }, {\n    enabled: share?.suggest_emails\n  });\n\n  // show user's email, instead of name in the chip\n  const displayWith = chip => chip.description || chip.name;\n  return <div className={className}>\n      <ChipField value={chips} onChange={setChips} isAsync isLoading={query.fetchStatus === 'fetching'} inputValue={inputValue} onInputValueChange={setInputValue} suggestions={query.data?.results} displayWith={displayWith} validateWith={chip => {\n      const invalid = !isEmail(chip.description);\n      return {\n        ...chip,\n        invalid,\n        errorMessage: invalid ? trans({\n          message: 'Not a valid email'\n        }) : undefined\n      };\n    }} placeholder={trans({\n      message: 'Enter email addresses'\n    })} label={<Trans message=\"Invite people\" />}>\n        {user => <Item value={user.id} startIcon={<Avatar circle src={user.image} alt=\"\" />} description={user.description}>\n            {user.name}\n          </Item>}\n      </ChipField>\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <PermissionSelector onChange={setSelectedPermission} value={selectedPermission} />\n        {chips.length ? <Button variant=\"flat\" color=\"primary\" size=\"sm\" disabled={isSharing || !allEmailsValid} onClick={() => {\n        setIsSharing(true);\n        shareEntry.mutate({\n          emails: chips.map(c => displayWith(c)),\n          permissions: selectedPermission.value,\n          entryId: entry.id\n        }, {\n          onSuccess: () => {\n            setChips([]);\n          },\n          onSettled: () => {\n            setIsSharing(false);\n          }\n        });\n      }}>\n            <Trans message=\"Share\" />\n          </Button> : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nexport function useEntryShareableLink(entryId) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId),\n    queryFn: () => fetchLinkByEntryId(entryId),\n    enabled: !!entryId\n  });\n}\nfunction fetchLinkByEntryId(entryId) {\n  return apiClient.get(`file-entries/${entryId}/shareable-link`, {\n    params: {\n      loader: 'shareableLink'\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction deleteShareableLink({\n  entryId\n}) {\n  return apiClient.delete(`file-entries/${entryId}/shareable-link`).then(r => r.data);\n}\nexport function useDeleteShareableLink() {\n  return useMutation({\n    mutationFn: ({\n      entryId\n    }) => deleteShareableLink({\n      entryId\n    }),\n    onSuccess: (response, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), {\n        ...response,\n        link: null\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link'))\n  });\n}","export function randomString(length = 36) {\n  let random = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return random;\n}","import useClipboard from 'react-use-clipboard';\nimport { useEntryShareableLink } from '../../shareable-link/queries/use-entry-shareable-link';\nimport { useCreateShareableLink } from '../../shareable-link/queries/create-shareable-link';\nimport { useDeleteShareableLink } from '../../shareable-link/queries/use-delete-shareable-link';\nimport { Button } from '@ui/buttons/button';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Switch } from '@ui/forms/toggle/switch';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useActiveDialogEntry } from '../../drive-store';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { randomString } from '@ui/utils/string/random-string';\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput\n}) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading = query.isLoading || createLink.isPending || deleteLink.isPending;\n  return <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\n        <Switch checked={linkExists} disabled={isLoading} onChange={() => {\n        if (linkExists) {\n          deleteLink.mutate({\n            entryId: entry.id\n          });\n        } else {\n          createLink.mutate({\n            entryId: entry.id\n          });\n        }\n      }}>\n          {linkExists ? <Trans message=\"Shareable link is created\" /> : <Trans message=\"Create shareable link\" />}\n        </Switch>\n        {linkExists && <Button variant=\"link\" color=\"primary\" onClick={() => {\n        setActivePanel('linkSettings');\n      }}>\n            <Trans message=\"Link settings\" />\n          </Button>}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>;\n}\nfunction ShareableLinkInput({\n  link,\n  autoFocus\n}) {\n  const {\n    base_url\n  } = useSettings();\n  const {\n    trans\n  } = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000\n  });\n  return <TextField autoFocus={autoFocus} disabled={!link} className=\"mt-10\" readOnly value={linkUrl} aria-label={trans({\n    message: 'Shareable link'\n  })} onFocus={e => {\n    e.target.select();\n  }} endAppend={<Button className=\"min-w-100\" variant=\"flat\" color=\"primary\" onClick={setCopied}>\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>} />;\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}/shareable-link`, payload).then(response => response.data);\n}\nexport function useUpdateShareableLink(form) {\n  return useMutation({\n    mutationFn: payload => updateShareableLink(payload),\n    onSuccess: (data, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), data);\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}","import { useForm } from 'react-hook-form';\nimport { Fragment, useState } from 'react';\nimport clsx from 'clsx';\nimport { m } from 'framer-motion';\nimport { getLocalTimeZone, now } from '@internationalized/date';\nimport { Button } from '@ui/buttons/button';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useEntryShareableLink } from '@app/drive/shareable-link/queries/use-entry-shareable-link';\nimport { Form } from '@ui/forms/form';\nimport { useUpdateShareableLink } from '@app/drive/shareable-link/queries/use-update-shareable-link';\nimport { FormSwitch, Switch } from '@ui/forms/toggle/switch';\nimport { toast } from '@ui/toast/toast';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { FormDatePicker } from '@ui/forms/input-field/date/date-picker/date-picker';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { message } from '@ui/i18n/message';\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry\n}) {\n  const {\n    formId\n  } = useDialogContext();\n  const {\n    data\n  } = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id\n    }\n  });\n  const updateLink = useUpdateShareableLink(form);\n  return <Fragment>\n      <DialogHeader onDismiss={() => {\n      setActivePanel('main');\n    }}>\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div key=\"link-settings-content\" className=\"min-h-[335px]\" animate={{\n        opacity: 1,\n        y: 0\n      }} initial={{\n        opacity: 0,\n        y: 20\n      }} exit={{\n        opacity: 0,\n        y: -20\n      }} transition={{\n        duration: 0.1\n      }}>\n          <Form id={formId} className={className} form={form} onSubmit={value => {\n          updateLink.mutate(value, {\n            onSuccess: () => {\n              setActivePanel('main');\n              toast(message('Link settings saved'));\n            }\n          });\n        }}>\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button type=\"button\" onClick={() => {\n        setActivePanel('main');\n      }}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\" disabled={updateLink.isPending}>\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>;\n}\nconst minDate = now(getLocalTimeZone());\nfunction LinkExpirationOption({\n  showField: showFieldDefault\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch checked={showField} onChange={e => {\n        setShowField(e.target.checked);\n      }}>\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && <FormDatePicker min={minDate} name=\"expiresAt\" granularity=\"minute\" className=\"mt-20\" aria-label={trans({\n        message: 'Link expiration date and time'\n      })} />}\n      </div>\n    </LinkOption>;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch checked={showField} onChange={e => {\n        setShowField(e.target.checked);\n      }}>\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && <FormTextField type=\"password\" autoFocus name=\"password\" className=\"mt-20\" aria-label={trans({\n        message: 'Link password'\n      })} description={<Trans message=\"Password will not be requested when viewing the link as file owner.\" />} placeholder={trans({\n        message: 'Enter new password...'\n      })} />}\n      </div>\n    </LinkOption>;\n}\nfunction LinkOption({\n  children,\n  showBorder = true\n}) {\n  const [title, content] = children;\n  return <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\n      {content}\n    </div>;\n}","import { Fragment, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { SharePanel } from './share-panel';\nimport { ShareableLinkPanel } from './link-panel/shareable-link-panel';\nimport { LinkSettingsDialog } from './link-panel/link-settings-dialog';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../drive-query-keys';\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput\n}) {\n  const {\n    data: {\n      fileEntry\n    }\n  } = useQuery({\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    queryFn: () => apiClient.get(`drive/file-entries/${initialEntry.id}/model`).then(response => response.data),\n    initialData: {\n      fileEntry: initialEntry\n    }\n  });\n  const [activePanel, setActivePanel] = useState('main');\n  return <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? <LinkSettingsDialog key=\"one\" setActivePanel={setActivePanel} entry={fileEntry} /> : <MainDialog key=\"two\" setActivePanel={setActivePanel} entry={fileEntry} focusLinkInput={focusLinkInput} />}\n      </AnimatePresence>\n    </Dialog>;\n}\nfunction MainDialog({\n  setActivePanel,\n  entry,\n  focusLinkInput\n}) {\n  return <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{\n        name: entry.name\n      }} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div key=\"share-content\" animate={{\n        opacity: 1,\n        y: 0\n      }} initial={{\n        opacity: 0,\n        y: 20\n      }} exit={{\n        opacity: 0,\n        y: -20\n      }} transition={{\n        duration: 0.1\n      }}>\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\n          <ShareableLinkPanel setActivePanel={setActivePanel} entry={entry} focusInput={!!focusLinkInput} />\n        </m.div>\n      </DialogBody>\n    </Fragment>;\n}","import { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { DriveQueryKeys } from '@app/drive/drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport { encodeBackendFilters } from '@common/datatable/filters/utils/encode-backend-filters';\nimport { useMemo } from 'react';\nexport function useMoveEntriesDialogFolderSearch({\n  query\n}) {\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    return {\n      section: 'search',\n      workspaceId,\n      query,\n      filters: encodeBackendFilters([{\n        key: 'type',\n        value: 'folder'\n      }])\n    };\n  }, [workspaceId, query]);\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      signal\n    }) => fetchEntries(params, signal),\n    enabled: !!query,\n    placeholderData: keepPreviousData\n  });\n}\nasync function fetchEntries(params, signal) {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient.get('drive/file-entries', {\n    params,\n    signal: params.query ? signal : undefined\n  }).then(response => response.data);\n}","import React, { useState } from 'react';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { ComboBox } from '@ui/forms/combobox/combobox';\nimport { Item } from '@ui/forms/listbox/item';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useMoveEntriesDialogFolderSearch } from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search';\nexport function MoveEntriesDialogSearch({\n  onFolderSelected\n}) {\n  const {\n    trans\n  } = useTrans();\n  const searchLabel = trans({\n    message: 'Search folders'\n  });\n  const [query, setQuery] = useState('');\n  const {\n    isFetching,\n    data\n  } = useMoveEntriesDialogFolderSearch({\n    query\n  });\n  const folders = data?.data;\n  return <ComboBox size=\"sm\" maxItems={10} placeholder={searchLabel} aria-label={searchLabel} className=\"pt-20\" endAdornmentIcon={<SearchIcon />} isAsync isLoading={isFetching} inputValue={query} onInputValueChange={setQuery} blurReferenceOnItemSelection clearInputOnItemSelection selectionMode=\"none\" openMenuOnFocus={false}>\n      {folders?.map(folder => <Item key={folder.id} value={folder.id} textLabel={folder.name} onSelected={() => {\n      onFolderSelected(folder);\n    }}>\n          {folder.name}\n        </Item>)}\n    </ComboBox>;\n}","import React from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { ArrowBackIcon } from '@ui/icons/material/ArrowBack';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { useFolderPath } from '@app/drive/files/queries/use-folder-path';\nimport { RootFolderPage } from '@app/drive/drive-page/drive-page';\nimport { Trans } from '@ui/i18n/trans';\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  onFolderSelected\n}) {\n  const {\n    data\n  } = useFolderPath({\n    hash: selectedFolder.hash,\n    isEnabled: selectedFolder?.hash !== RootFolderPage.folder.hash\n  });\n  let previous = null;\n  if (data?.path) {\n    if (data.path.length === 1) {\n      previous = RootFolderPage.folder;\n    } else {\n      previous = data.path[data.path.length - 2];\n    }\n  }\n  return <div className=\"flex items-center gap-6 border-b pb-10\">\n      <IconButton className=\"flex-shrink-0\" variant=\"outline\" size=\"xs\" disabled={!previous} onClick={() => {\n      if (previous) {\n        onFolderSelected(previous);\n      }\n    }}>\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        <BreadcrumbItem onSelected={() => {\n        onFolderSelected(RootFolderPage.folder);\n      }} className=\"flex items-center gap-8\">\n          <FolderIcon className=\"icon-sm\" />\n          <Trans message={RootFolderPage.folder.name} />\n        </BreadcrumbItem>\n        {data?.path.map(item => <BreadcrumbItem onSelected={() => {\n        onFolderSelected(item);\n      }} key={item.id || 'root'} className=\"flex items-center gap-8\">\n            {!item.id && <FolderIcon className=\"icon-sm\" />}\n            {item.name}\n          </BreadcrumbItem>)}\n      </Breadcrumb>\n    </div>;\n}","export default \"__VITE_ASSET__b64d6dd2__\"","import { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { DriveQueryKeys } from '@app/drive/drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { hasNextPage } from '@common/http/backend-response/pagination-response';\nimport { encodeBackendFilters } from '@common/datatable/filters/utils/encode-backend-filters';\nimport { useMemo } from 'react';\nexport function useMoveEntriesDialogFolders({\n  selectedFolder,\n  movingSharedFiles\n}) {\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    const filters = encodeBackendFilters([{\n      key: 'type',\n      value: 'folder'\n    }]);\n    return {\n      section: 'folder',\n      folderId: selectedFolder.hash == '0' && movingSharedFiles ? 'sharedWithMe' : selectedFolder.hash,\n      workspaceId,\n      filters\n    };\n  }, [workspaceId, selectedFolder.hash, movingSharedFiles]);\n  return useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      pageParam = 1\n    }) => {\n      return fetchEntries({\n        ...params,\n        page: pageParam\n      });\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    }\n  });\n}\nfunction fetchEntries(params) {\n  return apiClient.get('drive/file-entries', {\n    params\n  }).then(response => response.data);\n}","import React, { Fragment } from 'react';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { ChevronRightIcon } from '@ui/icons/material/ChevronRight';\nimport { Trans } from '@ui/i18n/trans';\nimport myFilesSvg from './my-files.svg';\nimport { useMoveEntriesDialogFolders } from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { InfiniteScrollSentinel } from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport { SvgImage } from '@ui/images/svg-image';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { List, ListItem } from '@ui/list/list';\nexport function MoveEntriesDialogFolderList({\n  onFolderSelected,\n  selectedFolder,\n  movingSharedFiles\n}) {\n  const query = useMoveEntriesDialogFolders({\n    selectedFolder,\n    movingSharedFiles\n  });\n  let content;\n  if (query.isLoading) {\n    content = <div className=\"flex h-full w-full items-center justify-center\">\n        <ProgressCircle isIndeterminate size=\"md\" />\n      </div>;\n  } else if (query.data?.pages[0]?.data.length === 0) {\n    content = <IllustratedMessage size=\"xs\" className=\"pb-20 pt-64\" image={<SvgImage src={myFilesSvg} />} title={<Trans message={`There are no subfolders in \":folder\"`} values={{\n      folder: selectedFolder.name\n    }} />} />;\n  } else {\n    content = <Fragment>\n        <List>\n          {query.data?.pages.flatMap(r => r.data).map(folder => <ListItem className=\"min-h-48 border-b\" key={folder.id} onSelected={() => {\n          onFolderSelected(folder);\n        }} startIcon={<FileTypeIcon type=\"folder\" />} endIcon={<ChevronRightIcon size=\"md\" />}>\n                {folder.name}\n              </ListItem>)}\n        </List>\n        <InfiniteScrollSentinel query={query} />\n      </Fragment>;\n  }\n  return <div className=\"h-288 overflow-y-auto\">{content}</div>;\n}","import React, { useState } from 'react';\nimport { Button } from '@ui/buttons/button';\nimport { useMoveEntries } from '../../queries/use-move-entries';\nimport { NewFolderDialog } from '../new-folder-dialog';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { MoveEntriesDialogSearch } from './move-entries-dialog-search';\nimport { MoveEntriesDialogBreadcrumbs } from './move-entries-dialog-breadcrumbs';\nimport { MoveEntriesDialogFolderList } from './move-entries-dialog-folder-list';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { RootFolderPage } from '../../../drive-page/drive-page';\nimport { useDriveStore } from '../../../drive-store';\nimport { canMoveEntriesInto } from '../../utils/can-move-entries-into';\nimport { useAuth } from '@common/auth/use-auth';\nexport function MoveEntriesDialog({\n  entries\n}) {\n  const {\n    user\n  } = useAuth();\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState(activePage?.folder || RootFolderPage.folder);\n  const movingSharedFiles = entries.some(e => !e.users.find(u => u.id === user.id)?.owns_entry);\n  return <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Move [one ‘:name‘|other :count items]\" values={{\n        count: entries.length,\n        name: entries[0].name\n      }} />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch onFolderSelected={setSelectedFolder} />\n        <div className=\"mb-20 mt-40\">\n          <MoveEntriesDialogBreadcrumbs selectedFolder={selectedFolder} onFolderSelected={setSelectedFolder} />\n          <MoveEntriesDialogFolderList movingSharedFiles={movingSharedFiles} selectedFolder={selectedFolder} onFolderSelected={setSelectedFolder} />\n        </div>\n      </DialogBody>\n      <Footer selectedFolder={selectedFolder} setSelectedFolder={setSelectedFolder} entries={entries} />\n    </Dialog>;\n}\nfunction Footer({\n  selectedFolder,\n  setSelectedFolder,\n  entries\n}) {\n  const {\n    close\n  } = useDialogContext();\n  const moveEntries = useMoveEntries();\n  return <DialogFooter className=\"border-t\" startAction={<DialogTrigger type=\"modal\" onClose={folder => {\n    if (folder) {\n      setSelectedFolder(folder);\n    }\n  }}>\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>}>\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button type=\"submit\" variant=\"flat\" color=\"primary\" disabled={!canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending} onClick={() => {\n      moveEntries.mutate({\n        destinationId: selectedFolder.id,\n        entryIds: entries.map(e => e.id)\n      }, {\n        onSuccess: close\n      });\n    }}>\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>;\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nimport { useDeleteEntries } from '../queries/use-delete-entries';\nimport { driveState } from '../../drive-store';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nexport function DeleteEntriesForeverDialog({\n  entries\n}) {\n  const deleteEntries = useDeleteEntries();\n  const {\n    close\n  } = useDialogContext();\n  const message = entries.length === 1 ? <Trans message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\" values={{\n    name: entries[0].name\n  }} /> : <Trans message=\":count items will be deleted forever and you won't be able to restore them.\" values={{\n    count: entries.length\n  }} />;\n  return <ConfirmationDialog isDanger title={<Trans message=\"Delete forever?\" />} body={message} confirm={<Trans message=\"Delete forever\" />} isLoading={deleteEntries.isPending} onConfirm={() => {\n    deleteEntries.mutate({\n      entryIds: entries.map(e => e.id),\n      deleteForever: true\n    }, {\n      onSuccess: () => {\n        close();\n        driveState().selectEntries([]);\n      }\n    });\n  }} />;\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nimport { driveState } from '../../drive-store';\nimport { useRestoreEntries } from '../queries/use-restore-entries';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nexport function BlockTrashFolderViewDialog({\n  entries\n}) {\n  const restoreEntries = useRestoreEntries();\n  const {\n    close\n  } = useDialogContext();\n  return <ConfirmationDialog title={<Trans message=\"This folder is in your trash\" />} body={<Trans message=\"To view this folder, restore it from the trash.\" />} confirm={<Trans message=\"Restore\" />} isLoading={restoreEntries.isPending} onConfirm={() => {\n    restoreEntries.mutate({\n      entryIds: entries.map(e => e.id)\n    }, {\n      onSuccess: () => {\n        close();\n        driveState().selectEntries([]);\n      }\n    });\n  }} />;\n}","import React from 'react';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { RenameEntryDialog } from './rename-entry-dialog';\nimport { NewFolderDialog } from './new-folder-dialog';\nimport { EntryPreviewDialog } from './entry-preview-dialog';\nimport { ShareDialog } from '../../share-dialog/share-dialog';\nimport { MoveEntriesDialog } from './move-entries-dialog/move-entries-dialog';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { DeleteEntriesForeverDialog } from './delete-entries-forever-dialog';\nimport { BlockTrashFolderViewDialog } from './block-trash-folder-view-dialog';\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n  return <DialogTrigger type=\"modal\" isOpen={!!dialog} onClose={() => {\n    driveState().setActiveActionDialog(null);\n  }}>\n      {dialog}\n    </DialogTrigger>;\n}\nfunction getDialog(dialog) {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}","import React, { useState } from 'react';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SearchPage } from '../drive-page/drive-page';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useDriveStore } from '../drive-store';\nimport { useSearchParams } from 'react-router';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nexport function NavbarSearch() {\n  const {\n    trans\n  } = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n  return <form className=\"max-w-620 flex-auto\" onSubmit={e => {\n    e.preventDefault();\n    navigate({\n      pathname: SearchPage.path,\n      search: `?query=${inputValue}`\n    }, {\n      replace: true\n    });\n  }}>\n      <TextField size=\"sm\" background=\"bg\" value={inputValue} onChange={e => setInputValue(e.target.value)} onFocus={() => {\n      if (activePage !== SearchPage) {\n        navigate(SearchPage.path);\n      }\n    }} startAdornment={<IconButton type=\"submit\">\n            <SearchIcon />\n          </IconButton>} className=\"max-w-420 flex-auto\" placeholder={trans({\n      message: 'Search'\n    })} aria-label={trans({\n      message: 'Search files and folders'\n    })} />\n    </form>;\n}","import { useEffect, useId, useRef } from 'react';\nimport { dragMonitors } from './drag-state';\nexport function useDragMonitor(monitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}","import { useDragMonitor } from '@ui/interactions/dnd/use-drag-monitor';\nimport React, { memo, useRef, useState } from 'react';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { droppables } from '@ui/interactions/dnd/drag-state';\nimport { AnimatePresence, m } from 'framer-motion';\nimport clsx from 'clsx';\nimport { isFolderTreeDragId, makeFolderTreeDragId } from '@app/drive/layout/sidebar/folder-tree-drag-id';\nimport { useDriveStore } from '../drive-store';\nexport function EntryDragPreview() {\n  const ref = useRef(null);\n  const [points, setPoints] = useState();\n  const [state, setState] = useState({});\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id)\n        });\n        setPoints({\n          start: e\n        });\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {\n          ...prev,\n          e: e\n        };\n      });\n      setPoints(prev => {\n        return {\n          ...prev,\n          end: e\n        };\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({\n        status\n      });\n    }\n  });\n  let preview = null;\n  if (state.entries && state.e) {\n    preview = <div ref={ref} style={state.e ? {\n      transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n      width: `${state.e.rect.width}px`\n    } : undefined} className=\"pointer-events-none fixed left-0 top-0 isolate\">\n        {state.entries.map((item, index) => <EntryPreview key={item.id} index={index} entry={item} points={points} state={state} />)}\n      </div>;\n  }\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\nconst EntryPreview = memo(({\n  entry,\n  points,\n  index,\n  state\n}) => {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const droppableId = state.draggingTreeItem ? makeFolderTreeDragId(entry) : entry.id;\n  const target = droppables.get(droppableId);\n  if (!target?.rect || !points?.start) return null;\n  const rect = target.rect;\n  const itemCount = state.entries?.length || 0;\n  const exitVariant = status => {\n    if (status === 'dropSuccess') {\n      return {\n        x: 0,\n        y: 0,\n        opacity: 0,\n        transition: {\n          duration: 0.1,\n          delay: 0\n        }\n      };\n    }\n    return {\n      x: rect.left - (points.end?.x || 0),\n      y: rect.top - (points.end?.y || 0),\n      width: `${state.e?.rect.width}px`\n    };\n  };\n  return <m.div key={entry.id} transition={{\n    delay: 0.01 * index,\n    bounce: 0,\n    duration: 0.2\n  }} initial={{\n    x: rect.left - points.start.x,\n    y: rect.top - points.start.y,\n    width: `${state.e?.rect.width}px`\n  }} animate={{\n    x: 0,\n    y: 0,\n    // in list/table mode limit preview size to 288px, but start and end the animation\n    // at full width, so it returns to original position at original size smoothly\n    width: viewMode === 'list' ? 288 : undefined\n  }} exit={exitVariant} style={{\n    // in grid mode simply use the width of the draggable item\n    width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n    height: `${state.e?.rect.height}px`\n  }} className={clsx('absolute max-h-48 whitespace-nowrap rounded border border-primary-light bg-paper', index < 2 && 'shadow', index === 0 && 'left-0 top-0 z-10', index > 0 && 'left-6 top-6')}>\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"flex h-full items-center justify-center gap-10 overflow-hidden bg-primary-light/20 px-16 text-sm\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto overflow-hidden text-ellipsis\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>;\n});\nconst EntryCount = memo(({\n  count\n}) => {\n  return <m.div key=\"entryCount\" initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1,\n    transition: {\n      delay: 0.1\n    }\n  }} exit={{\n    opacity: 0\n  }} transition={{\n    duration: 0.1\n  }} className=\"absolute -right-6 -top-6 z-10 z-30 flex h-20 w-20 items-center justify-center rounded-full bg-danger text-sm font-bold text-white shadow-lg\">\n      {count}\n    </m.div>;\n});","import clsx from 'clsx';\nexport function DashboardContentHeader({\n  children,\n  className\n}) {\n  return <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>;\n}","import { PageBreadcrumbs } from '../page-breadcrumbs';\nimport React, { useContext } from 'react';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { Trans } from '@ui/i18n/trans';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { ViewListIcon } from '@ui/icons/material/ViewList';\nimport { ViewModuleIcon } from '@ui/icons/material/ViewModule';\nimport { InfoIcon } from '@ui/icons/material/Info';\nimport { DriveSortButton } from './sorting/drive-sort-button';\nimport { DashboardContentHeader } from '@common/ui/dashboard-layout/dashboard-content-header';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nexport function DriveContentHeader() {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return <DashboardContentHeader className=\"flex h-60 items-center gap-20 border-b px-8 py-4 md:px-26\">\n      {isMobileMode ? <DriveSortButton isDisabled={activePage?.disableSort} /> : <PageBreadcrumbs />}\n      <div className=\"ml-auto flex-shrink-0 text-muted\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>;\n}\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip = viewMode === 'grid' ? <Trans message=\"List view\" /> : <Trans message=\"Grid view\" />;\n  return <Tooltip label={tooltip}>\n      <IconButton size=\"md\" onClick={() => {\n      driveState().setViewMode(driveState().viewMode === 'list' ? 'grid' : 'list');\n    }}>\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>;\n}\nfunction ToggleDetailsButton() {\n  const {\n    rightSidenavStatus: status,\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  const tooltip = status ? <Trans message=\"Hide details\" /> : <Trans message=\"Show details\" />;\n  return <Tooltip label={tooltip}>\n      <IconButton size=\"md\" color={status === 'open' ? 'primary' : null} onClick={() => {\n      setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n    }}>\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>;\n}","import clsx from 'clsx';\nimport { m } from 'framer-motion';\nimport { cloneElement, useContext } from 'react';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nexport function DashboardSidenav({\n  className,\n  position,\n  children,\n  size = 'md',\n  mode,\n  overlayPosition = 'fixed',\n  display = 'flex',\n  overflow = 'overflow-hidden',\n  forceClosed = false\n}) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  const isOverlayMode = isMobileMode || mode === 'overlay';\n  let status = position === 'left' ? leftSidenavStatus : rightSidenavStatus;\n  // on mobile always overlay full size sidebar, instead of compact\n  if (isOverlayMode && status === 'compact') {\n    status = 'open';\n  }\n  const variants = {\n    open: {\n      display,\n      width: getAnimateSize(status === 'compact' ? 'compact' : size)\n    },\n    closed: {\n      width: 0,\n      transitionEnd: {\n        display: 'none'\n      }\n    }\n  };\n  const sizeClassName = getSizeClassName(status === 'compact' ? 'compact' : size);\n  return <m.div variants={variants} initial={false} animate={forceClosed || status === 'closed' ? 'closed' : 'open'} transition={{\n    type: 'tween',\n    duration: 0.15\n  }} onClick={e => {\n    // close sidenav when user clicks a link or button on mobile\n    const target = e.target;\n    if (isMobileMode && (target.closest('button') || target.closest('a'))) {\n      setLeftSidenavStatus('closed');\n      setRightSidenavStatus('closed');\n    }\n  }} className={clsx(className, position === 'left' ? 'dashboard-grid-sidenav-left' : 'dashboard-grid-sidenav-right', overflow, sizeClassName, isOverlayMode && `${overlayPosition} bottom-0 top-0 z-20 shadow-2xl`, isOverlayMode && position === 'left' && 'left-0', isOverlayMode && position === 'right' && 'right-0')}>\n      {cloneElement(children, {\n      className: clsx(children.props.className, 'w-full h-full overflow-y-auto compact-scrollbar', status === 'compact' && 'hidden-scrollbar'),\n      isCompactMode: status === 'compact',\n      isOverlayMode\n    })}\n    </m.div>;\n}\nfunction getSizeClassName(size) {\n  switch (size) {\n    case 'compact':\n      return 'w-60';\n    case 'sm':\n      return 'w-224';\n    case 'md':\n      return 'w-240';\n    case 'lg':\n      return 'w-288';\n    default:\n      return size || '';\n  }\n}\nfunction getAnimateSize(size) {\n  switch (size) {\n    case 'compact':\n      return 60;\n    case 'sm':\n      return 224;\n    case 'md':\n      return 240;\n    case 'lg':\n      return 288;\n    default:\n      return null;\n  }\n}","import { Navbar } from '../navigation/navbar/navbar';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nimport { setInLocalStorage } from '@ui/utils/hooks/local-storage';\nimport { MenuOpenIcon } from '@ui/icons/material/MenuOpen';\nexport function DashboardNavbar({\n  children,\n  className,\n  hideToggleButton,\n  ...props\n}) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    name,\n    leftSidenavCanBeCompact\n  } = useContext(DashboardLayoutContext);\n  const shouldToggleCompactMode = leftSidenavCanBeCompact && !isMobileMode;\n  const shouldShowToggle = !hideToggleButton && (isMobileMode || leftSidenavCanBeCompact);\n  const handleToggle = () => {\n    setLeftSidenavStatus(leftSidenavStatus === 'open' ? 'closed' : 'open');\n  };\n  const handleCompactModeToggle = () => {\n    const newStatus = leftSidenavStatus === 'compact' ? 'open' : 'compact';\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\n    setLeftSidenavStatus(newStatus);\n  };\n  return <Navbar className={clsx('dashboard-grid-navbar', className)} border=\"border-b\" size=\"sm\" toggleButton={shouldShowToggle ? <IconButton size=\"md\" onClick={() => {\n    if (shouldToggleCompactMode) {\n      handleCompactModeToggle();\n    } else {\n      handleToggle();\n    }\n  }}>\n            <MenuOpenIcon />\n          </IconButton> : undefined} {...props}>\n      {children}\n    </Navbar>;\n}","import { useEffect } from 'react';\nexport function useBlockBodyOverflow(disable = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('no-page-overflow');\n    } else {\n      document.documentElement.classList.add('no-page-overflow');\n    }\n    return () => {\n      document.documentElement.classList.remove('no-page-overflow');\n    };\n  }, [disable]);\n}","import { useCallback, useEffect, useMemo } from 'react';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nimport { AnimatePresence } from 'framer-motion';\nimport { useControlledState } from '@react-stately/utils';\nimport { useMediaQuery } from '@ui/utils/hooks/use-media-query';\nimport { getFromLocalStorage, setInLocalStorage } from '@ui/utils/hooks/local-storage';\nimport { useBlockBodyOverflow } from '@ui/utils/hooks/use-block-body-overflow';\nimport clsx from 'clsx';\nimport { Underlay } from '@ui/overlays/underlay';\nimport { usePrevious } from '@ui/utils/hooks/use-previous';\nexport function DashboardLayout({\n  children,\n  leftSidenavStatus: leftSidenav,\n  onLeftSidenavChange,\n  rightSidenavStatus: rightSidenav,\n  compactByDefault,\n  initialRightSidenavStatus,\n  onRightSidenavChange,\n  name,\n  leftSidenavCanBeCompact,\n  height = 'h-screen',\n  className,\n  gridClassName = 'dashboard-grid',\n  blockBodyOverflow = true,\n  ...domProps\n}) {\n  useBlockBodyOverflow(!blockBodyOverflow);\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n  const isCompactModeInitially = useMemo(() => {\n    if (!name) return compactByDefault ?? false;\n    const stored = getFromLocalStorage(`${name}.sidenav.compact`);\n    if (stored != null) {\n      return stored;\n    }\n    return compactByDefault ?? false;\n  }, [name, compactByDefault]);\n  const defaultLeftSidenavStatus = isCompactModeInitially ? 'compact' : 'open';\n  const [leftSidenavStatus, setLeftSidenavStatus] = useControlledState(leftSidenav, isMobile ? 'closed' : defaultLeftSidenavStatus, onLeftSidenavChange);\n  const rightSidenavStatusDefault = useMemo(() => {\n    if (isMobile) {\n      return 'closed';\n    }\n    if (initialRightSidenavStatus != null) {\n      return initialRightSidenavStatus;\n    }\n    const userSelected = getFromLocalStorage(`${name}.sidenav.right.position`, 'open');\n    if (userSelected != null) {\n      return userSelected;\n    }\n    return initialRightSidenavStatus || 'closed';\n  }, [isMobile, name, initialRightSidenavStatus]);\n  const [rightSidenavStatus, _setRightSidenavStatus] = useControlledState(rightSidenav, rightSidenavStatusDefault, onRightSidenavChange);\n  const setRightSidenavStatus = useCallback(status => {\n    _setRightSidenavStatus(status);\n    setInLocalStorage(`${name}.sidenav.right.position`, status);\n  }, [_setRightSidenavStatus, name]);\n  const previousIsMobile = usePrevious(isMobile);\n  useEffect(() => {\n    if (isMobile === previousIsMobile) return;\n    if (!isMobile) {\n      setLeftSidenavStatus(defaultLeftSidenavStatus);\n      setRightSidenavStatus(rightSidenavStatusDefault);\n    } else {\n      setLeftSidenavStatus('closed');\n      setRightSidenavStatus('closed');\n    }\n  }, [isMobile, defaultLeftSidenavStatus, rightSidenavStatusDefault, previousIsMobile, setLeftSidenavStatus, setRightSidenavStatus]);\n  const shouldShowUnderlay = isMobile && (leftSidenavStatus === 'open' || rightSidenavStatus === 'open');\n  return <DashboardLayoutContext.Provider value={{\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus,\n    leftSidenavCanBeCompact,\n    name,\n    isMobileMode: isMobile\n  }}>\n      <div {...domProps} className={clsx('relative isolate', gridClassName, className, height)}>\n        {children}\n        <AnimatePresence>\n          {shouldShowUnderlay && <Underlay position=\"fixed\" key=\"dashboard-underlay\" onClick={() => {\n          setLeftSidenavStatus('closed');\n          setRightSidenavStatus('closed');\n        }} />}\n        </AnimatePresence>\n      </div>\n    </DashboardLayoutContext.Provider>;\n}","import React, { Fragment, useContext, useEffect, useMemo } from 'react';\nimport { Link, useLocation, useParams } from 'react-router';\nimport { Sidebar } from './sidebar/sidebar';\nimport { FileView } from '../file-view/file-view';\nimport { UploadQueue } from '../uploading/upload-queue';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { DRIVE_PAGES, makePartialFolderPage, SearchPage } from '../drive-page/drive-page';\nimport { DetailsSidebar } from '../details-sidebar/details-sidebar';\nimport { DriveDialogsContainer } from '../files/dialogs/drive-dialogs-container';\nimport { NavbarSearch } from '../search/navbar-search';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { FileUploadProvider } from '@common/uploads/uploader/file-upload-provider';\nimport { EntryDragPreview } from '../file-view/entry-drag-preview';\nimport { DriveContentHeader } from './drive-content-header';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { Trans } from '@ui/i18n/trans';\nimport { EntryActionList } from '../entry-actions/entry-action-list';\nimport { CreateNewButton } from './create-new-button';\nimport { StaticPageTitle } from '@common/seo/static-page-title';\nimport { DashboardSidenav } from '@common/ui/dashboard-layout/dashboard-sidenav';\nimport { DashboardContent } from '@common/ui/dashboard-layout/dashboard-content';\nimport { DashboardNavbar } from '@common/ui/dashboard-layout/dashboard-navbar';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { DashboardLayout } from '@common/ui/dashboard-layout/dashboard-layout';\nimport { FileEntryUrlsContext } from '@common/uploads/file-entry-urls';\nimport { getActiveWorkspaceId } from '@common/workspace/active-workspace-id';\nconst uploadStoreOptions = {\n  modifyUploadedFile: uploadedFile => {\n    const workspaceId = getActiveWorkspaceId();\n    uploadedFile.fingerprint = `${uploadedFile.fingerprint}-w-${workspaceId}`;\n    return uploadedFile;\n  }\n};\nexport function DriveLayout() {\n  const {\n    pathname\n  } = useLocation();\n  const {\n    hash\n  } = useParams();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n  useEffect(() => {\n    driveState().setActivePage(DRIVE_PAGES.find(p => p.path === pathname) || makePartialFolderPage(hash));\n  }, [pathname, hash]);\n  const urlsContextValue = useMemo(() => {\n    return {\n      workspaceId\n    };\n  }, [workspaceId]);\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n  return <Fragment>\n      {activePage?.label && <StaticPageTitle>\n          <Trans message={typeof activePage.label === 'string' ? activePage.label : activePage.label.message} />\n        </StaticPageTitle>}\n      <FileUploadProvider options={uploadStoreOptions}>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout name=\"drive\" onDragOver={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          e.dataTransfer.dropEffect = 'none';\n        }} onDrop={e => {\n          // prevent files from desktop from blowing away the document\n          e.preventDefault();\n        }}>\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>;\n}\nfunction Navbar() {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>;\n  const mobileRightChildren = <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>;\n  return <Fragment>\n      <DashboardNavbar rightChildren={isMobileMode && mobileRightChildren} menuPosition=\"drive-navbar\">\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>;\n}\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\n      <IconButton onClick={() => {\n      driveState().selectEntries([]);\n    }}>\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{\n      count: entriesSelected\n    }} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>;\n}","import { create } from 'zustand';\nimport { immer } from 'zustand/middleware/immer';\nimport { getFromLocalStorage, setInLocalStorage } from '@ui/utils/hooks/local-storage';\nexport const useLinkPageStore = create()(immer(set => ({\n  password: null,\n  viewMode: getFromLocalStorage('drive.viewMode'),\n  activeSort: {\n    orderBy: 'updated_at',\n    orderDir: 'desc'\n  },\n  setPassword: value => {\n    set(state => {\n      state.password = value;\n    });\n  },\n  isPasswordProtected: false,\n  setIsPasswordProtected: value => {\n    set(state => {\n      state.isPasswordProtected = value;\n    });\n  },\n  setViewMode: mode => {\n    set(state => {\n      state.viewMode = mode;\n      setInLocalStorage('drive.viewMode', mode);\n    });\n  },\n  setActiveSort: value => {\n    set(state => {\n      state.activeSort = value;\n    });\n  }\n})));\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}","import { keepPreviousData, useInfiniteQuery } from '@tanstack/react-query';\nimport { useParams } from 'react-router';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { linkPageState, useLinkPageStore } from '../shareable-link-page/link-page-store';\nimport { apiClient } from '@common/http/query-client';\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nexport function useShareableLinkPage() {\n  const {\n    hash\n  } = useParams();\n  const {\n    orderBy,\n    orderDir\n  } = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchShareableLink({\n      hash,\n      sort: order\n    }),\n    queryFn: async ({\n      pageParam = 1\n    }) => {\n      const response = await fetchLinkByHash({\n        hash: hash,\n        page: pageParam,\n        order,\n        password\n      });\n      if (response.passwordInvalid) {\n        linkPageState().setIsPasswordProtected(true);\n      }\n      return response;\n    },\n    initialData: () => {\n      const data = getBootstrapData().loaders?.shareableLinkPage;\n      if (data && data.link?.hash === hash) {\n        if (data.passwordInvalid) {\n          linkPageState().setIsPasswordProtected(true);\n        }\n        return {\n          pageParams: [undefined, 1],\n          pages: [data]\n        };\n      }\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      if (!lastResponse.folderChildren) return undefined;\n      const currentPage = lastResponse.folderChildren.current_page;\n      const lastPage = lastResponse.folderChildren.last_page;\n      if (currentPage >= lastPage) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    // disable query if link is password protected and correct\n    // password was not entered yet, to prevent unnecessary requests\n    enabled: !!hash && !isPasswordProtected || password != null,\n    placeholderData: keepPreviousData\n  });\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data)\n  };\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password\n}) {\n  return apiClient.get(`shareable-links/${hash}`, {\n    params: {\n      loader: 'shareableLinkPage',\n      page,\n      order,\n      password\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { linkPageState } from '../link-page-store';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { message } from '@ui/i18n/message';\nfunction checkLinkPassword({\n  password,\n  linkHash\n}) {\n  return apiClient.post(`shareable-links/${linkHash}/check-password`, {\n    password\n  }).then(r => r.data);\n}\nexport function useCheckLinkPassword() {\n  return useMutation({\n    mutationFn: props => checkLinkPassword(props),\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { useLinkPageStore } from '../link-page-store';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction importIntoOwnDrive({\n  linkId,\n  password\n}) {\n  return apiClient.post(`shareable-links/${linkId}/import`, {\n    password\n  }).then(r => r.data);\n}\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation({\n    mutationFn: props => importIntoOwnDrive({\n      ...props,\n      password\n    }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchShareableLink()\n      });\n      toast(message('Item imported into your drive'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { useAuth } from '@common/auth/use-auth';\nimport { useFileEntryUrls } from '@common/uploads/file-entry-urls';\nimport { useImportIntoOwnDrive } from './queries/import-into-own-drive';\nimport { Button } from '@ui/buttons/button';\nimport { FileDownloadIcon } from '@ui/icons/material/FileDownload';\nimport { Trans } from '@ui/i18n/trans';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { KeyboardArrowDownIcon } from '@ui/icons/material/KeyboardArrowDown';\nimport { ImportExportIcon } from '@ui/icons/material/ImportExport';\nimport React, { Fragment } from 'react';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { downloadFileFromUrl } from '@ui/utils/files/download-file-from-url';\nexport function ShareableLinkPageActionButtons() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const {\n    user,\n    isLoggedIn\n  } = useAuth();\n  const {\n    downloadUrl\n  } = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users.find(u => u.id === user?.id);\n  if (!link?.entry) return null;\n  return <div>\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\n      {!alreadyImported && isLoggedIn && link.allow_edit && <MenuTrigger onItemSelected={key => {\n      if (key === 'import') {\n        importIntoOwnDrive.mutate({\n          linkId: link.id\n        });\n      } else if (key === 'download') {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }\n    }}>\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>}\n    </div>;\n}\nfunction DownloadButton({\n  downloadUrl\n}) {\n  return <Fragment>\n      <Tooltip label={<Trans message=\"Download\" />}>\n        <IconButton className=\"md:hidden\" onClick={() => {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }}>\n          <FileDownloadIcon />\n        </IconButton>\n      </Tooltip>\n      <Button className=\"max-md:hidden\" size=\"sm\" variant=\"flat\" color=\"chip\" startIcon={<FileDownloadIcon />} onClick={() => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n    }}>\n        <Trans message=\"Download\" />\n      </Button>\n    </Fragment>;\n}","import React from 'react';\nimport { Navbar } from '@common/ui/navigation/navbar/navbar';\nimport { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { ShareableLinkPageActionButtons } from './shareable-link-page-action-buttons';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nexport function ShareableLinkNavbar() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const isMobile = useIsMobileMediaQuery();\n  return <Navbar size=\"md\" color=\"bg\" className=\"flex-shrink-0\" rightChildren={link?.entry && <ShareableLinkPageActionButtons />} menuPosition=\"shareable-link-page\" hideLogo={isMobile}>\n      {link?.entry && link.entry.type !== 'folder' && <div className=\"fex-auto flex min-w-0 items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {link.entry.name}\n          </div>\n        </div>}\n    </Navbar>;\n}","import { useState } from 'react';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { useCheckLinkPassword } from './queries/check-link-password';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { ShareableLinkNavbar } from './shareable-link-navbar';\nimport { useParams } from 'react-router';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function PasswordPage() {\n  const {\n    trans\n  } = useTrans();\n  const {\n    hash\n  } = useParams();\n  const fieldLabel = trans({\n    message: 'Password'\n  });\n  const [password, setPassword] = useState('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n  return <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\n          <div className=\"h-132 w-[165px]\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form onSubmit={e => {\n          e.preventDefault();\n          checkPassword.mutate({\n            linkHash: linkHash,\n            password\n          });\n        }}>\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField autoFocus placeholder={fieldLabel} aria-label={fieldLabel} className=\"mb-20 mt-10\" type=\"password\" value={password} required errorMessage={passwordIsInvalid && <Trans message=\"Password is not valid\" />} onChange={e => {\n            setPassword(e.target.value);\n          }} />\n            <div className=\"text-right\">\n              <Button variant=\"flat\" color=\"primary\" type=\"submit\" className=\"w-full md:w-auto\" disabled={checkPassword.isPending}>\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>;\n}","import { BaseFileGridItem } from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected\n}) {\n  return <div className=\"file-grid\">\n      {entries.map((entry, index) => <BaseFileGridItem tabIndex={-1} className=\"hover:shadow-md cursor-pointer bg\" entry={entry} key={entry.id} onContextMenu={e => {\n      e.preventDefault();\n    }} onKeyDown={e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onEntrySelected(entry, index);\n      }\n    }} onClick={() => {\n      onEntrySelected(entry, index);\n    }} />)}\n    </div>;\n}","import React from 'react';\nimport { Table } from '@common/ui/tables/table';\nimport { linkPageState, useLinkPageStore } from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport { fileTableColumns } from '@app/drive/file-view/file-table/file-table-columns';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nconst mobileColumns = fileTableColumns.filter(config => config.key !== 'updated_at');\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected\n}) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n  return <Table columns={isMobile ? mobileColumns : fileTableColumns} data={entries} sortDescriptor={sortDescriptor} onSortChange={value => {\n    linkPageState().setActiveSort(value);\n  }} onAction={(item, index) => {\n    onEntrySelected(item, index);\n  }} enableSelection={false} />;\n}","import { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { useNavigate } from 'react-router';\nfunction buildFolderHash(link, folderHash) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\nexport function useNavigateToSubfolder() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const navigate = useNavigate();\n  return hash => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}","import { AnimatePresence, m } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport { FolderPreviewFileGrid } from './folder-preview-file-grid';\nimport { useLinkPageStore } from '../link-page-store';\nimport { FolderPreviewFileTable } from './folder-preview-file-table';\nimport { useNavigateToSubfolder } from './use-navigate-to-subfolder';\nimport { useLocation } from 'react-router';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { FilePreviewDialog } from '@common/uploads/components/file-preview/file-preview-dialog';\nexport function FolderPreviewFileView({\n  className\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPlaceholderData\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n  if (!link || isPlaceholderData) {\n    return <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>;\n  }\n  const handlePreview = (entry, index) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n  const folderEntries = entries || [];\n  return <>\n      <div className={clsx('file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24', className)}>\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\n        {viewMode === 'grid' ? <FolderPreviewFileGrid entries={folderEntries} onEntrySelected={handlePreview} /> : <FolderPreviewFileTable entries={folderEntries} onEntrySelected={handlePreview} />}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && <m.div className=\"mt-24 flex w-full justify-center\" {...opacityAnimation}>\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger type=\"modal\" isOpen={activePreviewIndex != undefined} onClose={() => setActivePreviewIndex(undefined)}>\n        <FilePreviewDialog entries={folderEntries} defaultActiveIndex={activePreviewIndex} allowDownload={link.allow_download} />\n      </DialogTrigger>\n    </>;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { useFolderPath } from '../../../files/queries/use-folder-path';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { useLinkPageStore } from '../link-page-store';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { useNavigateToSubfolder } from './use-navigate-to-subfolder';\nexport function FolderPreviewBreadcrumb({\n  className,\n  folder,\n  link\n}) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password\n    }\n  });\n  let content;\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>\n        });\n      });\n    }\n    content = <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n        return <BreadcrumbItem onSelected={() => {\n          navigateToSubfolder(item.folder.hash);\n        }} key={item.folder.hash}>\n              {item.label}\n            </BreadcrumbItem>;\n      })}\n      </Breadcrumb>;\n  }\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}","import React from 'react';\nimport { FolderPreviewBreadcrumb } from './folder-preview-breadcrumb';\nimport { EntriesSortButton } from '../../../layout/sorting/entries-sort-button';\nimport { linkPageState, useLinkPageStore } from '../link-page-store';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { GridViewIcon } from '@ui/icons/material/GridView';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {\n    link,\n    isFetching\n  } = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n  return <div className=\"flex flex-col justify-between gap-14 p-14 md:h-90 md:flex-row md:items-center md:p-24\">\n      {hasEntry && <FolderPreviewBreadcrumb link={link} folder={link.entry} className=\"flex-auto\" />}\n      {hasEntry && <div className=\"flex items-center justify-between text-muted md:justify-start\">\n          <EntriesSortButton isDisabled={isFetching} descriptor={activeSort} onChange={value => {\n        linkPageState().setActiveSort(value);\n      }} />\n          <div className=\"ml-10 md:border-l md:pl-10\">\n            <IconButton onClick={() => {\n          linkPageState().setViewMode(linkPageState().viewMode === 'grid' ? 'list' : 'grid');\n        }}>\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>}\n    </div>;\n}","import React from 'react';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { FolderPreviewFileView } from './folder-preview-file-view';\nimport { Trans } from '@ui/i18n/trans';\nimport { FileUploadProvider } from '@common/uploads/uploader/file-upload-provider';\nimport { ShareableLinkPageActionButtons } from '../shareable-link-page-action-buttons';\nimport { FolderPreviewHeader } from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\nimport { DashboardLayout } from '@common/ui/dashboard-layout/dashboard-layout';\nimport { DashboardNavbar } from '@common/ui/dashboard-layout/dashboard-navbar';\nimport { DashboardContentHeader } from '@common/ui/dashboard-layout/dashboard-content-header';\nimport { DashboardContent } from '@common/ui/dashboard-layout/dashboard-content';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function FolderPreview() {\n  const {\n    entries,\n    isFetched\n  } = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n  return <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar hideToggleButton rightChildren={<ShareableLinkPageActionButtons />} color=\"bg\" />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>;\n}\nfunction EmptyMessage({\n  className\n}) {\n  return <IllustratedMessage className={clsx(className, 'mt-80')} image={<SvgImage src={shareSvg} />} title={<Trans message=\"Folder is empty\" />} description={<Trans message=\"No files have been uploaded to this folder yet\" />} />;\n}","import React from 'react';\nimport { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { ShareableLinkNavbar } from './shareable-link-navbar';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { FilePreviewContainer } from '@common/uploads/components/file-preview/file-preview-container';\nexport function ShareableLinkPageFilePreview() {\n  const {\n    link\n  } = useShareableLinkPage();\n  if (!link?.entry) return null;\n  return <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\n      <FilePreviewContainer entries={[link.entry]} showHeader={false} allowDownload={link.allow_download} />\n    </div>;\n}","import React from 'react';\nimport { useShareableLinkPage } from '@app/drive/shareable-link/queries/use-shareable-link-page';\nimport { useLinkPageStore } from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { PasswordPage } from '@app/drive/shareable-link/shareable-link-page/password-page';\nimport { FolderPreview } from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview';\nimport { ShareableLinkPageFilePreview } from './shareable-link-page-file-preview';\nimport { NotFoundPage } from '@common/ui/not-found-page/not-found-page';\nimport { FileEntryUrlsContext } from '@common/uploads/file-entry-urls';\nimport { ActiveWorkspaceProvider } from '@common/workspace/active-workspace-id-context';\nimport { GuestDownloadView } from './guest-download-view';\nimport { useAuth } from '@common/auth/use-auth';\nexport function ShareableLinkPage() {\n  const {\n    status,\n    link,\n    entries\n  } = useShareableLinkPage();\n  const {\n    user,\n    isLoggedIn\n  } = useAuth();\n  const isGuest = !isLoggedIn;\n  const totalSize = entries?.reduce((sum, entry) => sum + (entry.file_size || 0), 0) || 0;\n  const {\n    trans\n  } = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n  let content;\n  if (status === 'pending') {\n    content = <div className=\"flex h-screen flex-auto items-center justify-center\">\n        <ProgressCircle aria-label={trans({\n        message: 'Loading link'\n      })} isIndeterminate />\n      </div>;\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else if (!isGuest) {\n    content = <ShareableLinkPageFilePreview />;\n  } else {\n    content = <GuestDownloadView files={entries} totalSize={totalSize} expiresAt={link?.expires_at} />;\n  }\n  return <ActiveWorkspaceProvider>\n      <FileEntryUrlsContext.Provider value={{\n      shareable_link: link?.id,\n      password\n    }}>\n        {content}\n      </FileEntryUrlsContext.Provider>\n    </ActiveWorkspaceProvider>;\n}"],"names":["client","options","query","state","parentResult","isFetching","isRefetching","isError","isRefetchError","fetchDirection","_b","_a","isFetchNextPageError","isFetchingNextPage","isFetchPreviousPageError","isFetchingPreviousPage","queryClient","props","jsx","isLoading","data","label","jsxs","form","r","formId","close","createWorkspace","response","workspaceId","other","err","inviteId","member","modelType","memberId","memberType","endpoint","setWorkspaceId","user","onConfirm","string","workspace","can","members","shouldHideOtherMembers","MemberListItem","authUser","permissions","authMember","mb","permission","p","selectedRole","setSelectedRole","useState","changeRole","isOwner","isCurrentUser","roleSelector","roleId","Fragment","trans","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useEffect","invalid","c","type","removeMember","isConfirmed","value","onChange","size","className","isDisabled","role","newValue","MenuItem","resendInvite","id","updateWorkspace","payload","resourceName","color","reason","message","billing","upgradeMsgValues","text","trigger","placement","workspaces","isFetched","activeWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","e","forwardRef","ref","isActive","deleteWorkspace","folder","hash","isSearchingOrFiltering","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","s","h","i","d","getNestedProperty","l","countNodes","params","targets","destination","target","destinationPath","part","index","moveEntries","uploadFiles","entries","entry","isDragOver","setIsDragOver","onDrop","draggable","createContext","nodes","itemRenderer","parentNode","level","node","children","expandedKeys","setExpandedKeys","useControlledState","selectedKeys","setSelectedKeys","focusedNode","setFocusedNode","FocusScope","icon","domProps","useContext","isExpanded","isSelected","handleExpandIconClick","newExpandedKeys","_","labelRef","labelClassName","focusManager","useFocusManager","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","navigate","activePage","tree","useMemo","folders","keys","entryHash","useRef","isRootFolder","isDragging","draggableProps","droppableProps","mergeProps","item","entryIds","emptyTrash","deleteForever","backendError","deleteEntries","isCompact","button","activeFolder","isSubscribed","fetchEntries","newFolder","currentPage","page","sortDescriptor","searchParams","isDisabledInSearch","pageParam","lastResponse","hasNextPage","all","cache","current","f","isMobileMode","inputValue","setInputValue","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","optionsRef","useLayoutEffect","rectA","rectB","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","el","reachedBottomEdge","reachedTopEdge","entryId","preview","share","getLink","addStar","removeStar","moveTo","rename","makeCopy","download","deleteAction","removeSharedEntries","restoreEntries","action","createLink","starEntries","tag","duplicateEntries","downloadUrl","unshareEntries","uploadFolder","showIfNoActions","actions","createElement","ids","allEntries","selectedEntries","removeShared","position","isOpen","isTouchDevice","itemClassName","isCollapsedMode","useCallback","bytes","sizeClassName","selectedRows","performViewItemAction","footerAdornment","Footer","isMobile","adornment","toggleEntry","pressHandler","pressProps","keyboardHandler","contextMenuHandler","descriptor","column","direction","sort","key","MenuSection","isEnabled","rootItem","content","items","parent","isMenuItem","owner","u","isInitialLoading","fetchNextPage","loaderMarginTop","style","_variant","loadMoreExtraContent","sentinelRef","loadMoreClickCount","setLoadMoreClickCount","innerVariant","leftViewAfterLoading","sentinelEl","observer","slot","settings","adCode","memo","useId","scrollParent","getScrollParent","promises","pattern","match","isVisible","mask","viewMode","containerProps","boxProps","noContentMessage","handleContextMenu","handleKeybinds","bytesPerSecond","units","unitIndex","seconds","hours","minutes","secs","fileId","fileUpload","percentage","bytesUploaded","speed","eta","status","file","analytics","totalBytes","uploadedBytes","statusMessage","retryCount","maxRetries","canRetry","failureMessage","speedFormatted","etaFormatted","abortUpload","retryUpload","errorMessage","isHovered","setIsHovered","abortButton","progressButton","retryButton","statusButton","errMessage","inProgressUploadsCount","completedUploadsCount","clearInactive","uploads","uploadsArray","virtualizer","virtualItem","upload","entryType","entryName","setRightSidenavStatus","margin","taggableType","taggableId","notType","taggableIds","signal","resolve","propsAttachedTags","tagType","notTagType","userId","setQuery","isPlaceholderData","queryIsLoading","detachTag","attachTag","tags","attachedTagIds","allTags","attachedTags","isAttached","prettySize","selectedEntry","initialName","renameEntry","onSubmit","name","parentId","createFolder","files","defaultActiveIndex","activeIndex","setActiveIndex","edit","users","changePermissions","unshareEntry","activePermission","setActivePermission","shareEntry","isSharing","setIsSharing","selectedPermission","setSelectedPermission","length","random","possible","setActivePanel","focusInput","linkExists","deleteLink","link","autoFocus","base_url","linkUrl","isCopied","setCopied","updateLink","now","getLocalTimeZone","showFieldDefault","showField","setShowField","showBorder","title","initialEntry","focusLinkInput","fileEntry","activePanel","onFolderSelected","searchLabel","ComboBox","selectedFolder","previous","movingSharedFiles","filters","setSelectedFolder","activeDialog","dialog","monitor","monitorRef","points","setPoints","setState","dragTarget","prev","droppableId","itemCount","exitVariant","count","tooltip","mode","overlayPosition","display","overflow","forceClosed","leftSidenavStatus","setLeftSidenavStatus","rightSidenavStatus","isOverlayMode","variants","hideToggleButton","leftSidenavCanBeCompact","shouldToggleCompactMode","shouldShowToggle","handleToggle","handleCompactModeToggle","newStatus","Navbar","disable","leftSidenav","onLeftSidenavChange","rightSidenav","compactByDefault","initialRightSidenavStatus","onRightSidenavChange","height","gridClassName","blockBodyOverflow","defaultLeftSidenavStatus","stored","rightSidenavStatusDefault","userSelected","_setRightSidenavStatus","previousIsMobile","shouldShowUnderlay","uploadedFile","pathname","urlsContextValue","searchButton","mobileRightChildren","entriesSelected","set","orderBy","orderDir","order","isPasswordProtected","password","lastPage","linkHash","linkId","isLoggedIn","importIntoOwnDrive","alreadyImported","fieldLabel","setPassword","checkPassword","passwordIsInvalid","onEntrySelected","config","folderHash","useNavigate","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","handlePreview","folderEntries","activeSort","hasEntry","showEmptyMessage","isGuest","totalSize","sum"],"mappings":"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","x_google_ignoreList":[0,1,27]}