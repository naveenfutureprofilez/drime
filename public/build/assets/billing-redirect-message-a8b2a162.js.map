{"version":3,"file":"billing-redirect-message-a8b2a162.js","sources":["../../../common/foundation/resources/client/billing/checkout/stripe/use-stripe.jsx","../../../common/foundation/resources/client/billing/checkout/stripe/stripe-elements-form.jsx","../../../common/foundation/resources/client/billing/billing-redirect-message.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { apiClient } from '@common/http/query-client';\nimport { useSelectedLocale } from '@ui/i18n/selected-locale';\nimport { useAuth } from '@common/auth/use-auth';\nimport { useIsDarkMode } from '@ui/themes/use-is-dark-mode';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function useStripe({\n  type,\n  productId,\n  priceId\n}) {\n  const {\n    user\n  } = useAuth();\n  const isDarkMode = useIsDarkMode();\n  const isInitiatedRef = useRef(false);\n  const paymentElementRef = useRef(null);\n  const {\n    localeCode\n  } = useSelectedLocale();\n  const [stripe, setStripe] = useState(null);\n  const [elements, setElements] = useState(null);\n  const {\n    branding: {\n      site_name\n    },\n    billing: {\n      stripe_public_key,\n      stripe: {\n        enable\n      }\n    }\n  } = useSettings();\n  useEffect(() => {\n    if (!enable || !stripe_public_key || isInitiatedRef.current) return;\n    Promise.all([\n    // load stripe js library\n    loadStripe(stripe_public_key, {\n      apiVersion: '2022-08-01',\n      locale: localeCode\n    }),\n    // create partial subscription for clientSecret\n    type === 'setupIntent' ? createSetupIntent() : createSubscription(productId, priceId)]).then(([stripe, {\n      clientSecret\n    }]) => {\n      if (stripe && paymentElementRef.current) {\n        const elements = stripe.elements({\n          clientSecret,\n          appearance: {\n            theme: isDarkMode ? 'night' : 'stripe'\n          }\n        });\n\n        // Create and mount the Payment Element\n        const paymentElement = elements.create('payment', {\n          business: {\n            name: site_name\n          },\n          terms: {\n            card: 'never'\n          },\n          fields: {\n            billingDetails: {\n              address: 'auto'\n            }\n          },\n          defaultValues: {\n            billingDetails: {\n              email: user?.email\n            }\n          }\n        });\n        paymentElement.mount(paymentElementRef.current);\n        setStripe(stripe);\n        setElements(elements);\n      }\n    });\n    isInitiatedRef.current = true;\n  }, [productId, stripe_public_key, enable, isDarkMode, localeCode, site_name, type, user?.email]);\n  return {\n    stripe,\n    elements,\n    paymentElementRef,\n    stripeIsEnabled: stripe_public_key != null && enable\n  };\n}\nfunction createSetupIntent() {\n  return apiClient.post('billing/stripe/create-setup-intent').then(r => r.data);\n}\nfunction createSubscription(productId, priceId) {\n  return apiClient.post('billing/stripe/create-partial-subscription', {\n    product_id: productId,\n    price_id: priceId\n  }).then(r => r.data);\n}","import clsx from 'clsx';\nimport { Button } from '@ui/buttons/button';\nimport { Fragment, useState } from 'react';\nimport { useStripe } from '@common/billing/checkout/stripe/use-stripe';\nimport { Skeleton } from '@ui/skeleton/skeleton';\nexport function StripeElementsForm({\n  productId,\n  priceId,\n  type = 'subscription',\n  submitLabel,\n  returnUrl\n}) {\n  const {\n    stripe,\n    elements,\n    paymentElementRef,\n    stripeIsEnabled\n  } = useStripe({\n    type,\n    productId,\n    priceId\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // disable upgrade button if stripe is enabled, but not loaded yet\n  const stripeIsReady = !stripeIsEnabled || elements != null && stripe != null;\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // stripe has not loaded yet\n    if (!stripe || !elements) return;\n    setIsSubmitting(true);\n    try {\n      const method = type === 'subscription' ? 'confirmPayment' : 'confirmSetup';\n      const result = await stripe[method]({\n        elements,\n        confirmParams: {\n          return_url: returnUrl\n        }\n      });\n\n      // don't show validation error as it will be shown already by stripe payment element\n      if (result.error?.type !== 'validation_error' && result.error?.message) {\n        setErrorMessage(result.error.message);\n      }\n    } catch {}\n    setIsSubmitting(false);\n  };\n  return <form onSubmit={handleSubmit}>\n      <div ref={paymentElementRef} className={clsx('min-h-[303px]', !stripeIsEnabled && 'hidden')}>\n        {stripeIsEnabled && <StripeSkeleton />}\n      </div>\n      {errorMessage && !isSubmitting && <div className=\"mt-20 text-danger\">{errorMessage}</div>}\n      <Button variant=\"flat\" color=\"primary\" size=\"md\" className=\"mt-40 w-full\" type=\"submit\" disabled={isSubmitting || !stripeIsReady}>\n        {submitLabel}\n      </Button>\n    </form>;\n}\nfunction StripeSkeleton() {\n  return <Fragment>\n      <Skeleton className=\"mb-20 h-30\" />\n      <Skeleton className=\"mb-20 h-30\" />\n      <Skeleton className=\"mb-20 h-30\" />\n      <Skeleton className=\"h-30\" />\n    </Fragment>;\n}","import { Link } from 'react-router';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { TaskAltIcon } from '@ui/icons/material/TaskAlt';\nimport { ErrorIcon } from '@ui/icons/material/Error';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { Skeleton } from '@ui/skeleton/skeleton';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nexport function BillingRedirectMessage({\n  config\n}) {\n  return <AnimatePresence initial={false} mode=\"wait\">\n      <div className=\"mt-80\">\n        {config ? <m.div className=\"text-center\" key=\"payment-status\" {...opacityAnimation}>\n            {config.status === 'success' ? <TaskAltIcon className=\"text-6xl text-positive\" /> : <ErrorIcon className=\"text-6xl text-danger\" />}\n            <div className=\"mt-30 text-2xl font-semibold\">\n              <Trans {...config.message} />\n            </div>\n            <Button variant=\"flat\" color=\"primary\" className=\"mt-30 w-full\" size=\"md\" elementType={Link} to={config.link}>\n              <Trans {...config.buttonLabel} />\n            </Button>\n          </m.div> : <LoadingSkeleton key=\"loading-skeleton\" />}\n      </div>\n    </AnimatePresence>;\n}\nfunction LoadingSkeleton() {\n  return <m.div className=\"max-w-280 text-center\" key=\"loading-skeleton\" {...opacityAnimation}>\n      <Skeleton size=\"w-50 h-50\" variant=\"rect\" />\n      <Skeleton className=\"mt-30 text-2xl\" />\n      <Skeleton size=\"h-42\" className=\"mt-30\" />\n    </m.div>;\n}"],"names":["useStripe","type","productId","priceId","user","useAuth","isDarkMode","useIsDarkMode","isInitiatedRef","useRef","paymentElementRef","localeCode","useSelectedLocale","stripe","setStripe","useState","elements","setElements","site_name","stripe_public_key","enable","useSettings","useEffect","loadStripe","createSetupIntent","createSubscription","clientSecret","apiClient","r","StripeElementsForm","submitLabel","returnUrl","stripeIsEnabled","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","stripeIsReady","handleSubmit","e","result","_a","_b","jsxs","jsx","clsx","StripeSkeleton","Button","Fragment","Skeleton","BillingRedirectMessage","config","AnimatePresence","m","opacityAnimation","TaskAltIcon","ErrorIcon","Trans","Link","LoadingSkeleton"],"mappings":"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"}