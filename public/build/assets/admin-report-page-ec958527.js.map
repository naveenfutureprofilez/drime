{"version":3,"mappings":"wkBAEA,MAAMA,EAAW,gBACD,SAAAC,GAAeC,EAAU,GAAI,CAC3C,OAAOC,EAAS,CACd,SAAU,CAACH,EAAUE,CAAO,EAC5B,QAAS,IAAME,GAAqBF,CAAO,EAC3C,gBAAiBG,CAAA,CAClB,CACH,CACA,SAASD,GAAqB,CAC5B,MAAAE,EACA,UAAAC,CACF,EAAG,CACD,MAAMC,EAAS,GACf,OAAIF,IACKE,EAAA,MAAQF,EAAM,KAAK,GAAG,GAE3BC,IACKC,EAAA,UAAYD,EAAU,MAAM,iBAAiB,EAC7CC,EAAA,QAAUD,EAAU,IAAI,iBAAiB,EACzCC,EAAA,SAAWD,EAAU,MAAM,UAE7BE,EAAU,IAAIT,EAAU,CAC7B,OAAAQ,CACD,GAAE,KAAKE,GAAYA,EAAS,IAAI,CACnC,CCrBa,MAAAC,GAAoBC,OAAK,CAAC,CACrC,QAAAC,EACA,QAAAC,EACA,GAAIC,EACJ,UAAWC,EACX,QAASC,EACT,QAAAC,EAAU,GACV,mBAAAC,EAAqB,GACrB,OAAAC,EACA,YAAAC,EACA,YAAAC,EAAc,EACd,aAAAC,EAAe,GACjB,IAAM,CACE,MACJ,MAAAC,GACEC,EAAS,EACPC,EAAYC,UAAQ,IAAM,CAC9B,GAAIX,GAAkBC,EAAc,CAClC,MAAMW,EAAYZ,EAAiBa,EAAqBb,CAAc,EAAIc,EAAmB,EAEvFC,GADUd,EAAeY,EAAqBZ,CAAY,EAAIa,EAAmB,GAClE,SAAS,QAAY,EAAAF,EAAU,SAAS,UACtD,OAAAG,EAAOT,EAAcS,EAAOT,CACrC,CACA,OAAIT,EACKA,EAAU,IACRC,EACFA,EAAU,IAEdC,GACIO,CAEF,EACN,CAACT,EAASC,EAASC,EAASC,EAAgBC,EAAcK,CAAW,CAAC,EACnE,CAACU,EAAIC,CAAK,EAAIC,WAASR,CAAS,EACtCS,YAAU,IAAM,CACdF,EAAMP,CAAS,GACd,CAACA,CAAS,CAAC,EACR,MAAAU,EAAQC,SAAOL,CAAE,EACvBI,EAAM,QAAUJ,EAChBG,YAAU,IAAM,CACR,MAAAG,EAAYjB,GAAee,EAAM,QAAUf,EAC7C,GAAAD,GAAU,CAACkB,EAAW,CAClB,MAAAC,EAAW,YAAY,IAAM,CAC3BN,EAAAO,GAAQA,EAAOjB,CAAY,GAChCA,CAAY,EACR,UAAM,cAAcgB,CAAQ,CACrC,GACC,CAACnB,EAAQG,EAAcF,EAAaK,CAAS,CAAC,EACjD,MAAMe,EAAaT,EAAK,EAAI,CAACA,EAAKA,EAC5BU,EAAW,CACf,KAAM,KAAK,MAAMD,EAAa,KAAQ,EACtC,MAAO,KAAK,MAAMA,EAAa,IAAO,EAAI,GAC1C,QAAS,KAAK,MAAMA,EAAa,GAAK,EAAI,GAC1C,QAAS,KAAK,MAAMA,EAAa,GAAI,EAAI,IAEvC,IAAAE,EACJ,OAAIzB,EACeyB,EAAAC,GAAcF,EAAUlB,CAAK,EAE7BmB,EAAAE,GAAcH,EAAUvB,CAAkB,EAEtD2B,EAAA,IAACC,YAAU,SAAeJ,CAAA,EACnC,CAAC,EACD,SAASC,GAAcI,EAAGxB,EAAO,CAC/B,MAAMyB,EAAS,GACf,OAAID,EAAE,MACGC,EAAA,KAAK,GAAGD,EAAE,IAAI,GAAGxB,EAAM0B,EAAQ,GAAG,CAAC,CAAC,EAAE,EAE3CF,EAAE,OACGC,EAAA,KAAK,GAAGD,EAAE,KAAK,GAAGxB,EAAM0B,EAAQ,IAAI,CAAC,CAAC,EAAE,EAE7CF,EAAE,SACGC,EAAA,KAAK,GAAGD,EAAE,OAAO,GAAGxB,EAAM0B,EAAQ,KAAK,CAAC,CAAC,EAAE,EAEhDF,EAAE,SAAW,CAACA,EAAE,OACXC,EAAA,KAAK,GAAGD,EAAE,OAAO,GAAGxB,EAAM0B,EAAQ,KAAK,CAAC,CAAC,EAAE,EAE7CD,EAAO,KAAK,GAAG,CACxB,CACA,SAASJ,GAAcG,EAAG7B,EAAqB,GAAM,CAC7C,MAAAL,EAAUqC,EAAQH,EAAE,OAAO,EACjC,IAAIC,EAAS,GACT,OAAAD,EAAE,MAAQ,CAACC,IACbA,EAAS,GAAGD,EAAE,IAAI,IAAIG,EAAQH,EAAE,KAAK,CAAC,IAAIG,EAAQH,EAAE,OAAO,CAAC,IAAIlC,CAAO,IAErEkC,EAAE,OAAS,CAACC,IACdA,EAAS,GAAGE,EAAQH,EAAE,MAAO7B,CAAkB,CAAC,IAAIgC,EAAQH,EAAE,OAAO,CAAC,IAAIlC,CAAO,IAE9EmC,IACHA,EAAS,GAAGE,EAAQH,EAAE,QAAS7B,CAAkB,CAAC,IAAIL,CAAO,IAExDmC,CACT,CACA,SAASE,EAAQC,EAAGD,EAAU,GAAM,CAClC,GAAI,CAACA,EAAgB,OAAAC,EACjB,IAAAC,EAAQ,GAAGD,CAAC,GACZ,OAAAC,EAAM,SAAW,IACnBA,EAAQ,IAAMA,GAETA,CACT,CC5FO,SAASC,GAAmB,CACjC,OAAAC,EACA,UAAAC,CACF,EAAG,CACD,OAAKD,EACGT,MAAAC,WAAA,CACH,SAAQQ,GAAA,YAAAA,EAAA,OAAaT,EAAA,IAAAW,GAAA,CAA2B,KAAMC,EAAK,KAAM,KAAMA,EAAK,KAAM,aAAcA,EAAK,aAAc,cAAeA,EAAK,cAAe,iBAAkBA,EAAK,iBAAkB,UAAAF,EAC5L,SAACV,MAAAa,EAAA,CAAM,QAASD,EAAK,KAAM,GADOA,EAAK,IAEzC,EACJ,GALkBZ,EAAA,IAAC,MAAI,WAAU,kCAAmC,EAMxE,CACO,SAASW,GAAW,CACzB,KAAMG,EACN,SAAAC,EACA,KAAAC,EACA,aAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,UAAAT,EAAY,GACZ,QAAAU,EAAU,aACV,QAAAC,EAAU,YACZ,EAAG,CACG,IAAAC,EACJ,GAAIR,EACE,GAAAS,iBAAeT,CAAS,EAC1BQ,EAAOE,eAAaV,EAAW,CAC7B,KAAM,KACP,MACI,CACC,MAAAW,EAASC,EAAsBZ,CAAS,EACvCQ,EAAAtB,EAAA,IAACyB,EAAO,MAAK,IAAK,EAC3B,CAEF,cAAQ,MAAI,WAAWE,EAAK,uJAAwJP,EAASC,CAAO,EAChM,UAACO,OAAA,OAAI,UAAU,0BACZ,UAAAN,EACAtB,MAAA,MAAG,UAAU,wBAAyB,SAAAe,CAAS,IAClD,EACAa,OAAC,MAAI,WAAU,cACb,UAAA5B,MAAC,OAAI,UAAU,iCACb,SAACA,MAAA6B,GAAA,CAAgB,QAAS,GAAO,KAAK,OACnC,SAAAnB,QAAaoB,EAAE,IAAF,CAAsB,GAAGC,EACnC,SAAC/B,MAAAgC,GAAA,CAAS,UAAU,WAAW,GADX,UAEtB,EAAYhC,MAAA8B,EAAE,IAAF,CAAmB,GAAGC,EAChC,SAAA/B,MAACiC,IAAe,KAAAjB,EAAY,MAAOC,CAAc,IAD7B,OAEtB,CACJ,GACF,EACCA,GAAgB,OAASE,GAAoB,MAAQD,GAAiB,OAASlB,EAAA,IAAC,MAAI,WAAU,2BACzF,SAACA,MAAAkC,GAAA,CAAkB,aAAAjB,EAA4B,cAAAC,EAA8B,iBAAAC,CAAoC,GACnH,GACN,CACF,GACJ,CACA,SAASc,GAAe,CACtB,KAAAjB,EACA,MAAAT,CACF,EAAG,CACD,GAAIA,GAAS,KAAa,UAC1B,OAAQS,EAAM,CACZ,IAAK,WACI,OAAAhB,EAAA,IAACmC,GAAe,OAAO5B,CAAO,GACvC,IAAK,aACH,aAAQ6B,EAAgB,OAAA7B,EAAc,MAAM,UAAU,sBAAuB,CAAG,GAClF,IAAK,oBACH,OAAQP,MAAAnC,GAAA,CAAkB,QAAS0C,EAAO,QAAO,EAAC,GACpD,QACS,OAAAP,MAACoC,GAAgB,MAAA7B,CAAc,EAC1C,CACF,CACA,SAAS2B,GAAkBG,EAAO,CAC1B,MAAAC,EAAaC,GAAoBF,CAAK,EACxC,IAAAf,EACJ,OAAIgB,EAAa,EACfhB,EAAQtB,MAAAwC,GAAA,CAAe,KAAK,KAAK,UAAU,eAAgB,GAClDF,IAAe,EACjBhB,EAAAtB,EAAA,IAACyC,GAAiB,WAAU,YAAa,GAEzCnB,EAAAtB,EAAA,IAAC0C,GAAiB,WAAU,aAAc,UAE3CzC,WACH,WAAAqB,EACDM,OAAC,MAAI,WAAU,mCAAoC,UAAAU,EAAW,KAAC,CACjE,GACJ,CACA,SAASC,GAAoB,CAC3B,iBAAApB,EACA,cAAAD,EACA,aAAAD,CACF,EAAG,CACD,OAAIE,GAAoB,MAAQD,GAAiB,MAAQD,GAAgB,KAChEE,GAAoB,EAEzBD,IAAkB,EACb,IAEF,KAAK,OAAOD,EAAeC,GAAiBA,EAAgB,GAAG,CACxE,CC7GO,SAASyB,EAAYN,EAAO,CAC3B,MACJ,MAAAO,EACA,YAAAC,EACA,SAAA9B,EACA,UAAA+B,EACA,cAAAC,EAAgB,GAChB,iBAAAC,EACA,WAAAC,CACE,EAAAZ,EACJ,cAAQ,MAAI,WAAWV,EAAK,0EAA2EmB,CAAS,EAC5G,UAAClB,OAAA,OAAI,UAAU,gEACb,UAAC5B,EAAA,WAAI,UAAU,wBAAyB,SAAM4C,EAAA,EAC7CC,GAAe7C,EAAA,IAAC,MAAI,WAAU,aAAc,SAAY6C,EAAA,GAC3D,EACA7C,MAAC,MAAI,KAAKiD,EAAY,UAAWtB,EAAK,WAAYoB,GAAiB,6CAA8CC,CAAgB,EAC9H,SAAAjC,CACH,EACF,GACJ,CClBO,SAASmC,GAAwB,CAC/B,OAAAtB,EAAA,KAAC,MAAI,WAAU,oDAClB,UAAA5B,EAAA,IAACmD,GAAe,iBAAe,GAAC,KAAK,KAAK,EAC1CnD,MAACa,EAAM,SAAQ,eAAgB,EACjC,GACJ,CCHA,MAAMuC,GAAYC,OAAK,WAAM,OAAO,0BAAc,EAAC,0FAC5C,SAASC,EAAUjB,EAAO,CACzB,MACJ,MAAAO,EACA,YAAAC,EACA,UAAAC,EACA,QAAAzB,EAAU,cACV,QAAAD,EAAU,aACV,WAAA6B,EACA,UAAAvC,CACE,EAAA2B,EACJ,aAAQM,EAAY,OAAAC,EAAc,YAAAC,EAA0B,UAAWlB,EAAKmB,EAAWzB,EAASD,CAAO,EAAG,WAAA6B,EACtG,SAACrB,OAAA2B,WAAA,CAAS,SAAUvD,MAACkD,IAAsB,EACzC,UAAClD,MAAAoD,GAAA,CAAW,GAAGf,EAAO,EACrB3B,SAAcwC,EAAsB,IACvC,EACF,EACJ,CClBO,SAASM,EAAiB/C,EAAQ,CACvC,WAAAgD,EAAa,KACb,wBAAAC,EAA0B,EAC5B,EAAG,CACD,GAAI,CAACjD,EAAe,OAClB,SAAU,CAAC,GAEb,MAAMkD,EAAqB,GACpB,OACL,GAAGlD,EACH,SAAUA,EAAO,SAAS,IAAI,CAACmD,EAASC,IAAiB,CACvD,MAAMjD,EAAOgD,EAAQ,KAAK,IAAI,CAACE,EAAaC,IAAc,CACpD,IAAAC,EAGA,OAAAH,IAAiB,GAAK,CAACH,GACzBM,EAAQC,GAAsBH,EAAarD,EAAO,YAAagD,CAAU,EACzEE,EAAmBI,CAAS,EAAIC,GAEhCA,EAAQL,EAAmBI,CAAS,EAE/B,CACL,GAAGC,EACH,MAAOF,EAAY,MACrB,CACD,EACM,OACL,GAAGF,EACH,KAAAhD,CAAA,CACF,CACD,EAEL,CACA,SAASqD,GAAsBC,EAAOC,EAAaC,EAAQ,CACzD,OAAIF,EAAM,MACD,CACL,MAAOA,EAAM,OAGZA,EAAM,KAKJG,GAAmBH,EAAOC,EAAaC,CAAM,EAJ3C,CACL,MAAO,GAIb,CACA,SAASC,GAAmB,CAC1B,KAAMC,EACN,QAASC,CACX,EAAGJ,EAAc,MAAOC,EAAQ,CAC9B,MAAMI,EAAOzF,EAAqBuF,CAAO,EAAE,OAAO,EAC5CG,EAAUF,EAAaxF,EAAqBwF,CAAU,EAAE,OAAW,OACzE,OAAQJ,EAAa,CACnB,IAAK,SACI,OACL,MAAOO,EAAaN,EAAQ,CAC1B,OAAQ,UACT,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,UACT,EAAE,OAAOI,CAAI,GAElB,IAAK,OACI,OACL,MAAOE,EAAaN,EAAQ,CAC1B,KAAM,UACN,OAAQ,UACT,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,UACT,EAAE,OAAOI,CAAI,GAElB,IAAK,MACI,OACL,MAAOE,EAAaN,EAAQ,CAC1B,IAAK,UACL,QAAS,QACV,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,IAAK,UACL,QAAS,QACT,MAAO,QACR,EAAE,OAAOI,CAAI,GAElB,IAAK,OACI,OACL,MAAOE,EAAaN,EAAQ,CAC1B,MAAO,QACP,IAAK,UACN,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,IAAK,UACL,MAAO,OACP,KAAM,UACP,EAAE,YAAYI,EAAMC,CAAO,GAEhC,IAAK,QACI,OACL,MAAOC,EAAaN,EAAQ,CAC1B,MAAO,QACP,KAAM,UACP,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,MAAO,OACP,KAAM,UACP,EAAE,OAAOI,CAAI,GAElB,IAAK,OACI,OACL,MAAOE,EAAaN,EAAQ,CAC1B,KAAM,UACP,EAAE,OAAOI,CAAI,EACd,aAAcE,EAAaN,EAAQ,CACjC,KAAM,UACP,EAAE,OAAOI,CAAI,EAEpB,CACF,CACA,MAAME,EAAeC,GAAQ,CAACP,EAAQQ,IAC7B,IAAIC,GAAcT,EAAQQ,CAAO,EACvC,CACD,OAAQ,CAACE,EAAGC,IACHC,GAAaF,EAAGC,CAAC,EAE1B,YAAa,MACf,CAAC,ECrIKE,EAAeC,GAAiB,EAAE,OAAO,CAAC,EAAE,OAAO,cAAc,EAC1DC,EAAc,CAAC,CAAC,OAAOF,EAAa,WAAW,IAAK,GAAG,CAAC,IAAK,QAAQA,EAAa,WAAW,IAAK,GAAG,CAAC,OAAO,EAAG,CAAC,kBAAmB,qBAAqB,EAAG,CAAC,kBAAmB,qBAAqB,EAAG,CAAC,kBAAmB,qBAAqB,EAAG,CAAC,mBAAoB,uBAAuB,EAAG,CAAC,kBAAmB,qBAAqB,CAAC,ECGpVG,GAAmB,CACvB,QAAS,CACP,SAAU,QACV,SAAU,OACZ,EACA,SAAU,CACR,KAAM,CACJ,KAAM,SACN,QAAS,GACT,iBAAkB,EAClB,eAAgB,EAClB,CACF,EACA,QAAS,CACP,QAAS,CACP,UAAW,GACX,KAAM,OACR,CACF,CACF,EACO,SAASC,GAAU,CACxB,KAAAzE,EACA,GAAGyB,CACL,EAAG,CACK,MACJ,WAAAoB,GACE6B,EAAkB,EAChBC,EAAgB1G,UAAQ,IAAM,CAC5B0G,QAAgB/B,EAAiB5C,EAAM,CAC3C,WAAA6C,CAAA,CACD,EACD8B,SAAc,SAAWA,EAAc,SAAS,IAAI,CAAC3B,EAAS4B,KAAO,CACnE,GAAG5B,EACH,gBAAiBuB,EAAYK,CAAC,EAAE,CAAC,EACjC,YAAaL,EAAYK,CAAC,EAAE,CAAC,EAC7B,qBAAsBL,EAAYK,CAAC,EAAE,CAAC,CACtC,IACKD,CAAA,EACN,CAAC3E,EAAM6C,CAAU,CAAC,EACd,OAAAzD,MAACsD,GAAW,GAAGjB,EAAO,KAAMkD,EAAe,KAAK,OAAO,QAASH,EAAkB,EAC3F,CCxCA,MAAMK,GAAwB,CAC5B,QAAS,CACP,IAAK,OACP,EACA,QAAS,CACP,QAAS,CACP,UAAW,EACb,CACF,CACF,EACO,SAASC,GAAe,CAC7B,KAAA9E,EACA,UAAAkC,EACA,GAAGT,CACL,EAAG,CACK,MACJ,WAAAoB,GACE6B,EAAkB,EAChBC,EAAgB1G,UAAQ,IAAM,OAC5B0G,QAAgB/B,EAAiB5C,EAAM,CAC3C,WAAA6C,CAAA,CACD,EACD8B,SAAc,QAASA,IAAc,SAAS,CAAC,IAAxBA,cAA2B,KAAK,IAASI,KAAE,OAClEJ,EAAc,SAAWA,EAAc,SAAS,IAAI,CAAC3B,EAAS4B,KAAO,CACnE,GAAG5B,EACH,gBAAiBuB,EAAY,IAAS,KAAE,CAAC,CAAC,EAC1C,YAAaA,EAAY,IAAS,KAAE,CAAC,CAAC,EACtC,YAAa,CACb,IACKI,CAAA,EACN,CAAC3E,EAAM6C,CAAU,CAAC,EACd,OAAAzD,EAAA,IAACsD,EAAU,MAAK,YAAY,KAAMiC,EAAe,QAASE,GAAuB,UAAA3C,EAAuB,GAAGT,CAAO,EAC3H,CChCO,SAASuD,GAAS,CACvB,KAAAhF,EACA,UAAAiF,EAAY,WACZ,oBAAAC,EAAsB,GACtB,UAAAhD,EACA,GAAGT,CACL,EAAG,CACK,MACJ,WAAAoB,GACE6B,EAAkB,EAChBC,EAAgB1G,UAAQ,IAAM,CAC5B0G,QAAgB/B,EAAiB5C,EAAM,CAC3C,WAAA6C,CAAA,CACD,EACD8B,SAAc,SAAWA,EAAc,SAAS,IAAI,CAAC3B,EAAS4B,KAAO,CACnE,GAAG5B,EACH,gBAAiBkC,EAAsBX,EAAY,IAASY,KAAE,CAAC,CAAC,EAAIZ,EAAYK,CAAC,EAAE,CAAC,EACpF,YAAaM,EAAsBX,EAAY,IAASY,KAAE,CAAC,CAAC,EAAIZ,EAAYK,CAAC,EAAE,CAAC,EAChF,YAAa,CACb,IACKD,CACN,GAAC3E,EAAM6C,EAAYqC,CAAmB,CAAC,EACpCE,EAAeH,IAAc,aAC7BjB,EAAU/F,UAAQ,KACf,CACL,UAAWmH,EAAe,IAAM,IAChC,QAAS,CACP,SAAUA,EAAe,QAAU,QACnC,SAAUA,EAAe,QAAU,OACrC,IAED,CAACA,CAAY,CAAC,EACV,OAAAhG,MAACsD,GAAU,KAAK,MAAM,UAAAR,EAAsB,KAAMyC,EAAe,QAAAX,EAAmB,GAAGvC,CAAO,EACvG,CC/BA,MAAM4D,EAAY,2CACX,SAASC,GAAkB,CAChC,eAAAC,EACA,KAAAvF,EACA,QAAAwF,EACA,kBAAAC,CACF,EAAG,CACK,MACJ,MAAA3H,GACEC,EAAS,EACP,CACJ,UAAA2H,GACEC,GAAY,EACVC,EAASF,GAAA,YAAAA,EAAW,eACpB,CACJ,cAAAG,GACEC,GAAiB,EACfC,EAAcpH,WAEdqH,EAAsB,CAAC,CAACP,GAAqB,CAACD,EAC9CS,EAAkBC,cAAY,IAAM,SACxC,GAAI,OAAO,OAAW,IAAa,OAC7B,MAAAC,EAAWnG,EAAK,IAAIoG,GAAY,CAACA,EAAS,MAAOA,EAAS,KAAK,CAAC,EACtED,EAAS,QAAQ,CAAWrI,EAAV0H,EAAgBhG,EAAQ,MAAM,EAAWA,EAAQ,SAAS,CAA3B,EAA+B1B,EAAM0B,EAAQ,QAAQ,CAAC,CAAC,CAAC,EACzG,MAAM6G,EAAkB,GAAGC,EAAgBT,EAAc,OAAO,YAAY,CAAC,CAAC,GAExE7B,EAAU,CACd,UAAW,CACT,OAAQ,CAHO,GAAGsC,EAAgBT,EAAc,OAAO,cAAc,CAAC,CAAC,EAGpD,CACrB,EACA,gBAAAQ,EACA,OAAQb,EAAUA,EAAQ,cAAgB,OAC1C,WAAYA,EAAU,YAAc,YACpC,YAAaA,EAAU,UAAY,UACnC,0BAA2BQ,CAAA,EAEzB,CAACD,EAAY,SAAWR,EAAe,WAAWgB,EAAA,2BAAQ,gBAAR,MAAAA,EAAuB,YAC3ER,EAAY,QAAU,IAAI,OAAO,cAAc,SAASR,EAAe,OAAO,IAEhFiB,EAAAT,EAAY,UAAZ,MAAAS,EAAqB,KAAK,OAAO,cAAc,iBAAiBL,CAAQ,EAAGnC,EAAO,EACjF,CAAC6B,EAAe7F,EAAMuF,EAAgBzH,EAAO0H,EAASQ,CAAmB,CAAC,EACvES,EAAqBP,cAAY,SAAY,CAC7CQ,EAAW,kBAAkBrB,CAAS,IACpC,MAAAqB,EAAW,UAAUrB,EAAW,CACpC,KAAM,KACN,GAAI,mBACL,EACK,aAAO,OAAO,KAAK,UAAW,CAClC,SAAU,CAAC,UAAU,EACrB,WAAYO,CAAA,CACb,EACeK,IAAA,EACf,CAACL,EAAQK,CAAe,CAAC,EAC5BxH,mBAAU,KACJsH,EAAY,SAAWN,GAClB,qBAAc,OAAO,YAAYM,EAAY,QAAS,cAAoB7B,GAAAuB,GAAA,YAAAA,EAAoBvB,EAAE,OAAO,EAEzG,IAAM,CACP6B,EAAY,SACd,OAAO,cAAc,OAAO,mBAAmBA,EAAY,OAAO,CACpE,GAGD,CAACN,EAAmBM,EAAY,OAAO,CAAC,EAG3CtH,YAAU,IAAM,CACKgI,GAAA,EAClB,CAACA,CAAkB,CAAC,EAGvBhI,YAAU,IAAM,CACEwH,GACf,GAACJ,EAAeI,EAAiBjG,CAAI,CAAC,EAClC,CACL,gBAAAiG,CAAA,CAEJ,CCnFO,MAAMU,GAAwBC,GAAcxH,MAAC,QAAK,EAAE,0KAA0K,EAAI,mBAAmB,ECOrP,SAASyH,GAAkB,CAChC,MAAA7E,EACA,KAAA8E,EACA,WAAAC,EAAa,KACb,UAAA7E,CACF,EAAG,CACD,OAAQlB,OAAAgG,EAAA,CAAc,KAAK,UAAU,eAAc,GAC/C,UAAA5H,EAAA,IAAC6H,GAAW,WAAWlG,EAAK,6BAA8BmB,CAAS,EAAG,SAAS,KAAK,KAAK,MACvF,SAAA9C,MAACuH,GAAsB,SAAQ,WAAY,GAC7C,EACA3F,OAACkG,GAAO,MAAMH,EACX,UAAS/E,GAAA5C,EAAA,IAAC+H,IAAa,QAAQ,cAAc,KAAK,KAAK,kBAAiB,GACpE,SACHnF,CAAA,GACF5C,MAACgI,IAAY,SAAKN,CAAA,IACpB,CACF,GACJ,CCvBa,MAAAO,GAAuBnK,OAAK,CAAC,CACxC,KAAMoK,CACR,IAAM,CACE,MACJ,WAAAzE,GACE6B,EAAkB,EAChB6C,EAAc,IAAI,KAAK,aAAa,CAAC1E,CAAU,EAAG,CACtD,KAAM,SACP,EACG,IAAA2E,EACA,IACFA,EAAgBD,EAAY,GAAGD,EAAY,YAAa,QAC9C,CAAC,CACN,OAAAlI,EAAA,IAACC,YAAU,SAAcmI,CAAA,EAClC,CAAC,ECNM,SAASC,GAAS,CACvB,KAAMC,EACN,UAAA5H,EACA,kBAAA2F,EACA,QAAAD,EACA,UAAAtD,EACA,QAAA1B,EAAU,aACV,QAAAC,EAAU,cACV,GAAGkH,CACL,EAAG,CACK,MAAApC,EAAiB5G,SAAO,IAAI,EAC5BqH,EAAsB,CAAC,CAACP,EAGxBmC,EAAcF,GAAA,YAAAA,EAAY,SAAS,GAAG,KACtC1H,EAAO/B,UAAQ,IACZ2J,GAAe,GACrB,CAACA,CAAW,CAAC,EACE,OAAAtC,GAAA,CAChB,eAAAC,EACA,KAAAvF,EACA,QAAAwF,EACA,kBAAAC,CAAA,CACD,EACOzE,OAAAe,EAAA,CAAa,GAAG4F,EAAa,UAAW5G,EAAKmB,EAAW1B,EAASC,EAAS,qDAAqD,EAAG,MAAQO,EAAA,YAAI,UAAU,oBACxJ,UAAC5B,MAAAa,EAAA,CAAM,QAAQ,eAAgB,GAC9BuF,EAAUxE,EAAA,KAAC,OAAK,WAAU,OAAO,cAC5B5B,MAACiI,GAAqB,MAAM7B,CAAS,GAAG,KAC5C,EAAU,KACXQ,SAAwB6B,GAAY,GACvC,IAAQ,cAAe/H,EACxB,UAAAA,SAAcwC,EAAsB,IACrCtB,OAAC,MAAI,WAAU,cACb,UAAA5B,EAAA,IAAC,MAAI,KAAKmG,EAAgB,UAAU,oCAAoC,EACxEvE,OAAC,MAAI,WAAU,YACb,UAAA5B,MAAC,OAAI,UAAU,4DACZ,WAAK,IAAIgH,UAAa,MAAyB,WAAWrF,EAAK,+BAAgCiF,GAAuB,gCAAgC,EAAG,KAAMA,EAAsB,SAAW,OAAW,QAAS,IAAM,CAC3NP,GAAA,MAAAA,EAAoBW,EAAS,KAEzB,YAAAhH,EAAA,IAAC,MAAI,WAAU,gEACZ,SAAAgH,EAAS,MACZ,SACC,MAAI,eAAEA,EAAS,WAAW,MAAE,CAND,GAAAA,EAAS,KAOvC,CAAM,EACV,EACCZ,GAAWpG,EAAA,IAAC0I,EAAO,SAAQ,UAAU,KAAK,KAAK,UAAU,QAAQ,UAAW1I,EAAA,IAAC2I,GAAc,IAAI,QAAS,IAAM,CAC/GtC,GAAA,MAAAA,EAAoB,OAAS,EAEzB,SAAArG,MAACa,EAAM,SAAQ,mBAAoB,GACrC,GACJ,GACF,CACF,GACJ,CACA,SAAS4H,IAAc,CACrB,OAAQzI,MAAAyH,GAAA,CAAkB,MAAOzH,MAACa,EAAM,SAAQ,YAAa,GAAI,KAAMb,MAACa,EAAM,SAAQ,mGAAmG,CAAI,EAC/L,CC3DO,SAAS+H,GAAqB,CACnC,OAAAnI,EACA,UAAAC,CACF,EAAG,CACK,MAAAmI,EAAapI,GAAA,YAAAA,EAAQ,UAAU,MACrC,cAAQR,WACJ,WAAAD,MAACqF,IAAU,QAAQ,aAAa,UAAA3E,EAAsB,KAAMD,GAAA,YAAAA,EAAQ,UAAW,MAAOT,MAACa,GAAM,QAAQ,YAAY,EAAI,YAAagI,QAAchI,EAAM,SAAQ,qBAAqB,OAAQ,CAC3L,MAAOb,MAACoC,EAAgB,OAAOyG,CAAY,GAC1C,GAAK,KAAM,EACX7I,EAAA,IAAA0F,GAAA,CAAe,QAAQ,aAAa,UAAAhF,EAAsB,KAAMD,GAAA,YAAAA,EAAQ,QAAS,MAAOT,EAAA,IAACa,EAAM,SAAQ,aAAc,GAAI,EACzHb,EAAA,IAAAqI,GAAA,CAAS,QAAQ,aAAa,UAAA3H,EAAsB,KAAMD,GAAA,YAAAA,EAAQ,UAAW,MAAOT,EAAA,IAACa,EAAM,SAAQ,eAAgB,GAAI,QACvH+E,GAAS,SAAQ,aAAa,UAAAlF,EAAsB,KAAMD,GAAA,YAAAA,EAAQ,SAAU,UAAU,aAAa,oBAAmB,GAAC,WAAU,GAAC,YAAQI,EAAM,SAAQ,cAAe,GAAI,CAC9K,GACJ,CCVA,MAAMiI,GAAiB,CACrB,MAAO,QACP,IAAK,SACP,EACO,SAASC,GAAmB,CACjC,MAAAxI,EACA,SAAAyI,EACA,SAAAC,EACA,gBAAAC,EAAkB,GAClB,cAAAC,EAAgB,GAChB,YAAAhF,EAAc,QAChB,EAAG,CACD,MAAMiF,EAAWC,IACjB,cAAQzB,EAAc,MAAK,UAAU,QAASrH,GAAS,CACjDA,GACFyI,EAASzI,CAAK,CAGd,YAACP,MAAA0I,EAAA,CAAO,QAAQ,UAAU,MAAM,OAAO,QAAU1I,MAAAsJ,GAAA,EAAc,EAAI,SAAAL,EACjE,SAACjJ,EAAA,IAAAuJ,GAAA,CAAuB,MAAOhJ,EAAM,MAAO,IAAKA,EAAM,IAAK,QAAS6I,GAAYF,EAAkBJ,GAAiBU,GAAkB,MAAO,CAC/I,GACCxJ,MAAAyJ,GAAA,CAAmB,MAAAlJ,EAAc,cAAA4I,EAA8B,YAAAhF,CAA0B,EAC5F,GACJ,CACA,SAASsF,GAAmB,CAC1B,MAAAlJ,EACA,cAAA4I,EACA,YAAAhF,CACF,EAAG,CACD,MAAMiF,EAAWC,IACXK,EAAQC,EAAwB,CACpC,YAAAxF,EACA,aAAc,CACZ,MAAO5D,EAAM,MACb,IAAKA,EAAM,IACX,OAAQA,EAAM,MAChB,EACA,uBAAwB,GACzB,EACKqJ,EAAyB,CAAC,CAACrJ,EAAM,cAAgB,CAAC,CAACA,EAAM,WACzDsJ,EAAeF,EAAwB,CAC3C,YAAAxF,EACA,aAAcyF,EAAyB,CACrC,MAAOrJ,EAAM,aACb,IAAKA,EAAM,WACX,OAAQA,EAAM,eACZuJ,GAAwB,CAAC,EAAE,cAAcJ,EAAM,aAAa,EACjE,EACM,OAAA1J,EAAA,IAAC+J,GAAgB,OAAAL,EAAc,aAAcP,EAAgBU,EAAe,OAAW,sBAAuBD,EAAwB,0BAA2B,CAACR,CAAU,EACrL,CCnDO,SAASY,IAAY,CAC1B,KAAM,CAACvM,EAAWwM,CAAY,EAAI7K,WAAS,IAElC8K,GAAiB,CAAC,EAAE,eAC5B,EACK,CACJ,UAAAxJ,EACA,KAAAE,GACEzD,GAAe,CACjB,UAAAM,CAAA,CACD,EACKmF,EAAQ5C,MAACa,EAAM,SAAQ,iBAAkB,GACxC,OAAAe,EAAA,KAAC,MAAI,WAAU,6EAClB,UAACA,OAAA,OAAI,UAAU,mEACb,UAAA5B,MAACmK,IAAiB,SAAMvH,CAAA,GACxBhB,OAAC,KAAG,WAAU,kDAAmD,UAAAgB,EAAM,KAAC,EACvE5C,EAAA,IAAA+I,GAAA,CAAmB,MAAOtL,EAAW,SAAUwM,EAAc,GAChE,EACArI,OAAC,MAAI,WAAU,kBACb,UAAC5B,MAAAQ,GAAA,CAAmB,OAAQI,GAAA,YAAAA,EAAM,YAAc,GAC/CZ,EAAA,IAAA4I,GAAA,CAAqB,OAAQhI,GAAA,YAAAA,EAAM,eAAgB,UAAAF,EAAsB,GAC5E,CACF,GACJ","names":["Endpoint","useAdminReport","payload","useQuery","fetchAnalyticsReport","keepPreviousData","types","dateRange","params","apiClient","response","FormattedDuration","memo","minutes","seconds","propsMs","propsStartDate","propsEndDate","verbose","addZeroToFirstUnit","isLive","maxIsLiveMs","minDuration","liveInterval","trans","useTrans","initialMs","useMemo","startDate","parseAbsoluteToLocal","getCurrentDateTime","diff","ms","setMs","useState","useEffect","msRef","useRef","overMaxMs","interval","prev","unsignedMs","parsedMS","formattedValue","formatVerbose","formatCompact","jsx","Fragment","t","output","message","addZero","v","value","AdminReportCardRow","report","isLoading","ReportCard","data","Trans","propsIcon","children","type","currentValue","previousValue","percentageChange","colSpan","rowSpan","icon","isValidElement","cloneElement","IconEl","createSvgIconFromTree","clsx","jsxs","AnimatePresence","m","opacityAnimation","Skeleton","FormattedValue","TrendingIndicator","FormattedBytes","FormattedNumber","props","percentage","calculatePercentage","TrendingUpIcon","TrendingFlatIcon","TrendingDownIcon","ChartLayout","title","description","className","contentIsFlex","contentClassName","contentRef","ChartLoadingIndicator","ProgressCircle","LazyChart","lazy","BaseChart","Suspense","formatReportData","localeCode","shareFirstDatasetLabels","firstDatasetLabels","dataset","datasetIndex","datasetItem","itemIndex","label","generateDatasetLabels","datum","granularity","locale","generateTimeLabels","isoDate","isoEndDate","date","endDate","getFormatter","memoize","options","DateFormatter","a","b","shallowEqual","primaryColor","getBootstrapData","ChartColors","LineChartOptions","LineChart","useSelectedLocale","formattedData","i","PolarAreaChartOptions","PolarAreaChart","d","BarChart","direction","individualBarColors","c","isHorizontal","loaderUrl","useGoogleGeoChart","placeholderRef","country","onCountrySelected","analytics","useSettings","apiKey","selectedTheme","useThemeSelector","geoChartRef","regionInteractivity","drawGoogleChart","useCallback","seedData","location","backgroundColor","themeValueToHex","_a","_b","initGoogleGeoChart","lazyLoader","InfoDialogTriggerIcon","createSvgIcon","InfoDialogTrigger","body","dialogSize","DialogTrigger","IconButton","Dialog","DialogHeader","DialogBody","FormattedCountryName","countryCode","regionNames","formattedName","GeoChart","metricData","layoutProps","initialData","InfoTrigger","Button","ArrowBackIcon","VisitorsReportCharts","totalViews","monthDayFormat","ReportDateSelector","onChange","disabled","compactOnMobile","enableCompare","isMobile","useIsMobileMediaQuery","DateRangeIcon","FormattedDateTimeRange","DateFormatPresets","DateSelectorDialog","state","useDateRangePickerState","compareHasInitialValue","compareState","DateRangeComparePresets","DateRangeDialog","Component","setDateRange","DateRangePresets","StaticPageTitle"],"sources":["../../../common/foundation/resources/client/admin/analytics/use-admin-report.jsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-duration.jsx","../../../common/foundation/resources/client/admin/analytics/admin-report-card-row.jsx","../../../common/foundation/resources/client/charts/chart-layout.jsx","../../../common/foundation/resources/client/charts/chart-loading-indicator.jsx","../../../common/foundation/resources/client/charts/base-chart.jsx","../../../common/foundation/resources/client/charts/data/format-report-data.jsx","../../../common/foundation/resources/client/charts/chart-colors.jsx","../../../common/foundation/resources/client/charts/line-chart.jsx","../../../common/foundation/resources/client/charts/polar-area-chart.jsx","../../../common/foundation/resources/client/charts/bar-chart.jsx","../../../common/foundation/resources/client/admin/analytics/geo-chart/use-google-geo-chart.jsx","../../../common/foundation/resources/client/ui/library/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon.jsx","../../../common/foundation/resources/client/ui/library/overlays/dialog/info-dialog-trigger/info-dialog-trigger.jsx","../../../common/foundation/resources/client/ui/library/i18n/formatted-country-name.jsx","../../../common/foundation/resources/client/admin/analytics/geo-chart/geo-chart.jsx","../../../common/foundation/resources/client/admin/analytics/visitors-report-charts.jsx","../../../common/foundation/resources/client/admin/analytics/report-date-selector.jsx","../../../common/foundation/resources/client/admin/analytics/admin-report-page.jsx"],"sourcesContent":["import { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nconst Endpoint = 'admin/reports';\nexport function useAdminReport(payload = {}) {\n  return useQuery({\n    queryKey: [Endpoint, payload],\n    queryFn: () => fetchAnalyticsReport(payload),\n    placeholderData: keepPreviousData\n  });\n}\nfunction fetchAnalyticsReport({\n  types,\n  dateRange\n}) {\n  const params = {};\n  if (types) {\n    params.types = types.join(',');\n  }\n  if (dateRange) {\n    params.startDate = dateRange.start.toAbsoluteString();\n    params.endDate = dateRange.end.toAbsoluteString();\n    params.timezone = dateRange.start.timeZone;\n  }\n  return apiClient.get(Endpoint, {\n    params\n  }).then(response => response.data);\n}","import { Fragment, memo, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { message } from '@ui/i18n/message';\nimport { parseAbsoluteToLocal } from '@internationalized/date';\nimport { getCurrentDateTime } from '@ui/i18n/use-current-date-time';\nexport const FormattedDuration = memo(({\n  minutes,\n  seconds,\n  ms: propsMs,\n  startDate: propsStartDate,\n  endDate: propsEndDate,\n  verbose = false,\n  addZeroToFirstUnit = true,\n  isLive,\n  maxIsLiveMs,\n  minDuration = 0,\n  liveInterval = 5000\n}) => {\n  const {\n    trans\n  } = useTrans();\n  const initialMs = useMemo(() => {\n    if (propsStartDate || propsEndDate) {\n      const startDate = propsStartDate ? parseAbsoluteToLocal(propsStartDate) : getCurrentDateTime();\n      const endDate = propsEndDate ? parseAbsoluteToLocal(propsEndDate) : getCurrentDateTime();\n      const diff = endDate.toDate().getTime() - startDate.toDate().getTime();\n      return diff > minDuration ? diff : minDuration;\n    }\n    if (minutes) {\n      return minutes * 60000;\n    } else if (seconds) {\n      return seconds * 1000;\n    }\n    if (!propsMs) {\n      return minDuration;\n    }\n    return propsMs;\n  }, [minutes, seconds, propsMs, propsStartDate, propsEndDate, minDuration]);\n  const [ms, setMs] = useState(initialMs);\n  useEffect(() => {\n    setMs(initialMs);\n  }, [initialMs]);\n  const msRef = useRef(ms);\n  msRef.current = ms;\n  useEffect(() => {\n    const overMaxMs = maxIsLiveMs && msRef.current > maxIsLiveMs;\n    if (isLive && !overMaxMs) {\n      const interval = setInterval(() => {\n        setMs(prev => prev + liveInterval);\n      }, liveInterval);\n      return () => clearInterval(interval);\n    }\n  }, [isLive, liveInterval, maxIsLiveMs, initialMs]);\n  const unsignedMs = ms < 0 ? -ms : ms;\n  const parsedMS = {\n    days: Math.trunc(unsignedMs / 86400000),\n    hours: Math.trunc(unsignedMs / 3600000) % 24,\n    minutes: Math.trunc(unsignedMs / 60000) % 60,\n    seconds: Math.trunc(unsignedMs / 1000) % 60\n  };\n  let formattedValue;\n  if (verbose) {\n    formattedValue = formatVerbose(parsedMS, trans);\n  } else {\n    formattedValue = formatCompact(parsedMS, addZeroToFirstUnit);\n  }\n  return <Fragment>{formattedValue}</Fragment>;\n});\nfunction formatVerbose(t, trans) {\n  const output = [];\n  if (t.days) {\n    output.push(`${t.days}${trans(message('d'))}`);\n  }\n  if (t.hours) {\n    output.push(`${t.hours}${trans(message('hr'))}`);\n  }\n  if (t.minutes) {\n    output.push(`${t.minutes}${trans(message('min'))}`);\n  }\n  if (t.seconds && !t.hours) {\n    output.push(`${t.seconds}${trans(message('sec'))}`);\n  }\n  return output.join(' ');\n}\nfunction formatCompact(t, addZeroToFirstUnit = true) {\n  const seconds = addZero(t.seconds);\n  let output = '';\n  if (t.days && !output) {\n    output = `${t.days}:${addZero(t.hours)}:${addZero(t.minutes)}:${seconds}`;\n  }\n  if (t.hours && !output) {\n    output = `${addZero(t.hours, addZeroToFirstUnit)}:${addZero(t.minutes)}:${seconds}`;\n  }\n  if (!output) {\n    output = `${addZero(t.minutes, addZeroToFirstUnit)}:${seconds}`;\n  }\n  return output;\n}\nfunction addZero(v, addZero = true) {\n  if (!addZero) return v;\n  let value = `${v}`;\n  if (value.length === 1) {\n    value = '0' + value;\n  }\n  return value;\n}","import React, { cloneElement, Fragment, isValidElement } from 'react';\nimport { TrendingUpIcon } from '@ui/icons/material/TrendingUp';\nimport { TrendingDownIcon } from '@ui/icons/material/TrendingDown';\nimport { createSvgIconFromTree } from '@ui/icons/create-svg-icon';\nimport { FormattedNumber } from '@ui/i18n/formatted-number';\nimport { FormattedBytes } from '@ui/i18n/formatted-bytes';\nimport { TrendingFlatIcon } from '@ui/icons/material/TrendingFlat';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { Skeleton } from '@ui/skeleton/skeleton';\nimport clsx from 'clsx';\nimport { Trans } from '@ui/i18n/trans';\nimport { FormattedDuration } from '@ui/i18n/formatted-duration';\nexport function AdminReportCardRow({\n  report,\n  isLoading\n}) {\n  if (!report) return <div className=\"col-span-12 row-span-3 mt-3 mb-3\" />;\n  return <Fragment>\n      {report?.map(data => <ReportCard key={data.name} icon={data.icon} type={data.type} currentValue={data.currentValue} previousValue={data.previousValue} percentageChange={data.percentageChange} isLoading={isLoading}>\n          <Trans message={data.name} />\n        </ReportCard>)}\n    </Fragment>;\n}\nexport function ReportCard({\n  icon: propsIcon,\n  children,\n  type,\n  currentValue,\n  previousValue,\n  percentageChange,\n  isLoading = false,\n  colSpan = 'col-span-3',\n  rowSpan = 'row-span-3'\n}) {\n  let icon;\n  if (propsIcon) {\n    if (isValidElement(propsIcon)) {\n      icon = cloneElement(propsIcon, {\n        size: 'sm'\n      });\n    } else {\n      const IconEl = createSvgIconFromTree(propsIcon);\n      icon = <IconEl size=\"sm\" />;\n    }\n  }\n  return <div className={clsx('compact-scrollbar flex flex-wrap flex-col p-2 justify-left items-left overflow-x-auto  mb-4 overflow-y-hidden whitespace-nowrap rounded-panel border', colSpan, rowSpan)}>\n      <div className=\"flex items-center gap-6\">\n        {icon}\n        <h2 className=\"text-sm font-semibold\">{children}</h2>\n      </div>\n      <div className=\"flex gap-10\">\n        <div className=\"text-4xl font-medium text-main\">\n          <AnimatePresence initial={false} mode=\"wait\">\n            {isLoading ? <m.div key=\"skeleton\" {...opacityAnimation}>\n                <Skeleton className=\"min-w-40\" />\n              </m.div> : <m.div key=\"value\" {...opacityAnimation}>\n                <FormattedValue type={type} value={currentValue} />\n              </m.div>}\n          </AnimatePresence>\n        </div>\n        {currentValue != null && (percentageChange != null || previousValue != null) && <div className=\"flex items-center gap-10\">\n              <TrendingIndicator currentValue={currentValue} previousValue={previousValue} percentageChange={percentageChange} />\n            </div>}\n      </div>\n    </div>;\n}\nfunction FormattedValue({\n  type,\n  value\n}) {\n  if (value == null) return '—';\n  switch (type) {\n    case 'fileSize':\n      return <FormattedBytes bytes={value} />;\n    case 'percentage':\n      return <FormattedNumber value={value} style=\"percent\" maximumFractionDigits={1} />;\n    case 'durationInSeconds':\n      return <FormattedDuration seconds={value} verbose />;\n    default:\n      return <FormattedNumber value={value} />;\n  }\n}\nfunction TrendingIndicator(props) {\n  const percentage = calculatePercentage(props);\n  let icon;\n  if (percentage > 0) {\n    icon = <TrendingUpIcon size=\"md\" className=\"text-positive\" />;\n  } else if (percentage === 0) {\n    icon = <TrendingFlatIcon className=\"text-muted\" />;\n  } else {\n    icon = <TrendingDownIcon className=\"text-danger\" />;\n  }\n  return <Fragment>\n      {icon}\n      <div className=\"text-sm font-semibold text-muted\">{percentage}%</div>\n    </Fragment>;\n}\nfunction calculatePercentage({\n  percentageChange,\n  previousValue,\n  currentValue\n}) {\n  if (percentageChange != null || previousValue == null || currentValue == null) {\n    return percentageChange ?? 0;\n  }\n  if (previousValue === 0) {\n    return 100;\n  }\n  return Math.round((currentValue - previousValue) / previousValue * 100);\n}","import clsx from 'clsx';\nexport function ChartLayout(props) {\n  const {\n    title,\n    description,\n    children,\n    className,\n    contentIsFlex = true,\n    contentClassName,\n    contentRef\n  } = props;\n  return <div className={clsx('flex h-full flex-auto flex-col rounded-panel border bg p-10 dark:bg-alt', className)}>\n      <div className=\"flex flex-shrink-0 items-center justify-between pb-10 text-xs\">\n        <div className=\"text-sm font-semibold\">{title}</div>\n        {description && <div className=\"text-muted\">{description}</div>}\n      </div>\n      <div ref={contentRef} className={clsx('relative', contentIsFlex && 'flex flex-auto items-center justify-center', contentClassName)}>\n        {children}\n      </div>\n    </div>;\n}","import { ProgressCircle } from '@ui/progress/progress-circle';\nimport { Trans } from '@ui/i18n/trans';\nexport function ChartLoadingIndicator() {\n  return <div className=\"absolute mx-auto flex items-center gap-10 text-sm\">\n      <ProgressCircle isIndeterminate size=\"sm\" />\n      <Trans message=\"Chart loading\" />\n    </div>;\n}","import { lazy, Suspense } from 'react';\nimport { ChartLayout } from './chart-layout';\nimport { ChartLoadingIndicator } from '@common/charts/chart-loading-indicator';\nimport clsx from 'clsx';\nconst LazyChart = lazy(() => import('./lazy-chart'));\nexport function BaseChart(props) {\n  const {\n    title,\n    description,\n    className,\n    rowSpan = 'row-span-11',\n    colSpan = 'col-span-6',\n    contentRef,\n    isLoading\n  } = props;\n  return <ChartLayout title={title} description={description} className={clsx(className, rowSpan, colSpan)} contentRef={contentRef}>\n      <Suspense fallback={<ChartLoadingIndicator />}>\n        <LazyChart {...props} />\n        {isLoading && <ChartLoadingIndicator />}\n      </Suspense>\n    </ChartLayout>;\n}","import { DateFormatter, parseAbsoluteToLocal } from '@internationalized/date';\nimport memoize from 'nano-memoize';\nimport { shallowEqual } from '@ui/utils/shallow-equal';\nexport function formatReportData(report, {\n  localeCode = 'en',\n  shareFirstDatasetLabels = true\n}) {\n  if (!report) return {\n    datasets: []\n  };\n  const firstDatasetLabels = [];\n  return {\n    ...report,\n    datasets: report.datasets.map((dataset, datasetIndex) => {\n      const data = dataset.data.map((datasetItem, itemIndex) => {\n        let label;\n        // when there are multiple datasets, we'll need to use labels from the first dataset, so charts are\n        // overlapped over one another, otherwise they will be side by side, if labels in all datasets are not identical.\n        if (datasetIndex === 0 || !shareFirstDatasetLabels) {\n          label = generateDatasetLabels(datasetItem, report.granularity, localeCode);\n          firstDatasetLabels[itemIndex] = label;\n        } else {\n          label = firstDatasetLabels[itemIndex];\n        }\n        return {\n          ...label,\n          value: datasetItem.value\n        };\n      });\n      return {\n        ...dataset,\n        data\n      };\n    })\n  };\n}\nfunction generateDatasetLabels(datum, granularity, locale) {\n  if (datum.label) {\n    return {\n      label: datum.label\n    };\n  }\n  if (!datum.date) {\n    return {\n      label: ''\n    };\n  }\n  return generateTimeLabels(datum, granularity, locale);\n}\nfunction generateTimeLabels({\n  date: isoDate,\n  endDate: isoEndDate\n}, granularity = 'day', locale) {\n  const date = parseAbsoluteToLocal(isoDate).toDate();\n  const endDate = isoEndDate ? parseAbsoluteToLocal(isoEndDate).toDate() : null;\n  switch (granularity) {\n    case 'minute':\n      return {\n        label: getFormatter(locale, {\n          second: '2-digit'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric',\n          second: '2-digit'\n        }).format(date)\n      };\n    case 'hour':\n      return {\n        label: getFormatter(locale, {\n          hour: 'numeric',\n          minute: 'numeric'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit',\n          hour: 'numeric',\n          minute: 'numeric'\n        }).format(date)\n      };\n    case 'day':\n      return {\n        label: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          weekday: 'short',\n          month: 'short'\n        }).format(date)\n      };\n    case 'week':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          day: '2-digit'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          day: '2-digit',\n          month: 'long',\n          year: 'numeric'\n        }).formatRange(date, endDate)\n      };\n    case 'month':\n      return {\n        label: getFormatter(locale, {\n          month: 'short',\n          year: 'numeric'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          month: 'long',\n          year: 'numeric'\n        }).format(date)\n      };\n    case 'year':\n      return {\n        label: getFormatter(locale, {\n          year: 'numeric'\n        }).format(date),\n        tooltipTitle: getFormatter(locale, {\n          year: 'numeric'\n        }).format(date)\n      };\n  }\n}\nconst getFormatter = memoize((locale, options) => {\n  return new DateFormatter(locale, options);\n}, {\n  equals: (a, b) => {\n    return shallowEqual(a, b);\n  },\n  callTimeout: undefined\n});","import { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nconst primaryColor = getBootstrapData().themes[0].values['--be-primary'];\nexport const ChartColors = [[`rgb(${primaryColor.replaceAll(' ', ',')})`, `rgba(${primaryColor.replaceAll(' ', ',')},0.2)`], ['rgb(255,112,67)', 'rgb(255,112,67,0.2)'], ['rgb(255,167,38)', 'rgb(255,167,38,0.2)'], ['rgb(141,110,99)', 'rgb(141,110,99,0.2)'], ['rgb(102,187,106)', 'rgba(102,187,106,0.2)'], ['rgb(92,107,192)', 'rgb(92,107,192,0.2)']];","import { BaseChart } from './base-chart';\nimport { useMemo } from 'react';\nimport { formatReportData } from './data/format-report-data';\nimport { useSelectedLocale } from '@ui/i18n/selected-locale';\nimport { ChartColors } from './chart-colors';\nconst LineChartOptions = {\n  parsing: {\n    xAxisKey: 'label',\n    yAxisKey: 'value'\n  },\n  datasets: {\n    line: {\n      fill: 'origin',\n      tension: 0.1,\n      pointBorderWidth: 4,\n      pointHitRadius: 10\n    }\n  },\n  plugins: {\n    tooltip: {\n      intersect: false,\n      mode: 'index'\n    }\n  }\n};\nexport function LineChart({\n  data,\n  ...props\n}) {\n  const {\n    localeCode\n  } = useSelectedLocale();\n  const formattedData = useMemo(() => {\n    const formattedData = formatReportData(data, {\n      localeCode\n    });\n    formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n      ...dataset,\n      backgroundColor: ChartColors[i][1],\n      borderColor: ChartColors[i][0],\n      pointBackgroundColor: ChartColors[i][0]\n    }));\n    return formattedData;\n  }, [data, localeCode]);\n  return <BaseChart {...props} data={formattedData} type=\"line\" options={LineChartOptions} />;\n}","import { BaseChart } from './base-chart';\nimport { ChartColors } from './chart-colors';\nimport { useSelectedLocale } from '@ui/i18n/selected-locale';\nimport { useMemo } from 'react';\nimport { formatReportData } from './data/format-report-data';\nconst PolarAreaChartOptions = {\n  parsing: {\n    key: 'value'\n  },\n  plugins: {\n    tooltip: {\n      intersect: true\n    }\n  }\n};\nexport function PolarAreaChart({\n  data,\n  className,\n  ...props\n}) {\n  const {\n    localeCode\n  } = useSelectedLocale();\n  const formattedData = useMemo(() => {\n    const formattedData = formatReportData(data, {\n      localeCode\n    });\n    formattedData.labels = formattedData.datasets[0]?.data.map(d => d.label);\n    formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n      ...dataset,\n      backgroundColor: ChartColors.map(c => c[1]),\n      borderColor: ChartColors.map(c => c[0]),\n      borderWidth: 2\n    }));\n    return formattedData;\n  }, [data, localeCode]);\n  return <BaseChart type=\"polarArea\" data={formattedData} options={PolarAreaChartOptions} className={className} {...props} />;\n}","import { BaseChart } from './base-chart';\nimport { ChartColors } from './chart-colors';\nimport { useSelectedLocale } from '@ui/i18n/selected-locale';\nimport { useMemo } from 'react';\nimport { formatReportData } from './data/format-report-data';\nexport function BarChart({\n  data,\n  direction = 'vertical',\n  individualBarColors = false,\n  className,\n  ...props\n}) {\n  const {\n    localeCode\n  } = useSelectedLocale();\n  const formattedData = useMemo(() => {\n    const formattedData = formatReportData(data, {\n      localeCode\n    });\n    formattedData.datasets = formattedData.datasets.map((dataset, i) => ({\n      ...dataset,\n      backgroundColor: individualBarColors ? ChartColors.map(c => c[1]) : ChartColors[i][1],\n      borderColor: individualBarColors ? ChartColors.map(c => c[0]) : ChartColors[i][0],\n      borderWidth: 2\n    }));\n    return formattedData;\n  }, [data, localeCode, individualBarColors]);\n  const isHorizontal = direction === 'horizontal';\n  const options = useMemo(() => {\n    return {\n      indexAxis: isHorizontal ? 'y' : 'x',\n      parsing: {\n        xAxisKey: isHorizontal ? 'value' : 'label',\n        yAxisKey: isHorizontal ? 'label' : 'value'\n      }\n    };\n  }, [isHorizontal]);\n  return <BaseChart type=\"bar\" className={className} data={formattedData} options={options} {...props} />;\n}","import lazyLoader from '@ui/utils/loaders/lazy-loader';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useThemeSelector } from '@ui/themes/theme-selector-context';\nimport { themeValueToHex } from '@ui/themes/utils/theme-value-to-hex';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { message } from '@ui/i18n/message';\nconst loaderUrl = 'https://www.gstatic.com/charts/loader.js';\nexport function useGoogleGeoChart({\n  placeholderRef,\n  data,\n  country,\n  onCountrySelected\n}) {\n  const {\n    trans\n  } = useTrans();\n  const {\n    analytics\n  } = useSettings();\n  const apiKey = analytics?.gchart_api_key;\n  const {\n    selectedTheme\n  } = useThemeSelector();\n  const geoChartRef = useRef();\n  // only allow selecting countries, not cities\n  const regionInteractivity = !!onCountrySelected && !country;\n  const drawGoogleChart = useCallback(() => {\n    if (typeof google === 'undefined') return;\n    const seedData = data.map(location => [location.label, location.value]);\n    seedData.unshift([country ? trans(message('City')) : trans(message('Country')), trans(message('Clicks'))]);\n    const backgroundColor = `${themeValueToHex(selectedTheme.values['--be-paper'])}`;\n    const chartColor = `${themeValueToHex(selectedTheme.values['--be-primary'])}`;\n    const options = {\n      colorAxis: {\n        colors: [chartColor]\n      },\n      backgroundColor,\n      region: country ? country.toUpperCase() : undefined,\n      resolution: country ? 'provinces' : 'countries',\n      displayMode: country ? 'markers' : 'regions',\n      enableRegionInteractivity: regionInteractivity\n    };\n    if (!geoChartRef.current && placeholderRef.current && google?.visualization?.GeoChart) {\n      geoChartRef.current = new google.visualization.GeoChart(placeholderRef.current);\n    }\n    geoChartRef.current?.draw(google.visualization.arrayToDataTable(seedData), options);\n  }, [selectedTheme, data, placeholderRef, trans, country, regionInteractivity]);\n  const initGoogleGeoChart = useCallback(async () => {\n    if (lazyLoader.isLoadingOrLoaded(loaderUrl)) return;\n    await lazyLoader.loadAsset(loaderUrl, {\n      type: 'js',\n      id: 'google-charts-js'\n    });\n    await google.charts.load('current', {\n      packages: ['geochart'],\n      mapsApiKey: apiKey\n    });\n    drawGoogleChart();\n  }, [apiKey, drawGoogleChart]);\n  useEffect(() => {\n    if (geoChartRef.current && onCountrySelected) {\n      google.visualization.events.addListener(geoChartRef.current, 'regionClick', a => onCountrySelected?.(a.region));\n    }\n    return () => {\n      if (geoChartRef.current) {\n        google.visualization.events.removeAllListeners(geoChartRef.current);\n      }\n    };\n    // this will correctly run when geochart instance is set on ref\n  }, [onCountrySelected, geoChartRef.current]);\n\n  // on component load: load chart library then draw, otherwise just draw\n  useEffect(() => {\n    initGoogleGeoChart();\n  }, [initGoogleGeoChart]);\n\n  // redraw chart if data or theme changes\n  useEffect(() => {\n    drawGoogleChart();\n  }, [selectedTheme, drawGoogleChart, data]);\n  return {\n    drawGoogleChart\n  };\n}","import { createSvgIcon } from '@ui/icons/create-svg-icon';\nexport const InfoDialogTriggerIcon = createSvgIcon(<path d=\"M9 8a1 1 0 0 0-1-1H5.5a1 1 0 1 0 0 2H7v4a1 1 0 0 0 2 0zM4 0h8a4 4 0 0 1 4 4v8a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4zm4 5.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z\" />, 'InfoDialogTrigger');","import { IconButton } from '@ui/buttons/icon-button';\nimport { InfoDialogTriggerIcon } from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger-icon';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport React from 'react';\nimport clsx from 'clsx';\nexport function InfoDialogTrigger({\n  title,\n  body,\n  dialogSize = 'sm',\n  className\n}) {\n  return <DialogTrigger type=\"popover\" triggerOnHover>\n      <IconButton className={clsx('ml-4 text-muted opacity-70', className)} iconSize=\"xs\" size=\"2xs\">\n        <InfoDialogTriggerIcon viewBox=\"0 0 16 16\" />\n      </IconButton>\n      <Dialog size={dialogSize}>\n        {title && <DialogHeader padding=\"px-18 pt-12\" size=\"md\" hideDismissButton>\n            {title}\n          </DialogHeader>}\n        <DialogBody>{body}</DialogBody>\n      </Dialog>\n    </DialogTrigger>;\n}","import { useSelectedLocale } from '@ui/i18n/selected-locale';\nimport { Fragment, memo } from 'react';\nexport const FormattedCountryName = memo(({\n  code: countryCode\n}) => {\n  const {\n    localeCode\n  } = useSelectedLocale();\n  const regionNames = new Intl.DisplayNames([localeCode], {\n    type: 'region'\n  });\n  let formattedName;\n  try {\n    formattedName = regionNames.of(countryCode.toUpperCase());\n  } catch (e) {}\n  return <Fragment>{formattedName}</Fragment>;\n});","import React, { useMemo, useRef } from 'react';\nimport { useGoogleGeoChart } from './use-google-geo-chart';\nimport { ChartLayout } from '@common/charts/chart-layout';\nimport { ChartLoadingIndicator } from '@common/charts/chart-loading-indicator';\nimport { Button } from '@ui/buttons/button';\nimport { ArrowBackIcon } from '@ui/icons/material/ArrowBack';\nimport clsx from 'clsx';\nimport { InfoDialogTrigger } from '@ui/overlays/dialog/info-dialog-trigger/info-dialog-trigger';\nimport { Trans } from '@ui/i18n/trans';\nimport { FormattedCountryName } from '@ui/i18n/formatted-country-name';\nexport function GeoChart({\n  data: metricData,\n  isLoading,\n  onCountrySelected,\n  country,\n  className,\n  colSpan = 'col-span-7',\n  rowSpan = 'row-span-11',\n  ...layoutProps\n}) {\n  const placeholderRef = useRef(null);\n  const regionInteractivity = !!onCountrySelected;\n\n  // memo data to avoid redrawing chart on rerender\n  const initialData = metricData?.datasets[0].data;\n  const data = useMemo(() => {\n    return initialData || [];\n  }, [initialData]);\n  useGoogleGeoChart({\n    placeholderRef,\n    data,\n    country,\n    onCountrySelected\n  });\n  return <ChartLayout {...layoutProps} className={clsx(className, colSpan, rowSpan, 'compact-scrollbar overflow-x-auto overflow-y-hidden')} title={<div className=\"flex items-center\">\n          <Trans message=\"Top Locations\" />\n          {country ? <span className=\"pl-4\">\n              ({<FormattedCountryName code={country} />})\n            </span> : null}\n          {regionInteractivity && <InfoTrigger />}\n        </div>} contentIsFlex={isLoading}>\n      {isLoading && <ChartLoadingIndicator />}\n      <div className=\"flex gap-24\">\n        <div ref={placeholderRef} className=\"min-h-[340px] w-[480px] flex-auto\" />\n        <div className=\"w-[170px]\">\n          <div className=\"max-h-[340px] w-full flex-initial overflow-y-auto text-sm\">\n            {data.map(location => <div key={location.label} className={clsx('mb-4 flex items-center gap-4', regionInteractivity && 'cursor-pointer hover:underline')} role={regionInteractivity ? 'button' : undefined} onClick={() => {\n            onCountrySelected?.(location.code);\n          }}>\n                <div className=\"max-w-110 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                  {location.label}\n                </div>\n                <div>({location.percentage})%</div>\n              </div>)}\n          </div>\n          {country && <Button variant=\"outline\" size=\"xs\" className=\"mt-14\" startIcon={<ArrowBackIcon />} onClick={() => {\n          onCountrySelected?.(undefined);\n        }}>\n              <Trans message=\"Back to countries\" />\n            </Button>}\n        </div>\n      </div>\n    </ChartLayout>;\n}\nfunction InfoTrigger() {\n  return <InfoDialogTrigger title={<Trans message=\"Zooming in\" />} body={<Trans message=\"Click on a country inside the map or country list to zoom in and see city data for that country.\" />} />;\n}","import React, { Fragment } from 'react';\nimport { LineChart } from '@common/charts/line-chart';\nimport { Trans } from '@ui/i18n/trans';\nimport { PolarAreaChart } from '@common/charts/polar-area-chart';\nimport { BarChart } from '@common/charts/bar-chart';\nimport { FormattedNumber } from '@ui/i18n/formatted-number';\nimport { GeoChart } from '@common/admin/analytics/geo-chart/geo-chart';\nexport function VisitorsReportCharts({\n  report,\n  isLoading\n}) {\n  const totalViews = report?.pageViews.total;\n  return <Fragment>\n      <LineChart colSpan=\"col-span-8\" isLoading={isLoading} data={report?.pageViews} title={<Trans message=\"Pageviews\" />} description={totalViews ? <Trans message=\":count total views\" values={{\n      count: <FormattedNumber value={totalViews} />\n    }} /> : null} />\n      <PolarAreaChart colSpan=\"col-span-4\" isLoading={isLoading} data={report?.devices} title={<Trans message=\"Top devices\" />} />\n      <GeoChart colSpan=\"col-span-7\" isLoading={isLoading} data={report?.locations} title={<Trans message=\"Top locations\" />} />\n      <BarChart colSpan=\"col-span-5\" isLoading={isLoading} data={report?.browsers} direction=\"horizontal\" individualBarColors hideLegend title={<Trans message=\"Top browsers\" />} />\n    </Fragment>;\n}","import { useDateRangePickerState } from '@ui/forms/input-field/date/date-range-picker/use-date-range-picker-state';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Button } from '@ui/buttons/button';\nimport { DateRangeIcon } from '@ui/icons/material/DateRange';\nimport { FormattedDateTimeRange } from '@ui/i18n/formatted-date-time-range';\nimport { DateRangeDialog } from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-dialog';\nimport React from 'react';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nimport { DateFormatPresets } from '@ui/i18n/formatted-date';\nimport { DateRangeComparePresets } from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-compare-presets';\nconst monthDayFormat = {\n  month: 'short',\n  day: '2-digit'\n};\nexport function ReportDateSelector({\n  value,\n  onChange,\n  disabled,\n  compactOnMobile = true,\n  enableCompare = false,\n  granularity = 'minute'\n}) {\n  const isMobile = useIsMobileMediaQuery();\n  return <DialogTrigger type=\"popover\" onClose={value => {\n    if (value) {\n      onChange(value);\n    }\n  }}>\n      <Button variant=\"outline\" color=\"chip\" endIcon={<DateRangeIcon />} disabled={disabled}>\n        <FormattedDateTimeRange start={value.start} end={value.end} options={isMobile && compactOnMobile ? monthDayFormat : DateFormatPresets.short} />\n      </Button>\n      <DateSelectorDialog value={value} enableCompare={enableCompare} granularity={granularity} />\n    </DialogTrigger>;\n}\nfunction DateSelectorDialog({\n  value,\n  enableCompare,\n  granularity\n}) {\n  const isMobile = useIsMobileMediaQuery();\n  const state = useDateRangePickerState({\n    granularity,\n    defaultValue: {\n      start: value.start,\n      end: value.end,\n      preset: value.preset\n    },\n    closeDialogOnSelection: false\n  });\n  const compareHasInitialValue = !!value.compareStart && !!value.compareEnd;\n  const compareState = useDateRangePickerState({\n    granularity,\n    defaultValue: compareHasInitialValue ? {\n      start: value.compareStart,\n      end: value.compareEnd,\n      preset: value.comparePreset\n    } : DateRangeComparePresets[0].getRangeValue(state.selectedValue)\n  });\n  return <DateRangeDialog state={state} compareState={enableCompare ? compareState : undefined} compareVisibleDefault={compareHasInitialValue} showInlineDatePickerField={!isMobile} />;\n}","import React, { useState } from 'react';\nimport { useAdminReport } from './use-admin-report';\nimport { Trans } from '@ui/i18n/trans';\nimport { StaticPageTitle } from '../../seo/static-page-title';\nimport { AdminReportCardRow } from '@common/admin/analytics/admin-report-card-row';\nimport { VisitorsReportCharts } from '@common/admin/analytics/visitors-report-charts';\nimport { DateRangePresets } from '@ui/forms/input-field/date/date-range-picker/dialog/date-range-presets';\nimport { ReportDateSelector } from '@common/admin/analytics/report-date-selector';\nexport function Component() {\n  const [dateRange, setDateRange] = useState(() => {\n    // This week\n    return DateRangePresets[2].getRangeValue();\n  });\n  const {\n    isLoading,\n    data\n  } = useAdminReport({\n    dateRange\n  });\n  const title = <Trans message=\"Visitors report\" />;\n  return <div className=\"min-h-full gap-6 overflow-x-hidden p-4 mt-[12px] md:mt-0 md:gap-18 md:p-18\">\n      <div className=\"mb-2 md:mb-6 flex items-center justify-between gap-2  md:gap-24 \">\n        <StaticPageTitle>{title}</StaticPageTitle>\n        <h1 className=\"md:mb-24 text-lg md:text-3xl font-light md:mb-0\">{title} </h1>\n        <ReportDateSelector value={dateRange} onChange={setDateRange} />\n      </div>\n      <div className=\"chart-grid mt-3\">\n        <AdminReportCardRow report={data?.headerReport} />\n        <VisitorsReportCharts report={data?.visitorsReport} isLoading={isLoading} />\n      </div>\n    </div>;\n}"],"file":"assets/admin-report-page-ec958527.js"}