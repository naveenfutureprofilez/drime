{"version":3,"file":"article-body-editor-03832c07.js","sources":["../../../common/foundation/resources/client/text-editor/extensions/background-color.jsx","../../../common/foundation/resources/client/text-editor/extensions/indent.jsx","../../../common/foundation/resources/client/text-editor/extensions/embed.jsx","../../../common/foundation/resources/client/text-editor/highlight/lowlight.jsx","../../../common/foundation/resources/client/text-editor/extensions/info-block.jsx","../../../common/foundation/resources/client/article-editor/article-body-editor.jsx"],"sourcesContent":["import { Extension } from '@tiptap/core';\nimport '@tiptap/extension-text-style';\nexport const BackgroundColor = Extension.create({\n  name: 'backgroundColor',\n  addOptions() {\n    return {\n      types: ['textStyle']\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        backgroundColor: {\n          default: null,\n          parseHTML: element => element.style.backgroundColor.replace(/['\"]+/g, ''),\n          renderHTML: attributes => {\n            if (!attributes.backgroundColor) {\n              return {};\n            }\n            return {\n              style: `background-color: ${attributes.backgroundColor}`\n            };\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    return {\n      setBackgroundColor: backgroundColor => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          backgroundColor\n        }).run();\n      },\n      unsetBackgroundColor: () => ({\n        chain\n      }) => {\n        return chain().setMark('textStyle', {\n          backgroundColor: null\n        }).removeEmptyTextStyle().run();\n      }\n    };\n  }\n});","import { Extension } from '@tiptap/core';\nimport { AllSelection, TextSelection } from 'prosemirror-state';\nexport const Indent = Extension.create({\n  name: 'indent',\n  addOptions: () => {\n    return {\n      types: ['listItem', 'paragraph'],\n      minLevel: 0,\n      maxLevel: 6\n    };\n  },\n  addGlobalAttributes() {\n    return [{\n      types: this.options.types,\n      attributes: {\n        indent: {\n          renderHTML: attributes => {\n            return attributes?.indent > this.options.minLevel ? {\n              'data-indent': attributes.indent\n            } : null;\n          },\n          parseHTML: element => {\n            const level = Number(element.getAttribute('data-indent'));\n            return level && level > this.options.minLevel ? level : null;\n          }\n        }\n      }\n    }];\n  },\n  addCommands() {\n    const setNodeIndentMarkup = (tr, pos, delta) => {\n      const node = tr?.doc?.nodeAt(pos);\n      if (node) {\n        const nextLevel = (node.attrs.indent || 0) + delta;\n        const {\n          minLevel,\n          maxLevel\n        } = this.options;\n        const indent =\n        // eslint-disable-next-line no-nested-ternary\n        nextLevel < minLevel ? minLevel : nextLevel > maxLevel ? maxLevel : nextLevel;\n        if (indent !== node.attrs.indent) {\n          const {\n            indent: oldIndent,\n            ...currentAttrs\n          } = node.attrs;\n          const nodeAttrs = indent > minLevel ? {\n            ...currentAttrs,\n            indent\n          } : currentAttrs;\n          return tr.setNodeMarkup(pos, node.type, nodeAttrs, node.marks);\n        }\n      }\n      return tr;\n    };\n    const updateIndentLevel = (tr, delta) => {\n      const {\n        doc,\n        selection\n      } = tr;\n      if (doc && selection && (selection instanceof TextSelection || selection instanceof AllSelection)) {\n        const {\n          from,\n          to\n        } = selection;\n        doc.nodesBetween(from, to, (node, pos) => {\n          if (this.options.types.includes(node.type.name)) {\n            tr = setNodeIndentMarkup(tr, pos, delta);\n            return false;\n          }\n          return true;\n        });\n      }\n      return tr;\n    };\n    const applyIndent = direction => () => ({\n      tr,\n      state,\n      dispatch\n    }) => {\n      const {\n        selection\n      } = state;\n      tr = tr.setSelection(selection);\n      tr = updateIndentLevel(tr, direction);\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n      return false;\n    };\n    return {\n      indent: applyIndent(1),\n      outdent: applyIndent(-1)\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      Tab: ({\n        editor\n      }) => {\n        if (editor.state.selection.to > editor.state.selection.from) {\n          return this.editor.commands.indent();\n        }\n        return false;\n      },\n      'Shift-Tab': ({\n        editor\n      }) => {\n        if (editor.state.selection.to > editor.state.selection.from) {\n          return this.editor.commands.outdent();\n        }\n        return false;\n      }\n    };\n  }\n});","import { mergeAttributes, Node } from '@tiptap/react';\nexport const Embed = Node.create({\n  name: 'embed',\n  group: 'block',\n  atom: true,\n  addAttributes() {\n    return {\n      allowfullscreen: {\n        default: null\n      },\n      allow: {\n        default: 'autoplay; fullscreen; picture-in-picture'\n      },\n      src: {\n        default: null\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'iframe'\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['iframe', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\n  },\n  addCommands() {\n    return {\n      setEmbed: options => ({\n        commands\n      }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: options\n        });\n      }\n    };\n  }\n});","import { createLowlight } from 'lowlight';\n\n// load specific languages only\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport typescript from 'highlight.js/lib/languages/typescript';\nimport html from 'highlight.js/lib/languages/xml';\nimport css from 'highlight.js/lib/languages/css';\nimport php from 'highlight.js/lib/languages/php';\nimport shell from 'highlight.js/lib/languages/shell';\nimport bash from 'highlight.js/lib/languages/bash';\nimport ruby from 'highlight.js/lib/languages/ruby';\nimport python from 'highlight.js/lib/languages/python';\nimport java from 'highlight.js/lib/languages/java';\nimport c from 'highlight.js/lib/languages/c';\n\n// load css\nimport './highlight-material-palenight.css';\nconst lowlight = createLowlight();\nlowlight.register('javascript', javascript);\nlowlight.register('typescript', typescript);\nlowlight.register('html', html);\nlowlight.register('css', css);\nlowlight.register('php', php);\nlowlight.register('shell', shell);\nlowlight.register('bash', bash);\nlowlight.register('ruby', ruby);\nlowlight.register('python', python);\nlowlight.register('java', java);\nlowlight.register('c', c);\nexport { lowlight };","import { mergeAttributes, Node } from '@tiptap/react';\nexport const InfoBlock = Node.create({\n  name: 'be-info-block',\n  group: 'block',\n  content: 'inline*',\n  defining: true,\n  addOptions() {\n    return {\n      types: ['important', 'warning', 'success'],\n      defaultType: 'success'\n    };\n  },\n  addAttributes() {\n    return {\n      type: {\n        default: this.options.defaultType,\n        parseHTML: element => {\n          for (const type of this.options.types) {\n            if (element.classList.contains(type)) {\n              return type;\n            }\n          }\n          return this.options.defaultType;\n        },\n        renderHTML: attrs => {\n          return {\n            class: attrs.type\n          };\n        }\n      }\n    };\n  },\n  parseHTML() {\n    return [{\n      tag: 'div',\n      contentElement: 'p',\n      getAttrs: node => node.classList.contains('info-block') && null\n    }];\n  },\n  renderHTML({\n    HTMLAttributes\n  }) {\n    return ['div', mergeAttributes(HTMLAttributes, {\n      class: 'info-block'\n    }), ['div', {\n      class: 'title'\n    }, 'Important:'], ['p', 0]];\n  },\n  addCommands() {\n    return {\n      addInfo: attributes => ({\n        commands\n      }) => {\n        return commands.setNode(this.name, attributes);\n      }\n    };\n  }\n});","import { EditorContent, useEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport { Underline } from '@tiptap/extension-underline';\nimport { Link as LinkExtension } from '@tiptap/extension-link';\nimport Image from '@tiptap/extension-image';\nimport { useEffect, useRef } from 'react';\nimport { Superscript } from '@tiptap/extension-superscript';\nimport { Subscript } from '@tiptap/extension-subscript';\nimport { Color } from '@tiptap/extension-color';\nimport { TextStyle } from '@tiptap/extension-text-style';\nimport { TextAlign } from '@tiptap/extension-text-align';\nimport { CodeBlockLowlight } from '@tiptap/extension-code-block-lowlight';\nimport { BackgroundColor } from '@common/text-editor/extensions/background-color';\nimport { Indent } from '@common/text-editor/extensions/indent';\nimport { Embed } from '@common/text-editor/extensions/embed';\nimport { lowlight } from '@common/text-editor/highlight/lowlight';\nimport { InfoBlock } from '@common/text-editor/extensions/info-block';\nimport { useCallbackRef } from '@ui/utils/hooks/use-callback-ref';\nimport { Extension } from '@tiptap/core';\nexport default function ArticleBodyEditor({\n  initialContent = '',\n  children,\n  onLoad: _onLoad,\n  onCtrlEnter,\n  minHeight = 'min-h-320',\n  autoFocus\n}) {\n  const onLoad = useCallbackRef(_onLoad);\n  const calledOnLoad = useRef(false);\n  const extensions = [StarterKit.configure({\n    codeBlock: false\n  }), Underline, LinkExtension.extend({\n    inclusive: false,\n    validate: {\n      // only linkify links that start with a protocol\n      url: value => /^https?:\\/\\//.test(value)\n    }\n  }), Image, Superscript, Subscript, TextStyle, Color, BackgroundColor, Indent, CodeBlockLowlight.configure({\n    lowlight\n  }), TextAlign.configure({\n    types: ['heading', 'paragraph']\n  }), InfoBlock, Embed];\n  if (onCtrlEnter) {\n    extensions.push(Extension.create({\n      addKeyboardShortcuts: () => ({\n        'Cmd-Enter'() {\n          onCtrlEnter();\n          return true;\n        },\n        'Ctrl-Enter'() {\n          onCtrlEnter();\n          return true;\n        }\n      })\n    }));\n  }\n  const editor = useEditor({\n    extensions,\n    onFocus: () => {},\n    autofocus: autoFocus,\n    content: initialContent\n  });\n\n  // destroy editor\n  useEffect(() => {\n    if (editor) {\n      return () => editor.destroy();\n    }\n  }, [editor]);\n  if (!editor) {\n    return null;\n  }\n  if (editor && onLoad && !calledOnLoad.current) {\n    onLoad(editor);\n    calledOnLoad.current = true;\n  }\n  return children(<EditorContent className={minHeight} editor={editor} />, editor);\n}"],"names":["BackgroundColor","Extension","element","attributes","chain","backgroundColor","Indent","level","setNodeIndentMarkup","tr","pos","delta","node","_a","nextLevel","minLevel","maxLevel","indent","oldIndent","currentAttrs","nodeAttrs","updateIndentLevel","doc","selection","TextSelection","AllSelection","from","to","applyIndent","direction","state","dispatch","editor","Embed","Node","HTMLAttributes","mergeAttributes","commands","options","lowlight","createLowlight","javascript","typescript","html","css","php","shell","bash","ruby","python","java","c","InfoBlock","type","attrs","ArticleBodyEditor","initialContent","children","_onLoad","onCtrlEnter","minHeight","autoFocus","onLoad","useCallbackRef","calledOnLoad","useRef","extensions","StarterKit","Underline","LinkExtension","value","Image","Superscript","Subscript","TextStyle","Color","CodeBlockLowlight","TextAlign","useEditor","useEffect","jsx","EditorContent"],"mappings":"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"}