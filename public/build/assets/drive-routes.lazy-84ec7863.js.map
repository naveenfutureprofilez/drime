{"version":3,"file":"drive-routes.lazy-84ec7863.js","sources":["../../../common/foundation/resources/client/ui/library/progress/meter.jsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.jsx","../../../common/foundation/resources/client/workspace/requests/create-workspace.jsx","../../../common/foundation/resources/client/workspace/new-workspace-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/workspace-with-members.jsx","../../../common/foundation/resources/client/workspace/requests/invite-members.jsx","../../../common/foundation/resources/client/workspace/requests/resend-invite.jsx","../../../common/foundation/resources/client/workspace/requests/change-role.jsx","../../../common/foundation/resources/client/workspace/requests/remove-member.jsx","../../../common/foundation/resources/client/workspace/leave-workspace-confirmation.jsx","../../../common/foundation/resources/client/ui/library/utils/string/is-email.jsx","../../../common/foundation/resources/client/workspace/workspace-members-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/update-workspace.jsx","../../../common/foundation/resources/client/workspace/rename-workspace-dialog.jsx","../../../common/foundation/resources/client/workspace/requests/delete-workspace.jsx","../../../common/foundation/resources/client/billing/upgrade/policy-fail-message.jsx","../../../common/foundation/resources/client/workspace/workspace-selector.jsx","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.jsx","../../../resources/client/drive/menu-positions.jsx","../../../resources/client/drive/files/queries/use-folders.jsx","../../../resources/client/drive/files/queries/use-move-entries.jsx","../../../resources/client/drive/files/utils/can-move-entries-into.jsx","../../../resources/client/drive/files/use-folder-drop-action.jsx","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.jsx","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-context.jsx","../../../common/foundation/resources/client/ui/library/tree/render-tree.jsx","../../../common/foundation/resources/client/ui/library/tree/tree.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-label.jsx","../../../common/foundation/resources/client/ui/library/tree/tree-item.jsx","../../../resources/client/drive/layout/sidebar/folder-tree.jsx","../../../resources/client/drive/files/queries/use-delete-entries.jsx","../../../resources/client/drive/layout/sidebar/sidebar-menu.jsx","../../../resources/client/drive/layout/create-new-button.jsx","../../../resources/client/drive/layout/sidebar/sidebar.jsx","../../../resources/client/drive/files/queries/use-paginated-entries.jsx","../../../resources/client/drive/search/drive-search-filters.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-layout-context.jsx","../../../resources/client/drive/search/search-filter-list.jsx","../../../common/foundation/resources/client/ui/library/interactions/utils/restrict-resizable-within-boundary.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selectable.jsx","../../../common/foundation/resources/client/ui/library/interactions/utils/rects-intersect.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/mouse-selection/use-mouse-selection-box.jsx","../../../resources/client/drive/shareable-link/queries/create-shareable-link.jsx","../../../resources/client/drive/files/queries/use-add-star-to-entries.jsx","../../../resources/client/drive/files/queries/use-remove-star-from-entries.jsx","../../../resources/client/drive/files/queries/use-duplicate-entries.jsx","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.jsx","../../../resources/client/drive/files/queries/use-restore-entries.jsx","../../../resources/client/drive/entry-actions/use-entry-actions.jsx","../../../resources/client/drive/entry-actions/use-drive-page-actions.jsx","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.jsx","../../../resources/client/drive/files/queries/use-entries.jsx","../../../resources/client/drive/files/use-selected-entries.jsx","../../../resources/client/drive/entry-actions/entry-action-list.jsx","../../../resources/client/drive/files/drive-context-menu.jsx","../../../common/foundation/resources/client/ui/library/utils/hooks/is-touch-device.jsx","../../../resources/client/drive/file-view/use-file-view-dnd.jsx","../../../resources/client/drive/file-view/file-table/file-table-row.jsx","../../../resources/client/drive/file-view/use-view-item-action-handler.jsx","../../../resources/client/drive/file-view/file-table/file-table-columns.jsx","../../../resources/client/drive/file-view/file-table/file-table.jsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.jsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.jsx","../../../resources/client/drive/file-view/file-grid/file-grid.jsx","../../../resources/client/drive/layout/sorting/available-sorts.jsx","../../../resources/client/drive/layout/sorting/entries-sort-button.jsx","../../../resources/client/drive/layout/sorting/drive-sort-button.jsx","../../../resources/client/drive/files/queries/use-folder-path.jsx","../../../resources/client/drive/page-breadcrumbs.jsx","../../../common/foundation/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.jsx","../../../resources/client/drive/drop-target-mask.jsx","../../../resources/client/drive/file-view/file-view.jsx","../../../common/foundation/resources/client/uploads/uploader/upload-analytics-utils.jsx","../../../common/foundation/resources/client/uploads/uploader/use-upload-analytics.jsx","../../../resources/client/drive/uploading/upload-queue-item.jsx","../../../resources/client/drive/uploading/upload-queue.jsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.jsx","../../../common/foundation/resources/client/tags/use-taggable-tags.jsx","../../../common/foundation/resources/client/tags/use-detach-tag-from-taggables.jsx","../../../common/foundation/resources/client/tags/use-tags.jsx","../../../common/foundation/resources/client/tags/use-attach-tag-to-taggables.jsx","../../../common/foundation/resources/client/tags/manage-tags-dialog.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-tags.jsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.jsx","../../../resources/client/drive/details-sidebar/details-sidebar.jsx","../../../resources/client/drive/files/queries/use-rename-entry.jsx","../../../resources/client/drive/files/dialogs/rename-entry-dialog.jsx","../../../resources/client/drive/files/queries/create-folder.jsx","../../../resources/client/drive/files/dialogs/new-folder-dialog.jsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.jsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.jsx","../../../resources/client/drive/files/drive-entry.jsx","../../../resources/client/drive/share-dialog/permission-selector.jsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.jsx","../../../resources/client/drive/share-dialog/member-list.jsx","../../../resources/client/drive/share-dialog/share-panel.jsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.jsx","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.jsx","../../../common/foundation/resources/client/ui/library/utils/string/random-string.jsx","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.jsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.jsx","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.jsx","../../../resources/client/drive/share-dialog/share-dialog.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.jsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.jsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.jsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.jsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.jsx","../../../resources/client/drive/search/navbar-search.jsx","../../../common/foundation/resources/client/ui/library/interactions/dnd/use-drag-monitor.jsx","../../../resources/client/drive/file-view/entry-drag-preview.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-content-header.jsx","../../../resources/client/drive/layout/drive-content-header.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-sidenav.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-navbar.jsx","../../../common/foundation/resources/client/ui/library/utils/hooks/use-block-body-overflow.jsx","../../../common/foundation/resources/client/ui/dashboard-layout/dashboard-layout.jsx","../../../resources/client/drive/layout/drive-layout.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.jsx","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.jsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.jsx"],"sourcesContent":["import React from 'react';\nimport { ProgressBarBase } from '@ui/progress/progress-bar-base';\nexport function Meter(props) {\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\n}","import React from 'react';\nimport { useStorageSummary } from './storage-summary';\nimport { StorageIcon } from '@ui/icons/material/Storage';\nimport { Meter } from '@ui/progress/meter';\nimport { Trans } from '@ui/i18n/trans';\nimport clsx from 'clsx';\nexport function StorageMeter() {\n  const {\n    isLoading,\n    data\n  } = useStorageSummary();\n\n  // prevent translation placeholders from showing if summary is not loaded yet\n  const label = <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\n      <Trans message=\":used of :available used\" values={{\n      used: data?.usedFormatted,\n      available: data?.availableFormatted\n    }} />\n    </span>;\n  return <div className=\"mt-24 flex items-start gap-16 border-t pl-24 pt-24\">\n      <StorageIcon className=\"-mt-4 icon-md\" />\n      <Meter className=\"max-w-144 flex-auto\" size=\"xs\" value={data?.percentage} label={label} showValueLabel={false} labelPosition=\"bottom\" />\n    </div>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { onFormQueryError } from '../../errors/on-form-query-error';\nimport { message } from '@ui/i18n/message';\nexport function useCreateWorkspace(form) {\n  return useMutation({\n    mutationFn: props => createWorkspace(props),\n    onSuccess: () => {\n      toast(message('Created workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}\nfunction createWorkspace(props) {\n  return apiClient.post('workspace', props).then(r => r.data);\n}","import { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Form } from '@ui/forms/form';\nimport { Button } from '@ui/buttons/button';\nimport { useCreateWorkspace } from './requests/create-workspace';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nexport function NewWorkspaceDialog() {\n  const form = useForm();\n  const {\n    formId,\n    close\n  } = useDialogContext();\n  const createWorkspace = useCreateWorkspace(form);\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Create workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form form={form} id={formId} onSubmit={() => {\n        createWorkspace.mutate(form.getValues(), {\n          onSuccess: response => {\n            close(response.workspace.id);\n          }\n        });\n      }}>\n          <FormTextField name=\"name\" autoFocus label={<Trans message=\"Workspace name\" />} minLength={3} required />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId} disabled={createWorkspace.isPending}>\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { apiClient } from '../../http/query-client';\nfunction fetchWorkspaceWithMembers(workspaceId) {\n  return apiClient.get(`workspace/${workspaceId}`).then(response => response.data);\n}\nexport function useWorkspaceWithMembers(workspaceId) {\n  return useQuery({\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction InviteMembers({\n  workspaceId,\n  ...other\n}) {\n  return apiClient.post(`workspace/${workspaceId}/invite`, other).then(r => r.data);\n}\nexport function useInviteMembers() {\n  return useMutation({\n    mutationFn: props => InviteMembers(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient } from '../../http/query-client';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction ResendInvite({\n  workspaceId,\n  inviteId,\n  ...other\n}) {\n  return apiClient.post(`workspace/${workspaceId}/${inviteId}/resend`, other).then(r => r.data);\n}\nexport function useResendInvite() {\n  return useMutation({\n    mutationFn: props => ResendInvite(props),\n    onSuccess: () => {\n      toast('Invite sent');\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction ChangeRole({\n  workspaceId,\n  member,\n  ...other\n}) {\n  const modelType = member.model_type;\n  const memberId = member.model_type === 'invite' ? member.id : member.member_id;\n  return apiClient.post(`workspace/${workspaceId}/${modelType}/${memberId}/change-role`, other).then(r => r.data);\n}\nexport function useChangeRole() {\n  return useMutation({\n    mutationFn: props => ChangeRole(props),\n    onSuccess: (response, props) => {\n      toast(message('Role changed'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { useAuth } from '../../auth/use-auth';\nimport { useActiveWorkspaceId } from '../active-workspace-id-context';\nimport { PersonalWorkspace } from '../user-workspaces';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction removeMember({\n  workspaceId,\n  memberId,\n  memberType\n}) {\n  const endpoint = memberType === 'invite' ? `workspace/invite/${memberId}` : `workspace/${workspaceId}/member/${memberId}`;\n  return apiClient.delete(endpoint).then(r => r.data);\n}\nexport function useRemoveMember() {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const {\n    user\n  } = useAuth();\n  return useMutation({\n    mutationFn: props => removeMember(props),\n    onSuccess: (response, props) => {\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId)\n      });\n\n      // if user left workspace that is currently active, switch to personal workspace\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nexport function LeaveWorkspaceConfirmation({\n  onConfirm,\n  isLoading\n}) {\n  return <ConfirmationDialog isDanger title={<Trans message=\"Leave workspace\" />} isLoading={isLoading} onConfirm={onConfirm} body={<div>\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\n          </div>\n        </div>} confirm={<Trans message=\"Leave\" />} />;\n}","const matcher = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nexport function isEmail(string) {\n  if (!string) return false;\n  if (string.length > 320) return false;\n  return matcher.test(string);\n}","import { useEffect, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { useWorkspaceWithMembers } from './requests/workspace-with-members';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { GroupIcon } from '@ui/icons/material/Group';\nimport { useAuth } from '../auth/use-auth';\nimport { ChipField } from '@ui/forms/input-field/chip-field/chip-field';\nimport { useValueLists } from '../http/value-lists';\nimport { Button } from '@ui/buttons/button';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { useInviteMembers } from './requests/invite-members';\nimport { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { useResendInvite } from './requests/resend-invite';\nimport { useChangeRole } from './requests/change-role';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useRemoveMember } from './requests/remove-member';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { ExitToAppIcon } from '@ui/icons/material/ExitToApp';\nimport { toast } from '@ui/toast/toast';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { message } from '@ui/i18n/message';\nimport { LeaveWorkspaceConfirmation } from './leave-workspace-confirmation';\nimport { isEmail } from '@ui/utils/string/is-email';\nimport { Avatar } from '@ui/avatar/avatar';\nexport function WorkspaceMembersDialog({\n  workspace\n}) {\n  const {\n    data,\n    isLoading\n  } = useWorkspaceWithMembers(workspace.id);\n  return <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Manage workspace members\" />\n      </DialogHeader>\n      <DialogBody>\n        {isLoading ? <div className=\"flex min-h-[238px] items-center justify-center\">\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\n          </div> : <Manager workspace={data.workspace} />}\n      </DialogBody>\n    </Dialog>;\n}\nfunction Manager({\n  workspace\n}) {\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  const members = [...(workspace.members || []), ...(workspace.invites || [])];\n  const shouldHideOtherMembers = !can.update && !can.delete;\n  return <div>\n      {can.invite && <InviteChipField workspace={workspace} />}\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\n        <GroupIcon className=\"icon-sm\" />\n        <Trans message=\"Members of `:workspace`\" values={{\n        workspace: workspace.name\n      }} />\n      </div>\n      <AnimatePresence initial={false}>\n        {members.map(member => {\n        if (shouldHideOtherMembers && member.id !== user?.id) {\n          return null;\n        }\n        return <MemberListItem key={`${member.model_type}.${member.id}`} workspace={workspace} member={member} />;\n      })}\n        {shouldHideOtherMembers && <div className=\"text-muted\">\n            <Trans message=\"And [one one other member|:count other members]\" values={{\n          count: members.length\n        }} />\n          </div>}\n      </AnimatePresence>\n    </div>;\n}\nfunction MemberListItem({\n  workspace,\n  member\n}) {\n  return <m.div initial={{\n    x: '-100%',\n    opacity: 0\n  }} animate={{\n    x: 0,\n    opacity: 1\n  }} exit={{\n    x: '100%',\n    opacity: 0\n  }} transition={{\n    type: 'tween',\n    duration: 0.125\n  }} className=\"mb-20 flex items-start gap-14 text-sm\" key={`${member.model_type}.${member.id}`}>\n      <Avatar className=\"flex-shrink-0\" size=\"lg\" circle label={member.name} src={member.image} fallback=\"initials\" />\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\n          <div className=\"flex items-center justify-start gap-6\">\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n              {member.name}\n            </div>\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\n          </div>\n          <div className=\"text-muted\">{member.email}</div>\n        </div>\n        <MemberActions workspace={workspace} member={member} />\n      </div>\n    </m.div>;\n}\nfunction usePermissions(workspace) {\n  const {\n    user: authUser\n  } = useAuth();\n  const response = {\n    update: false,\n    invite: false,\n    delete: false\n  };\n  const permissions = ['update', 'invite', 'delete'];\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\n  if (authMember) {\n    permissions.forEach(permission => {\n      response[permission] = authMember.is_owner || !!authMember.permissions?.find(p => p.name === `workspace_members.${permission}`);\n    });\n  }\n  return response;\n}\nfunction MemberActions({\n  workspace,\n  member\n}) {\n  const [selectedRole, setSelectedRole] = useState(member.role_id);\n  const changeRole = useChangeRole();\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  const isOwner = member.model_type === 'member' && member.is_owner;\n  const isCurrentUser = member.model_type === 'member' && user?.id === member.id;\n  const roleSelector = !can.update || isOwner || isCurrentUser ? <div className=\"ml-auto text-muted first:capitalize\">\n        <Trans message={member.role_name} />\n      </div> : <RoleMenuTrigger className=\"ml-auto flex-shrink-0\" size=\"xs\" value={selectedRole} isDisabled={changeRole.isPending} onChange={roleId => {\n    setSelectedRole(roleId);\n    changeRole.mutate({\n      roleId,\n      workspaceId: workspace.id,\n      member\n    });\n  }} />;\n  return <>\n      {roleSelector}\n      {!isOwner && (isCurrentUser || can.delete) && <RemoveMemberButton type={isCurrentUser ? 'leave' : 'remove'} member={member} workspace={workspace} />}\n    </>;\n}\nfunction InviteChipField({\n  workspace\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [chips, setChips] = useState([]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const displayWith = chip => chip.description || chip.name;\n  const [selectedRole, setSelectedRole] = useState();\n  const inviteMembers = useInviteMembers();\n  const {\n    data\n  } = useValueLists(['workspaceRoles']);\n  useEffect(() => {\n    if (!selectedRole && data?.workspaceRoles?.length) {\n      setSelectedRole(data.workspaceRoles[0].id);\n    }\n  }, [data, selectedRole]);\n  return <div className=\"mb-30\">\n      <ChipField value={chips} onChange={setChips} displayWith={displayWith} validateWith={chip => {\n      const invalid = !isEmail(chip.description);\n      return {\n        ...chip,\n        invalid,\n        errorMessage: invalid ? trans({\n          message: 'Not a valid email'\n        }) : undefined\n      };\n    }} placeholder={trans({\n      message: 'Enter email addresses'\n    })} label={<Trans message=\"Invite people\" />} />\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\n        {chips.length && selectedRole ? <Button variant=\"flat\" color=\"primary\" size=\"sm\" disabled={inviteMembers.isPending || !allEmailsValid} onClick={() => {\n        inviteMembers.mutate({\n          emails: chips.map(c => displayWith(c)),\n          roleId: selectedRole,\n          workspaceId: workspace.id\n        }, {\n          onSuccess: () => {\n            setChips([]);\n          }\n        });\n      }}>\n            <Trans message=\"Invite\" />\n          </Button> : null}\n      </div>\n    </div>;\n}\nfunction RemoveMemberButton({\n  member,\n  workspace,\n  type\n}) {\n  const removeMember = useRemoveMember();\n  const {\n    close\n  } = useDialogContext();\n  return <DialogTrigger type=\"modal\" onClose={isConfirmed => {\n    if (isConfirmed) {\n      removeMember.mutate({\n        workspaceId: workspace.id,\n        memberId: member.id,\n        memberType: member.model_type\n      });\n      if (type === 'leave') {\n        close();\n        toast(message('Left workspace'));\n      }\n    }\n  }}>\n      <IconButton size=\"md\" className=\"flex-shrink-0 text-muted\" disabled={removeMember.isPending}>\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\n      </IconButton>\n      {type === 'leave' ? <LeaveWorkspaceConfirmation /> : <RemoveMemberConfirmation member={member} />}\n    </DialogTrigger>;\n}\nfunction RemoveMemberConfirmation({\n  member\n}) {\n  return <ConfirmationDialog isDanger title={<Trans message=\"Remove member\" />} body={<div>\n          <Trans message=\"Are you sure you want to remove `:name`?\" values={{\n      name: member.name\n    }} />\n          <div className=\"mt-8 font-semibold\">\n            <Trans message=\"All workspace resources created by `:name` will be transferred to workspace owner.\" values={{\n        name: member.name\n      }} />\n          </div>\n        </div>} confirm={<Trans message=\"Remove\" />} />;\n}\nfunction RoleMenuTrigger({\n  value,\n  onChange,\n  size = 'xs',\n  className,\n  isDisabled\n}) {\n  const {\n    data\n  } = useValueLists(['workspaceRoles']);\n  const role = data?.workspaceRoles?.find(r => r.id === value);\n  if (!value || !role || !data?.workspaceRoles) return null;\n  return <MenuTrigger selectionMode=\"single\" selectedValue={value} onSelectionChange={newValue => {\n    onChange(newValue);\n  }}>\n      <Button className={className} size={size} variant=\"flat\" color=\"chip\" disabled={isDisabled} endIcon={<ArrowDropDownIcon />}>\n        <Trans message={role.name} />\n      </Button>\n      <Menu>\n        {data.workspaceRoles.map(r => <MenuItem value={r.id} key={r.id} description={r.description}>\n            <Trans message={r.name} />\n          </MenuItem>)}\n      </Menu>\n    </MenuTrigger>;\n}\nfunction MemberDisplayNameAppend({\n  member,\n  workspace\n}) {\n  const {\n    user\n  } = useAuth();\n  const can = usePermissions(workspace);\n  if (user?.id === member.id) {\n    return <div className=\"font-medium\">\n        (<Trans message=\"You\" />)\n      </div>;\n  }\n  if (member.model_type === 'invite') {\n    return <div className=\"flex items-center gap-4\">\n        <div>·</div>\n        <div className=\"font-medium\">\n          <Trans message=\"Invited\" />\n        </div>\n        {can.invite ? <>\n            <div>·</div>\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\n          </> : null}\n      </div>;\n  }\n  return null;\n}\nfunction ResendInviteDialogTrigger({\n  member,\n  workspace\n}) {\n  const resendInvite = useResendInvite();\n  return <DialogTrigger type=\"modal\" onClose={isConfirmed => {\n    if (isConfirmed) {\n      resendInvite.mutate({\n        workspaceId: workspace.id,\n        inviteId: member.id\n      });\n    }\n  }}>\n      <Button variant=\"link\" size=\"sm\" color=\"primary\" disabled={resendInvite.isPending}>\n        <Trans message=\"Resend invite\" />\n      </Button>\n      <ConfirmationDialog title={<Trans message=\"Resend invite\" />} body={<Trans message=\"Are you sure you want to send this invite again?\" />} confirm={<Trans message=\"Send\" />} />\n    </DialogTrigger>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { onFormQueryError } from '../../errors/on-form-query-error';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { message } from '@ui/i18n/message';\nfunction updateWorkspace({\n  id,\n  ...props\n}) {\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\n}\nexport function useUpdateWorkspace(form) {\n  const {\n    close\n  } = useDialogContext();\n  return useMutation({\n    mutationFn: props => updateWorkspace(props),\n    onSuccess: response => {\n      close();\n      toast(message('Updated workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(response.workspace.id)\n      });\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}","import { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Form } from '@ui/forms/form';\nimport { Button } from '@ui/buttons/button';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { useUpdateWorkspace } from './requests/update-workspace';\nimport { Trans } from '@ui/i18n/trans';\nexport function RenameWorkspaceDialog({\n  workspace\n}) {\n  const form = useForm({\n    defaultValues: {\n      id: workspace.id,\n      name: workspace.name\n    }\n  });\n  const {\n    formId,\n    close\n  } = useDialogContext();\n  const updateWorkspace = useUpdateWorkspace(form);\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename workspace\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form form={form} id={formId} onSubmit={() => {\n        updateWorkspace.mutate(form.getValues());\n      }}>\n          <FormTextField name=\"name\" autoFocus label={<Trans message=\"Name\" />} minLength={3} required />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"text\" onClick={close}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId} disabled={updateWorkspace.isPending}>\n          <Trans message=\"Rename\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { apiClient, queryClient } from '../../http/query-client';\nimport { WorkspaceQueryKeys } from './workspace-query-keys';\nimport { useActiveWorkspaceId } from '../active-workspace-id-context';\nimport { PersonalWorkspace } from '../user-workspaces';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '../../http/show-http-error-toast';\nfunction deleteWorkspace({\n  id\n}) {\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\n}\nexport function useDeleteWorkspace() {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  return useMutation({\n    mutationFn: props => deleteWorkspace(props),\n    onSuccess: (r, payload) => {\n      toast(message('Deleted workspace'));\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces\n      });\n      queryClient.invalidateQueries({\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id)\n      });\n\n      // if user deleted workspace that is currently active, switch to personal workspace\n      if (workspaceId === payload.id) {\n        setWorkspaceId(PersonalWorkspace.id);\n      }\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}","import { Trans } from '@ui/i18n/trans';\nimport { Link } from 'react-router';\nimport { LinkStyle } from '@ui/buttons/external-link';\nimport { SectionHelper } from '@common/ui/other/section-helper';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function PolicyFailMessage({\n  resourceName,\n  className,\n  size = 'md',\n  color = 'bgAlt',\n  reason = 'overQuota',\n  ...other\n}) {\n  const message = other.message ?? <MessageText resourceName={resourceName} reason={reason} />;\n  return <SectionHelper color={color} size={size} className={className} description={message} />;\n}\nfunction MessageText({\n  resourceName,\n  reason\n}) {\n  const {\n    billing\n  } = useSettings();\n  if (reason === 'noWorkspacePermission') {\n    return <Trans message=\"You can't create new :name in this workspace.\" values={{\n      name: resourceName\n    }} />;\n  }\n  const upgradeMsgValues = {\n    name: resourceName,\n    a: text => <Link className={LinkStyle} to=\"/pricing\">\n        {text}\n      </Link>\n  };\n  if (reason === 'overQuota' && billing.enable) {\n    return <Trans message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\" values={upgradeMsgValues} />;\n  }\n  if (reason === 'noPermission' && billing.enable) {\n    return <Trans message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\" values={upgradeMsgValues} />;\n  }\n  return <Trans message=\"You don't have permissions to create :name.\" />;\n}","import clsx from 'clsx';\nimport { cloneElement, forwardRef, Fragment, useEffect, useState } from 'react';\nimport { ButtonBase } from '@ui/buttons/button-base';\nimport { PersonalWorkspace, useUserWorkspaces } from './user-workspaces';\nimport { UnfoldMoreIcon } from '@ui/icons/material/UnfoldMore';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { NewWorkspaceDialog } from './new-workspace-dialog';\nimport { WorkspaceMembersDialog } from './workspace-members-dialog';\nimport { useActiveWorkspace, useActiveWorkspaceId } from './active-workspace-id-context';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Button } from '@ui/buttons/button';\nimport { CheckIcon } from '@ui/icons/material/Check';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { KeyboardArrowDownIcon } from '@ui/icons/material/KeyboardArrowDown';\nimport { PersonAddIcon } from '@ui/icons/material/PersonAdd';\nimport { DeleteIcon } from '@ui/icons/material/Delete';\nimport { ExitToAppIcon } from '@ui/icons/material/ExitToApp';\nimport { EditIcon } from '@ui/icons/material/Edit';\nimport { RenameWorkspaceDialog } from './rename-workspace-dialog';\nimport { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { useDeleteWorkspace } from './requests/delete-workspace';\nimport { useRemoveMember } from './requests/remove-member';\nimport { useAuth } from '../auth/use-auth';\nimport { Trans } from '@ui/i18n/trans';\nimport { LeaveWorkspaceConfirmation } from './leave-workspace-confirmation';\nimport { openDialog } from '@ui/overlays/store/dialog-store';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { PolicyFailMessage } from '@common/billing/upgrade/policy-fail-message';\nexport function WorkspaceSelector({\n  onChange,\n  className,\n  trigger,\n  placement = 'top'\n}) {\n  const {\n    data: workspaces,\n    isFetched,\n    isFetching\n  } = useUserWorkspaces();\n  const {\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const activeWorkspace = useActiveWorkspace();\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\n  const {\n    hasPermission\n  } = useAuth();\n\n  // if user no longer has access to previously selected workspace, select personal one\n  useEffect(() => {\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\n    if (isFetched && !isFetching && !activeWorkspace) {\n      setWorkspaceId(PersonalWorkspace.id);\n    }\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\n  if (\n  // if we have a custom trigger, leave rendering up to the customer trigger\n  !trigger && (!activeWorkspace || !hasPermission('workspaces.create') && workspaces?.length === 1)) {\n    return null;\n  }\n  return <Fragment>\n      <DialogTrigger type=\"popover\" placement={placement} isOpen={selectorIsOpen} onClose={() => {\n      setSelectorIsOpen(false);\n    }}>\n        {trigger ? cloneElement(trigger, {\n        onClick: () => setSelectorIsOpen(!selectorIsOpen)\n      }) : <DefaultTrigger onClick={() => setSelectorIsOpen(!selectorIsOpen)} workspace={activeWorkspace} className={className} />}\n        <Dialog size=\"min-w-320\">\n          <DialogBody padding=\"p-10\">\n            <div className=\"mb-16 border-b pb-10\">\n              {workspaces?.map(workspace => <WorkspaceItem key={workspace.id} workspace={workspace} setSelectorIsOpen={setSelectorIsOpen} onChange={onChange} />)}\n            </div>\n            <div className=\"mb-4 px-4 text-center\">\n              <CreateWorkspaceButton onClick={() => setSelectorIsOpen(false)} onCreated={id => onChange?.(id)} workspaceCount={workspaces ? workspaces.length - 1 : 0} />\n            </div>\n          </DialogBody>\n        </Dialog>\n      </DialogTrigger>\n    </Fragment>;\n}\nfunction CreateWorkspaceButton({\n  onClick,\n  onCreated,\n  workspaceCount\n}) {\n  const {\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const {\n    checkOverQuotaOrNoPermission\n  } = useAuth();\n  const {\n    overQuotaOrNoPermission\n  } = checkOverQuotaOrNoPermission('workspaces.create', 'count', workspaceCount);\n  return <Fragment>\n      <Button disabled={overQuotaOrNoPermission} onClick={async e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onClick();\n      const workspaceId = await openDialog(NewWorkspaceDialog);\n      if (workspaceId) {\n        setWorkspaceId(workspaceId);\n        onCreated?.(workspaceId);\n      }\n    }} variant=\"outline\" startIcon={<AddIcon />} color=\"primary\" className=\"h-40 w-full\">\n        <Trans message=\"Create new workspace\" />\n      </Button>\n      {overQuotaOrNoPermission && <PolicyFailMessage size=\"sm\" className=\"mt-12 max-w-288\" resourceName={<Trans message=\"worksapces\" />} />}\n    </Fragment>;\n}\nconst DefaultTrigger = forwardRef(({\n  workspace,\n  className,\n  onClick,\n  ...other\n}, ref) => {\n  return <ButtonBase ref={ref} onClick={onClick} className={clsx('flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2', className)} {...other}>\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\n            {workspace.default ? <Trans message={workspace.name} /> : workspace.name}\n          </span>\n          <span className=\"block text-xs text-muted\">\n            {workspace.default ? <Trans message=\"Personal workspace\" /> : <Trans message=\":count members\" values={{\n          count: workspace.members_count\n        }} />}\n          </span>\n        </span>\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\n      </ButtonBase>;\n});\nfunction WorkspaceItem({\n  workspace,\n  onChange,\n  setSelectorIsOpen\n}) {\n  const {\n    workspaceId,\n    setWorkspaceId\n  } = useActiveWorkspaceId();\n  const isActive = workspaceId === workspace.id;\n  return <div onClick={() => {\n    setWorkspaceId(workspace.id);\n    onChange?.(workspace.id);\n    setSelectorIsOpen(false);\n  }} className={clsx('mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left', isActive && 'bg-primary/5', !isActive && 'hover:bg-hover')}>\n      <CheckIcon size=\"sm\" className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')} />\n      <div className=\"flex-auto\">\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\n          {workspace.name}\n        </div>\n        <div className=\"text-sm text-muted\">\n          {workspace.default ? <Trans message=\"Personal workspace\" /> : <Trans message=\":count members\" values={{\n          count: workspace.members_count\n        }} />}\n        </div>\n      </div>\n      {workspace.id !== 0 && <ManageButton setSelectorIsOpen={setSelectorIsOpen} workspace={workspace} onChange={onChange} />}\n    </div>;\n}\nfunction LeaveWorkspaceDialog({\n  workspace,\n  onChange\n}) {\n  const removeMember = useRemoveMember();\n  const {\n    user\n  } = useAuth();\n  const {\n    close\n  } = useDialogContext();\n  return <LeaveWorkspaceConfirmation isLoading={removeMember.isPending} onConfirm={() => {\n    removeMember.mutate({\n      workspaceId: workspace.id,\n      memberId: user.id,\n      memberType: 'member'\n    }, {\n      onSuccess: () => {\n        close();\n        onChange?.(PersonalWorkspace.id);\n      }\n    });\n  }} />;\n}\nfunction DeleteWorkspaceConfirmation({\n  workspace,\n  onChange\n}) {\n  const deleteWorkspace = useDeleteWorkspace();\n  const {\n    close\n  } = useDialogContext();\n  return <ConfirmationDialog isDanger title={<Trans message=\"Delete workspace\" />} body={<Trans message=\"Are you sure you want to delete “:name“?\" values={{\n    name: workspace.name\n  }} />} confirm={<Trans message=\"Delete\" />} isLoading={deleteWorkspace.isPending} onConfirm={() => {\n    deleteWorkspace.mutate({\n      id: workspace.id\n    }, {\n      onSuccess: () => {\n        close();\n        onChange?.(PersonalWorkspace.id);\n      }\n    });\n  }} />;\n}\nfunction ManageButton({\n  setSelectorIsOpen,\n  workspace,\n  onChange\n}) {\n  const {\n    user\n  } = useAuth();\n  return <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\n      <Button onClick={e => {\n      e.preventDefault();\n      e.stopPropagation();\n    }} color=\"primary\" size=\"xs\" variant=\"outline\" endIcon={<KeyboardArrowDownIcon />}>\n        <Trans message=\"Manage\" />\n      </Button>\n      <Menu>\n        <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(WorkspaceMembersDialog, {\n          workspace\n        });\n      }} value=\"workspaceMembers\" startIcon={<PersonAddIcon />}>\n          <Trans message=\"Members\" />\n        </MenuItem>\n        {workspace.owner_id === user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(RenameWorkspaceDialog, {\n          workspace\n        });\n      }} value=\"updateWorkspace\" startIcon={<EditIcon />}>\n            <Trans message=\"Rename\" />\n          </MenuItem>}\n        {workspace.owner_id !== user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(LeaveWorkspaceDialog, {\n          workspace,\n          onChange\n        });\n      }} value=\"leaveWorkspace\" startIcon={<ExitToAppIcon />}>\n            <Trans message=\"Leave\" />\n          </MenuItem>}\n        {workspace.owner_id === user?.id && <MenuItem onClick={e => {\n        e.stopPropagation();\n        openDialog(DeleteWorkspaceConfirmation, {\n          workspace,\n          onChange\n        });\n      }} value=\"deleteWorkspace\" startIcon={<DeleteIcon />}>\n            <Trans message=\"Delete\" />\n          </MenuItem>}\n      </Menu>\n    </MenuTrigger>;\n}","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import { message } from '@ui/i18n/message';\nimport addFilesSvg from './add-files.svg';\nimport timeManagement from './time-management.svg';\nimport fileSearching from './file-searching.svg';\nimport throwAwaySvg from './throw-away.svg';\nimport lovingItSvg from './loving-it.svg';\nimport shareSvg from '../shareable-link/shareable-link-page/folder-preview/share.svg';\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nconst defaultSortDescriptor = {\n  orderBy: 'updated_at',\n  orderDir: 'desc'\n};\nexport function makeAllFilesPage(folder) {\n  return {\n    name: 'allChildren',\n    uniqueId: `${folder.hash}-all`,\n    label: `All files in ${folder.name}`,\n    path: `/drive/folders/${folder.hash}/all`,\n    hasActions: false,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    queryParams: {\n      section: 'allChildren',\n      folderId: folder.hash\n    },\n    folder,\n    noContentMessage: () => ({\n      title: message('No files found'),\n      description: message('This folder and its subfolders contain no files'),\n      image: addFilesSvg\n    })\n  };\n}\n\nexport function makeFolderPage(folder) {\n  return {\n    ...makePartialFolderPage(folder.hash),\n    canUpload: folder.permissions['files.create'] || folder.permissions['files.update'],\n    label: folder.name,\n    folder\n  };\n}\nexport function makePartialFolderPage(hash) {\n  return {\n    name: 'folder',\n    uniqueId: hash,\n    label: '',\n    path: getPathForFolder(hash),\n    hasActions: true,\n    canUpload: false,\n    sortDescriptor: defaultSortDescriptor,\n    isFolderPage: true,\n    noContentMessage: () => ({\n      title: message('Drop files or folders here'),\n      description: message('Or use the \"Upload\" button'),\n      image: addFilesSvg\n    })\n  };\n}\nexport function getPathForFolder(hash) {\n  if (hash === '0') {\n    return '/drive';\n  }\n  return `/drive/folders/${hash}`;\n}\n\n// bootstrap data will always be available at this point\n\nconst rootFolder = getBootstrapData().rootFolder;\nexport const RootFolderPage = {\n  ...makeFolderPage(rootFolder),\n  name: 'home'\n};\nexport const RecentPage = {\n  name: 'recent',\n  uniqueId: 'recent',\n  label: message('Recent'),\n  path: '/drive/recent',\n  disableSort: true,\n  sortDescriptor: {\n    orderBy: 'created_at',\n    orderDir: 'desc'\n  },\n  queryParams: {\n    recentOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('No recent entries'),\n    description: message('You have not uploaded any files or folders yet'),\n    image: timeManagement\n  })\n};\nexport const SearchPage = {\n  name: 'search',\n  uniqueId: 'search',\n  label: message('Search results'),\n  path: '/drive/search',\n  sortDescriptor: defaultSortDescriptor,\n  noContentMessage: isSearchingOrFiltering => {\n    if (isSearchingOrFiltering) {\n      return {\n        title: message('No matching results'),\n        description: message('Try changing your search query or filters'),\n        image: fileSearching\n      };\n    }\n    return {\n      title: message('Begin typing or select a filter to search'),\n      description: message('Search for files, folders and other content'),\n      image: fileSearching\n    };\n  }\n};\nexport const SharesPage = {\n  name: 'sharedWithMe',\n  uniqueId: 'sharedWithMe',\n  label: message('Shared'),\n  path: '/drive/shares',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    sharedOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Shared with me'),\n    description: message('Files and folders other people have shared with you'),\n    image: shareSvg\n  })\n};\nexport const TrashPage = {\n  name: 'trash',\n  uniqueId: 'trash',\n  label: message('Trash'),\n  path: '/drive/trash',\n  sortDescriptor: defaultSortDescriptor,\n  hasActions: true,\n  queryParams: {\n    deletedOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Trash is empty'),\n    description: message('There are no files or folders in your trash currently'),\n    image: throwAwaySvg\n  })\n};\nexport const StarredPage = {\n  name: 'starred',\n  uniqueId: 'starred',\n  label: message('Starred'),\n  path: '/drive/starred',\n  sortDescriptor: defaultSortDescriptor,\n  queryParams: {\n    starredOnly: true\n  },\n  noContentMessage: () => ({\n    title: message('Nothing is starred'),\n    description: message('Add stars to files and folders that you want to easily find later'),\n    image: lovingItSvg\n  })\n};\nexport const DRIVE_PAGES = [RootFolderPage, RecentPage, SearchPage, SharesPage, TrashPage, StarredPage];","export let MenuPositions = /*#__PURE__*/function (MenuPositions) {\n  MenuPositions[\"DriveSidebar\"] = \"drive-sidebar\";\n  return MenuPositions;\n}({});","import { useQuery } from '@tanstack/react-query';\nimport { useAuth } from '@common/auth/use-auth';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nfunction fetchUserFolders(params) {\n  return apiClient.get(`users/${params.userId}/folders`, {\n    params\n  }).then(response => response.data);\n}\nexport function useFolders() {\n  const {\n    user\n  } = useAuth();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = {\n    userId: user.id,\n    workspaceId\n  };\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\n    queryFn: () => fetchUserFolders(params),\n    enabled: !!user\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { RootFolderPage } from '../../drive-page/drive-page';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useMoveEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(message('Moving [one 1 item|other :count items]...', {\n        values: {\n          count: payload.entryIds.length\n        }\n      }), {\n        disableExitAnimation: true\n      });\n      return moveEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message('Moved [one 1 item|other :count items] to \":destination\"', {\n        values: {\n          count: p.entryIds.length,\n          destination: (r.destination || RootFolderPage.folder).name\n        }\n      }), {\n        disableEnterAnimation: true\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not move items'), null, {\n      disableEnterAnimation: true\n    })\n  });\n}\nfunction moveEntries(payload) {\n  // backend expects null for root folder, it might be zero or empty string on frontend\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\n  return apiClient.post('file-entries/move', payload).then(response => response.data);\n}","export function canMoveEntriesInto(targets, destination) {\n  if (destination.type !== 'folder') return false;\n\n  // prevent moving if user does not have permissions\n  if (!destination.permissions['files.update'] && !targets.every(t => t.permissions['files.update'])) {\n    return false;\n  }\n\n  // should not be able to move folder into its\n  // own child or folder it's already in\n  return targets.every(target => {\n    if (!target) return false;\n    // entry is already in this folder\n    if (destination.id === target.parent_id ||\n    // root folder check\n    !target.parent_id && destination.id === 0) {\n      return false;\n    }\n    return !destinationIsInTarget(destination, target);\n  });\n}\nfunction destinationIsInTarget(destination, target) {\n  const destinationPath = (destination.path || '').split('/');\n  const targetPath = (target.path || '').split('/');\n  return targetPath.every((part, index) => {\n    return destinationPath[index] === part;\n  });\n}","import { useMoveEntries } from './queries/use-move-entries';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { canMoveEntriesInto } from './utils/can-move-entries-into';\nimport { driveState } from '@app/drive/drive-store';\nexport function useFolderDropAction(folder) {\n  const moveEntries = useMoveEntries();\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const onDrop = async target => {\n    if (folder.type !== 'folder') return;\n    if (target.type === 'nativeFile') {\n      uploadFiles(await target.getData(), {\n        metadata: {\n          parentId: folder.id\n        }\n      });\n    } else if (target.type === 'fileEntry') {\n      const entries = target.getData();\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\n        moveEntries.mutate({\n          destinationId: folder.id,\n          entryIds: entries.map(e => e.id)\n        });\n        driveState().deselectEntries('all');\n      }\n    }\n  };\n  return {\n    onDrop\n  };\n}\nexport function folderAcceptsDrop(target, destination) {\n  if (target.type === 'fileEntry') {\n    const entries = target.getData();\n    return canMoveEntriesInto(entries, destination);\n  }\n  return true;\n}","export function makeFolderTreeDragId(entry) {\n  return `${entry.id}-tree`;\n}\nexport function isFolderTreeDragId(id) {\n  return `${id}`.endsWith('-tree');\n}","import { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { driveState } from '../../drive-store';\nimport { useState } from 'react';\nimport { folderAcceptsDrop, useFolderDropAction } from '../../files/use-folder-drop-action';\nimport { makeFolderTreeDragId } from './folder-tree-drag-id';\nexport function useSidebarTreeDropTarget({\n  folder,\n  ref\n}) {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const {\n    onDrop\n  } = useFolderDropAction(folder);\n  const dropProps = useDroppable({\n    id: makeFolderTreeDragId(folder),\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\n    onDragEnter: draggable => {\n      if (folderAcceptsDrop(draggable, folder)) {\n        setIsDragOver(true);\n      }\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDropActivate: () => {\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\n        driveState().setSidebarExpandedKeys([...driveState().sidebarExpandedKeys, folder.id]);\n      }\n    },\n    onDrop\n  });\n  return {\n    ...dropProps,\n    isDragOver\n  };\n}","import { createContext } from 'react';\nexport const TreeContext = createContext(null);","import { cloneElement } from 'react';\nexport function renderTree({\n  nodes,\n  itemRenderer,\n  parentNode,\n  level\n}) {\n  return nodes.map((node, index) => {\n    return cloneElement(itemRenderer(node), {\n      level: level == undefined ? 0 : level + 1,\n      index,\n      node,\n      parentNode,\n      key: node.id,\n      itemRenderer\n    });\n  });\n}","import React, { useState } from 'react';\nimport { useControlledState } from '@react-stately/utils';\nimport { FocusScope } from '@react-aria/focus';\nimport { TreeContext } from './tree-context';\nimport { renderTree } from './render-tree';\nexport function Tree({\n  children,\n  nodes,\n  ...props\n}) {\n  const [expandedKeys, setExpandedKeys] = useControlledState(props.expandedKeys, props.defaultSelectedKeys, props.onExpandedKeysChange);\n  const [selectedKeys, setSelectedKeys] = useControlledState(props.selectedKeys, props.defaultSelectedKeys, props.onSelectedKeysChange);\n  const [focusedNode, setFocusedNode] = useState();\n  const value = {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys,\n    focusedNode,\n    setFocusedNode\n  };\n  return <TreeContext.Provider value={value}>\n      <FocusScope>\n        <TreeRoot nodes={nodes} itemRenderer={children} />\n      </FocusScope>\n    </TreeContext.Provider>;\n}\nfunction TreeRoot(props) {\n  return <ul className=\"overflow-hidden text-sm\" role=\"tree\">\n      {renderTree(props)}\n    </ul>;\n}","import React, { forwardRef, useContext } from 'react';\nimport { TreeContext } from './tree-context';\nimport clsx from 'clsx';\nimport { ArrowRightIcon } from '@ui/icons/material/ArrowRight';\nexport const TreeLabel = forwardRef(({\n  icon,\n  label,\n  level = 0,\n  node,\n  className,\n  ...domProps\n}, ref) => {\n  const {\n    expandedKeys,\n    setExpandedKeys,\n    selectedKeys,\n    setSelectedKeys\n  } = useContext(TreeContext);\n  const isExpanded = expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const handleExpandIconClick = e => {\n    e.stopPropagation();\n    const index = expandedKeys.indexOf(node.id);\n    const newExpandedKeys = [...expandedKeys];\n    if (index > -1) {\n      newExpandedKeys.splice(index, 1);\n    } else {\n      newExpandedKeys.push(node.id);\n    }\n    setExpandedKeys(newExpandedKeys);\n  };\n  return <div {...domProps} ref={ref} onClick={e => {\n    e.stopPropagation();\n    setSelectedKeys([node.id]);\n  }} className={clsx('header tree-label flex cursor-pointer flex-nowrap items-center gap-4 overflow-hidden text-ellipsis whitespace-nowrap rounded py-6', className, isSelected && 'bg-primary/selected font-bold text-primary', !isSelected && 'hover:bg-hover')}>\n        {level > 0 && <div className=\"flex\">\n            {Array.from({\n        length: level\n      }).map((_, i) => {\n        return <div key={i} className=\"h-24 w-24\" />;\n      })}\n          </div>}\n        <div onClick={handleExpandIconClick}>\n          <ArrowRightIcon className={clsx('cursor-default transition-transform icon-sm', isExpanded && 'rotate-90')} />\n        </div>\n        {icon}\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\n      </div>;\n});\nTreeLabel.displayName = 'TreeLabel';","import React, { useContext, useEffect } from 'react';\nimport { useFocusManager } from '@react-aria/focus';\nimport { TreeContext } from './tree-context';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nimport clsx from 'clsx';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { renderTree } from './render-tree';\nimport { TreeLabel } from './tree-label';\nexport function TreeItem({\n  label,\n  icon,\n  node,\n  level,\n  index,\n  itemRenderer,\n  labelRef,\n  labelClassName,\n  className,\n  parentNode,\n  ...domProps\n}) {\n  const focusManager = useFocusManager();\n  const {\n    expandedKeys,\n    selectedKeys,\n    focusedNode,\n    setFocusedNode,\n    setExpandedKeys,\n    setSelectedKeys\n  } = useContext(TreeContext);\n\n  // clear focused node on unmount\n  useEffect(() => {\n    return () => {\n      if (focusedNode === node?.id) {\n        setFocusedNode(undefined);\n      }\n    };\n  }, [focusedNode, node?.id, setFocusedNode]);\n  if (!node || !itemRenderer) return null;\n  const hasChildren = node.children.length;\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\n  const isSelected = selectedKeys.includes(node.id);\n  const isFirstNode = level === 0 && index === 0;\n  const isFocused = focusedNode == undefined ? isFirstNode : focusedNode === node.id;\n  const onKeyDown = e => {\n    if (focusedNode == null) return;\n    switch (e.key) {\n      // select the node\n      case 'Enter':\n      case ' ':\n        e.stopPropagation();\n        e.preventDefault();\n        setSelectedKeys([focusedNode]);\n        break;\n\n      // expand node, or move focus to first (and only first) child\n      case 'ArrowRight':\n        e.stopPropagation();\n        e.preventDefault();\n        if (!hasChildren) return;\n        if (!isExpanded) {\n          setExpandedKeys([...expandedKeys, focusedNode]);\n        } else {\n          focusManager?.focusNext();\n        }\n        break;\n\n      // collapse node, or move focus to parent node\n      case 'ArrowLeft':\n        e.stopPropagation();\n        e.preventDefault();\n        if (isExpanded) {\n          const index = expandedKeys.indexOf(focusedNode);\n          const newKeys = [...expandedKeys];\n          newKeys.splice(index, 1);\n          setExpandedKeys(newKeys);\n        } else if (parentNode) {\n          const parentEl = document.activeElement?.parentElement?.closest('[tabindex]');\n          if (parentEl) {\n            parentEl.focus();\n          }\n        }\n        break;\n\n      // focus next visible node, recursively\n      case 'ArrowDown':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusNext();\n        break;\n\n      // focus previous visible node, recursively\n      case 'ArrowUp':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusPrevious();\n        break;\n\n      // focus first visible node\n      case 'Home':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusFirst();\n        break;\n\n      // focus last visible node\n      case 'End':\n        e.stopPropagation();\n        e.preventDefault();\n        focusManager?.focusLast();\n        break;\n\n      // expand all sibling nodes\n      case '*':\n        e.stopPropagation();\n        e.preventDefault();\n        if (parentNode?.children) {\n          const newKeys = [...expandedKeys];\n          parentNode.children.forEach(childNode => {\n            if (childNode.children.length && !expandedKeys.includes(childNode.id)) {\n              newKeys.push(childNode.id);\n            }\n          });\n          if (newKeys.length !== expandedKeys.length) {\n            setExpandedKeys(newKeys);\n          }\n        }\n        break;\n    }\n  };\n  return <li role=\"treeitem\" aria-expanded={isExpanded ? 'true' : 'false'} aria-selected={isSelected} tabIndex={isFocused ? 0 : -1} onKeyDown={createEventHandler(onKeyDown)} onFocus={e => {\n    e.stopPropagation();\n    setFocusedNode(node.id);\n  }} onBlur={e => {\n    e.stopPropagation();\n    // only clear focus state when focus moves outside the tree\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setFocusedNode(undefined);\n    }\n  }} className={clsx('outline-none',\n  // focus direct .tree-label child when this element has :focus-visible\n  '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset', className)}>\n      <TreeLabel ref={labelRef} className={labelClassName} node={node} level={level} label={label} icon={icon} {...domProps} />\n      <AnimatePresence initial={false}>\n        {isExpanded ? <m.ul key={`${node.id}-group`} role=\"group\" initial=\"closed\" animate=\"open\" exit=\"closed\" variants={{\n        open: {\n          opacity: 1,\n          height: 'auto'\n        },\n        closed: {\n          opacity: 0,\n          height: 0,\n          overflow: 'hidden'\n        }\n      }}>\n            {renderTree({\n          nodes: node.children,\n          parentNode: node,\n          itemRenderer,\n          level\n        })}\n          </m.ul> : null}\n      </AnimatePresence>\n    </li>;\n}","import React, { useMemo, useRef } from 'react';\nimport { arrayToTree } from 'performant-array-to-tree';\nimport { useFolders } from '../../files/queries/use-folders';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { getPathForFolder, RootFolderPage } from '../../drive-page/drive-page';\nimport { mergeProps } from '@react-aria/utils';\nimport { useDraggable } from '@ui/interactions/dnd/use-draggable';\nimport { useSidebarTreeDropTarget } from './use-sidebar-tree-drop-target';\nimport { makeFolderTreeDragId } from './folder-tree-drag-id';\nimport clsx from 'clsx';\nimport { BackupIcon } from '@ui/icons/material/Backup';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { Tree } from '@ui/tree/tree';\nimport { TreeItem } from '@ui/tree/tree-item';\nexport function FolderTree() {\n  const navigate = useNavigate();\n  const {\n    data\n  } = useFolders();\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\n  const activePage = useDriveStore(s => s.activePage);\n  let selectedKeys = [];\n  if (activePage?.isFolderPage) {\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\n  }\n  const tree = useMemo(() => {\n    const folders = arrayToTree(data?.folders || [], {\n      parentId: 'parent_id',\n      dataField: null\n    });\n    const rootFolder = {\n      ...RootFolderPage.folder,\n      children: folders\n    };\n    return [rootFolder];\n  }, [data?.folders]);\n  return <Tree nodes={tree} expandedKeys={expandedKeys} onExpandedKeysChange={keys => {\n    driveState().setSidebarExpandedKeys(keys);\n  }} selectedKeys={selectedKeys} onSelectedKeysChange={([id]) => {\n    const entryHash = findHash(id, tree);\n    if (entryHash) {\n      navigate(getPathForFolder(entryHash));\n    } else {\n      navigate(RootFolderPage.path);\n    }\n  }}>\n      {() => <FolderTreeItem />}\n    </Tree>;\n}\n\n// props will be passed by tree via cloneElement\nfunction FolderTreeItem(props) {\n  const {\n    node\n  } = props;\n  const labelRef = useRef(null);\n  const isRootFolder = node.id === 0;\n  const isDragging = useDriveStore(s => s.entriesBeingDragged.includes(node.id));\n  const {\n    draggableProps\n  } = useDraggable({\n    type: 'fileEntry',\n    id: makeFolderTreeDragId(node),\n    ref: labelRef,\n    disabled: isRootFolder,\n    hidePreview: true,\n    onDragStart: (e, draggable) => {\n      const d = draggable;\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\n      driveState().selectEntries([]);\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => [node]\n  });\n  const {\n    droppableProps,\n    isDragOver\n  } = useSidebarTreeDropTarget({\n    folder: node,\n    ref: labelRef\n  });\n  return <TreeItem {...mergeProps(draggableProps, droppableProps, props)} onContextMenu={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({\n      x: e.clientX,\n      y: e.clientY,\n      entry: node\n    });\n  }} labelRef={labelRef} className={isRootFolder ? 'focus-visible:ring-2' : undefined} labelClassName={clsx(isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary', isDragging && 'opacity-30', isRootFolder && 'h-40')} icon={isRootFolder ? <BackupIcon size=\"md\" className=\"mr-6\" /> : <FolderIcon size=\"sm\" className=\"mr-4\" />} label={node.name} />;\n}\nconst findHash = (id, nodes) => {\n  for (const item of nodes) {\n    if (item.id === id) {\n      return item.hash;\n    } else if (item.children) {\n      const hash = findHash(id, item.children);\n      if (hash) {\n        return hash;\n      }\n    }\n  }\n};","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { DriveQueryKeys, invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { getAxiosErrorMessage } from '@common/http/get-axios-error-message';\nfunction deleteEntries(payload) {\n  return apiClient.post('file-entries/delete', payload).then(response => response.data);\n}\nexport function useDeleteEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(getLoaderMessage(payload), {\n        disableExitAnimation: true\n      });\n      return deleteEntries(payload);\n    },\n    onSuccess: (r, {\n      entryIds,\n      emptyTrash,\n      deleteForever\n    }) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary\n      });\n      if (emptyTrash) {\n        toast(message('Emptied trash'), {\n          disableEnterAnimation: true\n        });\n      } else if (deleteForever) {\n        toast(message('Permanently deleted [one 1 item|other :count items]', {\n          values: {\n            count: entryIds.length\n          }\n        }), {\n          disableEnterAnimation: true\n        });\n      } else {\n        toast(message('Moved [one 1 item|other :count items] to trash', {\n          values: {\n            count: entryIds.length\n          }\n        }), {\n          disableEnterAnimation: true\n        });\n      }\n    },\n    onError: (err, {\n      emptyTrash\n    }) => {\n      const backendError = getAxiosErrorMessage(err);\n      if (backendError) {\n        toast.danger(backendError, {\n          disableEnterAnimation: true\n        });\n      } else if (emptyTrash) {\n        toast.danger('could not empty trash', {\n          disableEnterAnimation: true\n        });\n      } else {\n        toast.danger('Could not delete items', {\n          disableEnterAnimation: true\n        });\n      }\n    }\n  });\n}\nfunction getLoaderMessage(payload) {\n  if (payload.emptyTrash) {\n    return message('Emptying trash...');\n  } else if (payload.deleteForever) {\n    return message('Deleting files...');\n  } else {\n    return message('Moving to trash...');\n  }\n}","import { CustomMenu, CustomMenuItem } from '@common/menus/custom-menu';\nimport { MenuPositions } from '../../menu-positions';\nimport React, { forwardRef, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { FolderTree } from '@app/drive/layout/sidebar/folder-tree';\nimport { useDeleteEntries } from '@app/drive/files/queries/use-delete-entries';\nimport { useDroppable } from '@common/ui/library/interactions/dnd/use-droppable';\nexport function SidebarMenu() {\n  return <div className=\"mt-2 px-2 text-muted\">\n      <FolderTree />\n      <CustomMenu menu={MenuPositions.DriveSidebar} orientation=\"vertical\" gap=\"gap-0\">\n        {item => {\n        if (item.action === '/drive/trash') {\n          return <TrashMenuItem key={item.id} item={item} />;\n        }\n        return <MenuItem key={item.id} item={item} />;\n      }}\n      </CustomMenu>\n    </div>;\n}\nexport const MenuItem = forwardRef(({\n  item,\n  className,\n  ...domProps\n}, ref) => {\n  return <CustomMenuItem className={({\n    isActive\n  }) => clsx(className, 'my-4 h-40 w-full rounded px-24', isActive ? 'cursor-default bg-primary/selected font-bold text-primary' : 'hover:bg-hover')} item={item} ref={ref} {...domProps} />;\n});\nfunction TrashMenuItem({\n  item\n}) {\n  const deleteEntries = useDeleteEntries();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const ref = useRef(null);\n  const {\n    droppableProps\n  } = useDroppable({\n    id: 'trash',\n    types: ['fileEntry'],\n    ref,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: draggable => {\n      const entryIds = draggable.getData().map(e => e.id);\n      deleteEntries.mutate({\n        entryIds,\n        deleteForever: false\n      });\n    }\n  });\n  return <MenuItem className={clsx(isDragOver && 'bg-primary/selected')} ref={ref} {...droppableProps} item={item} />;\n}","import { driveState, useDriveStore } from '../drive-store';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { Button } from '@ui/buttons/button';\nimport { FileUploadIcon } from '@ui/icons/material/FileUpload';\nimport { Trans } from '@ui/i18n/trans';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { UploadFileIcon } from '@ui/icons/material/UploadFile';\nimport { DriveFolderUploadIcon } from '@ui/icons/material/DriveFolderUpload';\nimport React from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { openUploadWindow } from '@ui/utils/files/open-upload-window';\nexport function CreateNewButton({\n  isCompact,\n  className\n}) {\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const button = isCompact ? <IconButton size=\"md\" disabled={!activePage?.canUpload}>\n      <AddIcon />\n    </IconButton> : <Button color=\"primary\" variant=\"flat\" size=\"sm\" startIcon={<FileUploadIcon />} disabled={!activePage?.canUpload}>\n      <Trans message=\"Upload\" />\n    </Button>;\n  return <div className={className}>\n      <MenuTrigger onItemSelected={async value => {\n      if (value === 'uploadFiles') {\n        uploadFiles(await openUploadWindow({\n          multiple: true\n        }));\n      } else if (value === 'uploadFolder') {\n        uploadFiles(await openUploadWindow({\n          directory: true\n        }));\n      } else if (value === 'newFolder') {\n        const activeFolder = driveState().activePage?.folder;\n        driveState().setActiveActionDialog('newFolder', activeFolder ? [activeFolder] : []);\n      }\n    }}>\n        {button}\n        <Menu>\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\n            <Trans message=\"Upload files\" />\n          </MenuItem>\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\n            <Trans message=\"Upload folder\" />\n          </MenuItem>\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\n            <Trans message=\"Create folder\" />\n          </MenuItem>\n        </Menu>\n      </MenuTrigger>\n    </div>;\n}","import React from 'react';\nimport { StorageMeter } from './storage-summary/storage-meter';\nimport { WorkspaceSelector } from '@common/workspace/workspace-selector';\nimport { RootFolderPage } from '../../drive-page/drive-page';\nimport { SidebarMenu } from './sidebar-menu';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { CreateNewButton } from '../create-new-button';\nimport { Button } from '@ui/buttons/button';\nimport { Link } from 'react-router';\nimport { Trans } from '@ui/i18n/trans';\nimport { useAuth } from '@common/auth/use-auth';\nimport clsx from 'clsx';\nimport { useSettings } from '@ui/settings/use-settings';\nexport function Sidebar({\n  className\n}) {\n  const {\n    isSubscribed\n  } = useAuth();\n  const {\n    billing\n  } = useSettings();\n  return <div className={clsx(className, 'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted')}>\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\n        <CreateNewButton className=\"px-2 pt-2 text-center\" />\n        <SidebarMenu />\n        <StorageMeter />\n        {billing.enable ? <div className=\"mt-2 pl-60\">\n            <Button elementType={Link} to={isSubscribed ? '/billing/change-plan' : '/pricing'} variant=\"outline\" color=\"primary\" size=\"xs\">\n              <Trans message=\"Upgrade\" />\n            </Button>\n          </div> : null}\n      </div>\n      <WorkspaceSwitcher />\n    </div>;\n}\nfunction WorkspaceSwitcher() {\n  const navigate = useNavigate();\n  return <WorkspaceSelector onChange={() => {\n    navigate(RootFolderPage.path);\n  }} className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\" />;\n}","import { useInfiniteQuery } from '@tanstack/react-query';\nimport { useSearchParams } from 'react-router';\nimport { hasNextPage } from '@common/http/backend-response/pagination-response';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { makeFolderPage, SearchPage } from '../../drive-page/drive-page';\nimport { useEffect } from 'react';\nimport { shallowEqual } from '@ui/utils/shallow-equal';\nfunction fetchEntries(params) {\n  return apiClient.get('drive/file-entries', {\n    params\n  }).then(response => response.data);\n}\nconst setActiveFolder = response => {\n  const firstPage = response.pages[0];\n  const newFolder = firstPage.folder;\n  const currentPage = driveState().activePage;\n  if (newFolder && currentPage && currentPage.uniqueId === newFolder.hash && (\n  // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\n  !currentPage.folder || !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))) {\n    driveState().setActivePage(makeFolderPage(newFolder));\n  }\n  return response;\n};\nexport function usePaginatedEntries() {\n  const page = useDriveStore(s => s.activePage);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const [searchParams] = useSearchParams();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = {\n    section: page?.name,\n    ...page?.queryParams,\n    ...Object.fromEntries(searchParams),\n    folderId: page?.isFolderPage ? page.uniqueId : null,\n    workspaceId,\n    ...sortDescriptor\n  };\n\n  // if we have no search query, there's no need to call the API, show no results message instead\n  const isDisabledInSearch = page === SearchPage && !params.query && !params.filters;\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      pageParam = 1\n    }) => {\n      return fetchEntries({\n        ...params,\n        page: pageParam\n      });\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    enabled: page != null && !isDisabledInSearch\n  });\n\n  // need to do this in effect, to avoid react errors about\n  // multiple components re-rendering at the same time\n  useEffect(() => {\n    if (query.data?.pages[0].folder) {\n      setActiveFolder(query.data);\n    }\n  }, [query.data]);\n  return query;\n}\nexport function getAllEntries() {\n  const caches = queryClient.getQueriesData({\n    queryKey: DriveQueryKeys.fetchEntries()\n  });\n  return caches.reduce((all, cache) => {\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\n    return [...all, ...current];\n  }, []);\n}","import { FilterControlType, FilterOperator } from '@common/datatable/filters/backend-filter';\nimport { FILE_ENTRY_TYPE_FILTER } from '@common/admin/file-entry/file-entry-index-filters';\nimport { message } from '@ui/i18n/message';\nimport { createdAtFilter, updatedAtFilter } from '@common/datatable/filters/timestamp-filters';\nexport const driveSearchFilters = [FILE_ENTRY_TYPE_FILTER, {\n  key: 'owner_id',\n  label: message('Owner'),\n  description: message('User file was uploaded by'),\n  defaultOperator: FilterOperator.eq,\n  control: {\n    type: FilterControlType.Select,\n    defaultValue: '02',\n    options: [{\n      key: '01',\n      label: message('anyone'),\n      value: {\n        value: null,\n        operator: '!='\n      }\n    }, {\n      key: '02',\n      label: message('me'),\n      value: '{authId}'\n    }, {\n      key: '03',\n      label: message('not me'),\n      value: {\n        value: '{authId}',\n        operator: '!='\n      }\n    }]\n  }\n}, createdAtFilter({\n  description: message('Date file was uploaded')\n}), updatedAtFilter({\n  description: message('Date file was last changed')\n}), {\n  key: 'deleted_at',\n  label: message('In trash'),\n  description: message('Only show files that are in the trash'),\n  defaultOperator: FilterOperator.ne,\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: null\n  }\n}, {\n  key: 'shareableLink',\n  label: message('Has shareable link'),\n  description: message('Only show files that have a shareable link'),\n  defaultOperator: FilterOperator.has,\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: '*'\n  }\n}, {\n  control: {\n    type: FilterControlType.BooleanToggle,\n    defaultValue: true\n  },\n  key: 'sharedByMe',\n  label: message('Shared by me'),\n  description: message('Only show files that are shared with someone'),\n  defaultOperator: FilterOperator.eq\n}];","import { createContext } from 'react';\nexport const DashboardLayoutContext = createContext(null);","import React, { useContext, useState } from 'react';\nimport { driveSearchFilters } from './drive-search-filters';\nimport { useDriveStore } from '../drive-store';\nimport { SearchPage } from '../drive-page/drive-page';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { FilterList } from '@common/datatable/filters/filter-list/filter-list';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useSearchParams } from 'react-router';\nimport { message } from '@ui/i18n/message';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\nexport function SearchFilterList() {\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    trans\n  } = useTrans();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n  if (activePage !== SearchPage) {\n    return null;\n  }\n  return <div className=\"mb-30 mt-10 px-10 md:px-26\">\n      {isMobileMode && <form className=\"contents\" onSubmit={e => {\n      e.preventDefault();\n      // blur input so mobile keyboard is hidden\n      if (document.activeElement?.tagName === 'INPUT') {\n        document.activeElement.blur();\n      }\n      navigate({\n        pathname: SearchPage.path,\n        search: `?query=${inputValue}`\n      }, {\n        replace: true\n      });\n    }}>\n          <TextField autoFocus className=\"mb-20\" startAdornment={<IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>} placeholder={trans(message('Type to search'))} value={inputValue} onChange={e => setInputValue(e.target.value)} />\n        </form>}\n      <FilterList filters={driveSearchFilters} pinnedFilters={alwaysShownFilters} />\n    </div>;\n}","export function restrictResizableWithinBoundary(rect, boundaryRect) {\n  const boundedRect = {\n    ...rect\n  };\n\n  // restrict to left edge of boundary\n  boundedRect.left = Math.max(0, boundedRect.left);\n  // compensate width when left is bounded\n  const leftRestriction = boundedRect.left - rect.left;\n  if (leftRestriction > 0) {\n    boundedRect.width -= leftRestriction;\n  }\n\n  // restrict to top edge of boundary\n  boundedRect.top = Math.max(0, boundedRect.top);\n  // compensate height when top is bounded\n  const topRestriction = boundedRect.top - rect.top;\n  if (topRestriction > 0) {\n    boundedRect.height -= topRestriction;\n  }\n\n  // restrict to right edge of boundary\n  boundedRect.width = Math.min(boundedRect.width, boundaryRect.width - boundedRect.left);\n\n  // restrict to bottom edge of boundary\n  boundedRect.height = Math.min(boundedRect.height, boundaryRect.height - boundedRect.top);\n  return boundedRect;\n}","import { useLayoutEffect, useRef } from 'react';\nimport { droppables } from '../drag-state';\nexport const mouseSelectables = new Map();\nexport function useMouseSelectable(options) {\n  const {\n    id,\n    ref\n  } = options;\n  const optionsRef = useRef(options);\n  optionsRef.current = options;\n  useLayoutEffect(() => {\n    if (!ref.current) return;\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\n    mouseSelectables.set(id, {\n      ...mouseSelectables.get(id),\n      id,\n      ref,\n      // avoid stale closures\n      onSelected: () => {\n        optionsRef.current.onSelected?.();\n      },\n      onDeselected: () => optionsRef.current.onDeselected?.()\n    });\n    return () => {\n      droppables.delete(id);\n    };\n  }, [id, optionsRef, ref]);\n}","export function rectsIntersect(rectA, rectB) {\n  if (!rectA || !rectB) return false;\n  return rectA.left <= rectB.left + rectB.width && rectA.left + rectA.width >= rectB.left && rectA.top <= rectB.top + rectB.height && rectA.top + rectA.height >= rectB.top;\n}","import { useRef } from 'react';\nimport { usePointerEvents } from '../../use-pointer-events';\nimport { restrictResizableWithinBoundary } from '../../utils/restrict-resizable-within-boundary';\nimport { activeInteraction } from '../../active-interaction';\nimport { updateRects } from '../update-rects';\nimport { mouseSelectables } from './use-mouse-selectable';\nimport { rectsIntersect } from '../../utils/rects-intersect';\nexport function useMouseSelectionBox({\n  onPointerDown,\n  ...props\n} = {}) {\n  const defaultRef = useRef(null);\n  const containerRef = props.containerRef || defaultRef;\n  const boxRef = useRef(null);\n  let state = useRef({}).current;\n  const drawSelectionBox = () => {\n    if (state.rafId) {\n      cancelAnimationFrame(state.rafId);\n    }\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\n    const startPoint = state.startPoint;\n    const endPoint = state.endPoint;\n    const initialScrollTop = startPoint.scrollTop || 0;\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\n    const newRect = {\n      left: Math.min(startPoint.x, endPoint.x),\n      top: Math.min(startPoint.y, endPoint.y),\n      width: Math.abs(startPoint.x - endPoint.x),\n      height: Math.abs(startPoint.y - endPoint.y)\n    };\n\n    // convert box coords to be relative to container and not viewport\n    newRect.left -= state.boundaryRect.left;\n    newRect.top -= state.boundaryRect.top;\n\n    // take initial scroll of container into account\n    newRect.top += initialScrollTop;\n\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\n    const scrollDiff = currentScrollTop - initialScrollTop;\n    const scrollValue = Math.abs(scrollDiff);\n\n    // top needs to be changed only if scroll direction is top\n    if (scrollDiff < 0) {\n      newRect.top -= scrollValue;\n    }\n\n    // height needs to be changed regardless of direction and method\n    newRect.height += scrollValue;\n    const boundedRect = state.boundaryRect ? restrictResizableWithinBoundary(newRect, state.boundaryRect) : {\n      ...newRect\n    };\n    if (boxRef.current) {\n      state.rafId = requestAnimationFrame(() => {\n        if (boxRef.current) {\n          boxRef.current.style.display = `block`;\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\n          boxRef.current.style.width = `${boundedRect.width}px`;\n          boxRef.current.style.height = `${boundedRect.height}px`;\n        }\n        state.rafId = undefined;\n      });\n    }\n\n    // convert rect back to absolute for intersection testing\n    const absoluteRect = {\n      ...boundedRect,\n      left: boundedRect.left + state.boundaryRect.left,\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop\n    };\n    for (const [, selectable] of mouseSelectables) {\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.add(selectable.id);\n        selectable.onSelected?.();\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\n        state.selectedIds?.delete(selectable.id);\n        selectable.onDeselected?.();\n      }\n    }\n  };\n  const pointerEvents = usePointerEvents({\n    minimumMovement: 4,\n    onPointerDown,\n    onMoveStart: e => {\n      if (activeInteraction) {\n        return false;\n      }\n      updateRects(mouseSelectables);\n      state = {\n        selectedIds: new Set()\n      };\n      const el = containerRef.current;\n      state.startPoint = {\n        x: e.clientX,\n        y: e.clientY,\n        scrollTop: el?.scrollTop || 0\n      };\n      state.scrollListener = e => {\n        if (!state.startPoint) return;\n        // update rects on scroll, because we are using relative position\n        updateRects(mouseSelectables);\n        if (state.boundaryRect?.height) {\n          state.boundaryRect.height = e.target.scrollHeight;\n        }\n        // draw selection box (for autoscroll and mousewheel)\n        drawSelectionBox();\n      };\n      if (el) {\n        const rect = el.getBoundingClientRect();\n        el.addEventListener('scroll', state.scrollListener);\n        state.boundaryRect = {\n          top: rect.top,\n          left: rect.left,\n          height: el.scrollHeight,\n          heightWithoutScroll: rect.height,\n          width: el.scrollWidth\n        };\n      }\n    },\n    onMove: e => {\n      state.endPoint = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      if (state.boundaryRect && containerRef.current) {\n        const reachedBottomEdge = e.clientY + 20 > state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\n        if (reachedBottomEdge) {\n          containerRef.current.scrollBy({\n            top: 10\n          });\n        } else if (reachedTopEdge) {\n          containerRef.current.scrollBy({\n            top: -10\n          });\n        }\n      }\n      drawSelectionBox();\n    },\n    onMoveEnd: () => {\n      if (state.rafId) {\n        cancelAnimationFrame(state.rafId);\n      }\n      if (containerRef.current && state.scrollListener) {\n        containerRef.current.removeEventListener('scroll', state.scrollListener);\n      }\n      if (boxRef.current) {\n        boxRef.current.style.display = `none`;\n        boxRef.current.style.transform = '';\n        boxRef.current.style.width = '';\n        boxRef.current.style.height = '';\n      }\n      state = {};\n    }\n  });\n  return {\n    containerProps: {\n      ...pointerEvents.domProps,\n      ref: containerRef\n    },\n    boxProps: {\n      ref: boxRef\n    }\n  };\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction createShareableLink(entryId) {\n  if (!entryId) {\n    return Promise.reject(new Error('Invalid entry id'));\n  }\n  return apiClient.post(`file-entries/${entryId}/shareable-link`).then(response => response.data);\n}\nexport function useCreateShareableLink() {\n  return useMutation({\n    mutationFn: ({\n      entryId\n    }) => createShareableLink(entryId),\n    onSuccess: (data, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), data);\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { useMutation } from '@tanstack/react-query';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction addStarToEntries({\n  entryIds\n}) {\n  return apiClient.post('file-entries/star', {\n    entryIds\n  }).then(response => response.data);\n}\nexport function useAddStarToEntries() {\n  return useMutation({\n    mutationFn: payload => addStarToEntries(payload),\n    onSuccess: (data, {\n      entryIds\n    }) => {\n      invalidateEntryQueries();\n      toast(message('Starred [one 1 item|other :count items]', {\n        values: {\n          count: entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not star items'))\n  });\n}","import { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { useMutation } from '@tanstack/react-query';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction removeStarFromEntries({\n  entryIds\n}) {\n  return apiClient.post('file-entries/unstar', {\n    entryIds\n  }).then(response => response.data);\n}\nexport function useRemoveStarFromEntries() {\n  return useMutation({\n    mutationFn: payload => removeStarFromEntries(payload),\n    onSuccess: (data, {\n      entryIds\n    }) => {\n      invalidateEntryQueries();\n      toast(message('Removed star from [one 1 item|other :count items]', {\n        values: {\n          count: entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not remove star'))\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { DriveQueryKeys, invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction duplicateEntries(payload) {\n  return apiClient.post('file-entries/duplicate', payload).then(response => response.data);\n}\nexport function useDuplicateEntries() {\n  return useMutation({\n    mutationFn: payload => {\n      toast.loading(message('Duplicating [one 1 item|other :count items]...', {\n        values: {\n          count: payload.entryIds.length\n        }\n      }), {\n        disableExitAnimation: true\n      });\n      return duplicateEntries(payload);\n    },\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchStorageSummary\n      });\n      toast(message('Duplicated [one 1 item|other :count items]', {\n        values: {\n          count: p.entryIds.length\n        }\n      }), {\n        disableEnterAnimation: true\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not duplicate items'), null, {\n      disableEnterAnimation: true\n    })\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nexport function useUnshareEntries() {\n  return useMutation({\n    mutationFn: payload => unshareEntries(payload),\n    onSuccess: () => {\n      return invalidateEntryQueries();\n    }\n  });\n}\nfunction unshareEntries({\n  entryIds,\n  ...payload\n}) {\n  return apiClient.post(`file-entries/${entryIds.join(',')}/unshare`, payload).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useRestoreEntries() {\n  return useMutation({\n    mutationFn: payload => restoreEntries(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message('Restored [one 1 item|other :count items]', {\n        values: {\n          count: p.entryIds.length\n        }\n      }));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not restore items'))\n  });\n}\nfunction restoreEntries(payload) {\n  return apiClient.post('file-entries/restore', payload).then(response => response.data);\n}","import { message } from '@ui/i18n/message';\nimport { PersonAddIcon } from '@ui/icons/material/PersonAdd';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { RemoveRedEyeIcon } from '@ui/icons/material/RemoveRedEye';\nimport { LinkIcon } from '@ui/icons/material/Link';\nimport { useCreateShareableLink } from '../shareable-link/queries/create-shareable-link';\nimport { StarIcon } from '@ui/icons/material/Star';\nimport { useAddStarToEntries } from '../files/queries/use-add-star-to-entries';\nimport { StarOutlineIcon } from '@ui/icons/material/StarOutline';\nimport { useRemoveStarFromEntries } from '../files/queries/use-remove-star-from-entries';\nimport { DriveFileMoveIcon } from '@ui/icons/material/DriveFileMove';\nimport { DriveFileRenameOutlineIcon } from '@ui/icons/material/DriveFileRenameOutline';\nimport { ContentCopyIcon } from '@ui/icons/material/ContentCopy';\nimport { useDuplicateEntries } from '../files/queries/use-duplicate-entries';\nimport { FileDownloadIcon } from '@ui/icons/material/FileDownload';\nimport { DeleteIcon } from '@ui/icons/material/Delete';\nimport { SharesPage, TrashPage } from '../drive-page/drive-page';\nimport { useDeleteEntries } from '../files/queries/use-delete-entries';\nimport { useUnshareEntries } from '../share-dialog/queries/use-unshare-entries';\nimport { toast } from '@ui/toast/toast';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { useFileEntryUrls } from '@common/uploads/file-entry-urls';\nimport { useRestoreEntries } from '../files/queries/use-restore-entries';\nimport { RestoreIcon } from '@ui/icons/material/Restore';\nimport { downloadFileFromUrl } from '@ui/utils/files/download-file-from-url';\nimport { FolderOpenIcon } from '@ui/icons/material/FolderOpen';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\n\nexport function useEntryActions(entries) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const getLink = useGetLinkAction(entries);\n  const addStar = useAddToStarredAction(entries);\n  const removeStar = useRemoveFromStarred(entries);\n  const showAllFiles = useShowAllFilesAction(entries);\n  const moveTo = useMoveToAction(entries);\n  const rename = useRenameAction(entries);\n  const makeCopy = useMakeCopyAction(entries);\n  const download = useDownloadEntriesAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\n  const restoreEntries = useRestoreEntriesAction(entries);\n  return [preview, share, getLink, addStar, removeStar, showAllFiles, moveTo, rename, makeCopy, download, deleteAction, removeSharedEntries, restoreEntries].filter(action => !!action);\n}\nexport function usePreviewAction(entries) {\n  if (!entries.some(e => e.type !== 'folder')) return;\n  return {\n    label: message('Preview'),\n    icon: RemoveRedEyeIcon,\n    key: 'preview',\n    execute: () => {\n      driveState().setActiveActionDialog('preview', entries);\n    }\n  };\n}\nexport function useShareAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) return;\n  return {\n    label: message('Share'),\n    icon: PersonAddIcon,\n    key: 'share',\n    execute: () => {\n      driveState().setActiveActionDialog('share', entries);\n    }\n  };\n}\nfunction useGetLinkAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const createLink = useCreateShareableLink();\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Get link'),\n    icon: LinkIcon,\n    key: 'getLink',\n    execute: () => {\n      createLink.mutate({\n        entryId: entries[0].id\n      });\n      driveState().setActiveActionDialog('getLink', entries);\n    }\n  };\n}\nfunction useAddToStarredAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const starEntries = useAddStarToEntries();\n  if (entries.every(e => e.tags?.find(tag => tag.name === 'starred')) || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Add to starred'),\n    icon: StarIcon,\n    key: 'addToStarred',\n    execute: () => {\n      starEntries.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useRemoveFromStarred(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const removeStar = useRemoveStarFromEntries();\n  if (!entries.every(e => e.tags?.find(tag => tag.name === 'starred')) || activePage === TrashPage) return;\n  return {\n    label: message('Remove from starred'),\n    icon: StarOutlineIcon,\n    key: 'removeFromStarred',\n    execute: () => {\n      removeStar.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useShowAllFilesAction(entries) {\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  \n  // Only show for single folder entries, not in trash\n  if (entries.length !== 1 || entries[0].type !== 'folder' || activePage === TrashPage) {\n    return;\n  }\n  \n  return {\n    label: message('Show all files'),\n    icon: FolderOpenIcon,\n    key: 'showAllFiles',\n    execute: () => {\n      const folder = entries[0];\n      // Navigate to a special page that shows all files in this folder using allChildren section\n      navigate(`/drive/folders/${folder.hash}/all`);\n    }\n  };\n}\nfunction useMoveToAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (!entries.every(e => e.permissions['files.update']) || activePage === SharesPage || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Move to'),\n    icon: DriveFileMoveIcon,\n    key: 'moveTo',\n    execute: () => {\n      driveState().setActiveActionDialog('moveTo', entries);\n    }\n  };\n}\nfunction useRenameAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) return;\n  return {\n    label: message('Rename'),\n    icon: DriveFileRenameOutlineIcon,\n    key: 'rename',\n    execute: () => {\n      driveState().setActiveActionDialog('rename', entries);\n    }\n  };\n}\nfunction useMakeCopyAction(entries) {\n  const activePage = useDriveStore(s => s.activePage);\n  const duplicateEntries = useDuplicateEntries();\n  if (entries.length > 1 || !entries.every(e => e.permissions['files.update']) || activePage === TrashPage) {\n    return;\n  }\n  return {\n    label: message('Make a copy'),\n    icon: ContentCopyIcon,\n    key: 'makeCopy',\n    execute: () => {\n      duplicateEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        destinationId: activePage?.folder?.id\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nfunction useDownloadEntriesAction(entries) {\n  const {\n    downloadUrl\n  } = useFileEntryUrls(entries[0], {\n    downloadHashes: entries.map(e => e.hash)\n  });\n  if (!entries.every(e => e.permissions['files.download'])) return;\n  return {\n    label: message('Download'),\n    icon: FileDownloadIcon,\n    key: 'download',\n    execute: () => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n      driveState().selectEntries([]);\n    }\n  };\n}\nexport function useDeleteEntriesAction(entries) {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage === SharesPage || !entries.every(e => e.permissions['files.delete'])) return;\n  return {\n    label: activePage === TrashPage ? message('Delete forever') : message('Remove'),\n    icon: DeleteIcon,\n    key: 'delete',\n    execute: () => {\n      if (activePage === TrashPage) {\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\n      } else {\n        deleteEntries.mutate({\n          entryIds: entries.map(e => e.id),\n          deleteForever: activePage === TrashPage\n        });\n        driveState().selectEntries([]);\n      }\n    }\n  };\n}\nexport function useRestoreEntriesAction(entries) {\n  const restoreEntries = useRestoreEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage || !entries.every(e => e.permissions['files.delete'])) return;\n  return {\n    label: message('Restore'),\n    icon: RestoreIcon,\n    key: 'restore',\n    execute: () => {\n      restoreEntries.mutate({\n        entryIds: entries.map(e => e.id)\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}\nexport function useRemoveSharedEntriesAction(entries) {\n  const unshareEntries = useUnshareEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== SharesPage) return;\n  return {\n    label: message('Remove'),\n    icon: DeleteIcon,\n    key: 'removeSharedEntry',\n    execute: () => {\n      unshareEntries.mutate({\n        entryIds: entries.map(e => e.id),\n        userId: 'me'\n      }, {\n        onSuccess: (r, p) => {\n          toast(message('Removed [one 1 item|other {count} items]', {\n            values: {\n              count: p.entryIds.length\n            }\n          }));\n        },\n        onError: err => showHttpErrorToast(err, message('Could not remove items'))\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}","import { message } from '@ui/i18n/message';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { TrashPage } from '../drive-page/drive-page';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { FileUploadIcon } from '@ui/icons/material/FileUpload';\nimport { DriveFolderUploadIcon } from '@ui/icons/material/DriveFolderUpload';\nimport { useDeleteEntries } from '../files/queries/use-delete-entries';\nimport { DeleteForeverIcon } from '@ui/icons/material/DeleteForever';\nimport { openUploadWindow } from '@ui/utils/files/open-upload-window';\nexport function useDrivePageActions(page) {\n  const newFolder = useNewFolderAction(page);\n  const uploadFiles = useUploadFilesAction(page);\n  const uploadFolder = useUploadFolderAction(page);\n  const emptyTrash = useEmptyTrashAction(page);\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(action => !!action);\n}\nfunction useNewFolderAction(page) {\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('New folder'),\n    icon: CreateNewFolderIcon,\n    key: 'newFolder',\n    execute: () => {\n      if (page.folder) {\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\n      }\n    }\n  };\n}\nfunction useUploadFilesAction(page) {\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload files'),\n    icon: FileUploadIcon,\n    key: 'uploadFiles',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({\n        multiple: true\n      }));\n    }\n  };\n}\nfunction useUploadFolderAction(page) {\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  if (!page.folder || !page.folder.permissions['files.update']) return;\n  return {\n    label: message('Upload folder'),\n    icon: DriveFolderUploadIcon,\n    key: 'uploadFolder',\n    execute: async () => {\n      uploadFiles(await openUploadWindow({\n        directory: true\n      }));\n    }\n  };\n}\nfunction useEmptyTrashAction(page) {\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  if (activePage !== TrashPage) return;\n  return {\n    label: message('Empty trash'),\n    icon: DeleteForeverIcon,\n    key: 'emptyTrash',\n    execute: () => {\n      deleteEntries.mutate({\n        entryIds: [],\n        emptyTrash: true\n      });\n      driveState().selectEntries([]);\n    }\n  };\n}","import React, { createElement } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { useEntryActions } from './use-entry-actions';\nimport { RootFolderPage, TrashPage } from '../drive-page/drive-page';\nimport { useDrivePageActions } from './use-drive-page-actions';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nexport function EntryActionMenuTrigger({\n  children,\n  entries,\n  page,\n  showIfNoActions\n}) {\n  if (page?.name === RootFolderPage.name) {\n    return <PageMenu page={RootFolderPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>;\n  }\n  if (page === TrashPage) {\n    return <PageMenu page={TrashPage} showIfNoActions={showIfNoActions}>\n        {children}\n      </PageMenu>;\n  }\n  if (page?.folder) {\n    return <EntriesMenu entries={[page.folder]} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>;\n  }\n  if (entries?.length) {\n    return <EntriesMenu entries={entries} showIfNoActions={showIfNoActions}>\n        {children}\n      </EntriesMenu>;\n  }\n  return null;\n}\nfunction EntriesMenu({\n  entries,\n  children,\n  showIfNoActions\n}) {\n  const actions = useEntryActions(entries);\n  return <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>;\n}\nfunction PageMenu({\n  page,\n  children,\n  showIfNoActions\n}) {\n  const actions = useDrivePageActions(page);\n  return <BaseMenu actions={actions} showIfNoActions={showIfNoActions}>\n      {children}\n    </BaseMenu>;\n}\nfunction BaseMenu({\n  actions,\n  children,\n  showIfNoActions\n}) {\n  if (!actions.length && !showIfNoActions) {\n    return null;\n  }\n  return <MenuTrigger>\n      {children}\n      <Menu>\n        {actions.map(action => {\n        return <MenuItem onSelected={() => {\n          action.execute();\n        }} key={action.key} value={action.key} startIcon={createElement(action.icon)}>\n              <Trans {...action.label} />\n            </MenuItem>;\n      })}\n      </Menu>\n    </MenuTrigger>;\n}","import { usePaginatedEntries } from './use-paginated-entries';\nexport function useEntries() {\n  const query = usePaginatedEntries();\n  if (!query.data) return [];\n  return query.data.pages.flatMap(p => p.data);\n}","import { driveState, useDriveStore } from '../drive-store';\nimport { getAllEntries } from './queries/use-paginated-entries';\nimport { useEntries } from './queries/use-entries';\nimport { useFolders } from './queries/use-folders';\nexport function useSelectedEntries() {\n  const ids = useDriveStore(s => s.selectedEntries);\n  const entries = useEntries();\n  return Array.from(ids).map(id => entries.find(entry => entry.id === id)).filter(e => !!e);\n}\nexport function useSelectedEntry() {\n  const entries = useSelectedEntries();\n  return entries[0];\n}\nexport function useSelectedEntryParent() {\n  const entry = useSelectedEntry();\n  const {\n    data\n  } = useFolders();\n  if (!entry || !data?.folders) return;\n  return data.folders.find(e => e.id === entry.parent_id);\n}\nexport function getSelectedEntries() {\n  const ids = Array.from(driveState().selectedEntries);\n  const allEntries = getAllEntries();\n  return ids.map(id => allEntries.find(entry => entry.id === id)).filter(e => !!e);\n}","import React, { createElement } from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { EntryActionMenuTrigger } from './entry-action-menu-trigger';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { Trans } from '@ui/i18n/trans';\nimport { useSelectedEntries } from '../files/use-selected-entries';\nimport { useDeleteEntriesAction, usePreviewAction, useRemoveSharedEntriesAction, useShareAction } from './use-entry-actions';\nexport function EntryActionList({\n  className\n}) {\n  const selectedEntries = useSelectedEntries();\n  if (!selectedEntries.length) {\n    return null;\n  }\n  return <div className={className}>\n      <ActionList entries={selectedEntries} />\n    </div>;\n}\nfunction ActionList({\n  entries\n}) {\n  const preview = usePreviewAction(entries);\n  const share = useShareAction(entries);\n  const deleteAction = useDeleteEntriesAction(entries);\n  const removeShared = useRemoveSharedEntriesAction(entries);\n  const actions = [preview, share, deleteAction, removeShared].filter(action => !!action);\n  return <div className=\"entry-action-list\">\n      {actions.map(action => <Tooltip key={action.key} label={<Trans {...action.label} />}>\n          <IconButton size=\"sm\" onClick={() => {\n        action.execute();\n      }}>\n            {createElement(action.icon)}\n          </IconButton>\n        </Tooltip>)}\n      <EntryActionMenuTrigger entries={entries}>\n        <Tooltip label={<Trans message=\"More actions\" />}>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </Tooltip>\n      </EntryActionMenuTrigger>\n    </div>;\n}","import { useSelectedEntries } from './use-selected-entries';\nimport { useEntryActions } from '../entry-actions/use-entry-actions';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { ContextMenu } from '@ui/menu/context-menu';\nimport { MenuItem } from '@ui/menu/menu-trigger';\nimport React, { createElement } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { RootFolderPage } from '../drive-page/drive-page';\nimport { useDrivePageActions } from '../entry-actions/use-drive-page-actions';\nexport function DriveContextMenu() {\n  const selectedEntries = useSelectedEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const data = useDriveStore(s => s.contextMenuData);\n  const entries = data?.entry ? [data.entry] : selectedEntries;\n\n  // right-clicked root folder\n  if (data?.entry?.id === 0) {\n    return <PageContextMenu position={data} page={RootFolderPage} />;\n  }\n  if (data && entries.length) {\n    return <EntriesContextMenu entries={entries} position={data} />;\n  }\n  if (data && activePage) {\n    return <PageContextMenu position={data} page={activePage} />;\n  }\n  return null;\n}\nfunction EntriesContextMenu({\n  entries,\n  position\n}) {\n  const actions = useEntryActions(entries);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\nfunction PageContextMenu({\n  page,\n  position\n}) {\n  const actions = useDrivePageActions(page);\n  return <BaseContextMenu position={position} actions={actions} />;\n}\nfunction BaseContextMenu({\n  position,\n  actions\n}) {\n  return <ContextMenu position={position} onOpenChange={isOpen => {\n    if (!isOpen) {\n      driveState().setContextMenuData(null);\n    }\n  }}>\n      {actions.map(action => <MenuItem value={action.key} key={action.key} onSelected={action.execute} startIcon={createElement(action.icon)}>\n          <Trans {...action.label} />\n        </MenuItem>)}\n    </ContextMenu>;\n}","import { useMediaQuery } from '@ui/utils/hooks/use-media-query';\nexport function useIsTouchDevice() {\n  return useMediaQuery('((pointer: coarse))');\n}","import { useDraggable } from '@ui/interactions/dnd/use-draggable';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { getSelectedEntries } from '../files/use-selected-entries';\nimport { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { folderAcceptsDrop, useFolderDropAction } from '../files/use-folder-drop-action';\nimport { useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useMouseSelectable } from '@ui/interactions/dnd/mouse-selection/use-mouse-selectable';\nimport { TrashPage } from '@app/drive/drive-page/drive-page';\nimport { useIsTouchDevice } from '@ui/utils/hooks/is-touch-device';\nexport function useFileViewDnd(destination) {\n  const isTouchDevice = useIsTouchDevice();\n  const ref = useRef(null);\n  const {\n    onDrop\n  } = useFolderDropAction(destination);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const isDragging = useDriveStore(s => s.entriesBeingDragged.includes(destination.id));\n  const activePage = useDriveStore(s => s.activePage);\n  const {\n    draggableProps\n  } = useDraggable({\n    disabled: !!isTouchDevice || activePage === TrashPage,\n    id: destination.id,\n    type: 'fileEntry',\n    ref,\n    hidePreview: true,\n    onDragStart: (e, target) => {\n      if (!driveState().selectedEntries.has(destination.id)) {\n        driveState().selectEntries([destination.id]);\n      }\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\n    },\n    onDragEnd: () => {\n      driveState().setEntriesBeingDragged([]);\n    },\n    getData: () => getSelectedEntries()\n  });\n  const {\n    droppableProps\n  } = useDroppable({\n    id: destination.id,\n    disabled: isTouchDevice || destination.type !== 'folder',\n    ref,\n    types: ['fileEntry', 'nativeFile'],\n    acceptsDrop: target => folderAcceptsDrop(target, destination),\n    onDragEnter: () => setIsDragOver(true),\n    onDragLeave: () => setIsDragOver(false),\n    onDrop\n  });\n  useMouseSelectable({\n    id: destination.id,\n    ref,\n    onSelected: () => {\n      driveState().selectEntries([destination.id], true);\n    },\n    onDeselected: () => {\n      driveState().deselectEntries([destination.id]);\n    }\n  });\n  const itemClassName = clsx(isDragging && 'opacity-20', isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded');\n  return {\n    draggableProps,\n    droppableProps,\n    isDragOver,\n    isDragging,\n    itemClassName,\n    ref\n  };\n}","import { mergeProps } from '@react-aria/utils';\nimport { useFileViewDnd } from '../use-file-view-dnd';\nimport clsx from 'clsx';\nimport React, { useContext } from 'react';\nimport { driveState } from '../../drive-store';\nimport { TableContext } from '@common/ui/tables/table-context';\nexport function FileTableRow({\n  item,\n  children,\n  className,\n  ...domProps\n}) {\n  const {\n    isCollapsedMode\n  } = useContext(TableContext);\n  const {\n    draggableProps,\n    droppableProps,\n    itemClassName,\n    ref\n  } = useFileViewDnd(item);\n  return <div className={clsx(className, itemClassName)} ref={ref} {...mergeProps(draggableProps, droppableProps, domProps, {\n    onContextMenu: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (!isCollapsedMode) {\n        if (!driveState().selectedEntries.has(item.id)) {\n          driveState().selectEntries([item.id]);\n        }\n        driveState().setContextMenuData({\n          x: e.clientX,\n          y: e.clientY\n        });\n      }\n    }\n  })}>\n      {children}\n    </div>;\n}","import { useCallback } from 'react';\nimport { getPathForFolder, TrashPage } from '../drive-page/drive-page';\nimport { driveState } from '../drive-store';\nimport { getSelectedEntries } from '../files/use-selected-entries';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nexport function useViewItemActionHandler() {\n  const navigate = useNavigate();\n  const performViewItemAction = useCallback(entry => {\n    if (entry && entry.type === 'folder') {\n      if (driveState().activePage === TrashPage) {\n        driveState().setActiveActionDialog('trashFolderBlock', [entry]);\n      } else {\n        navigate(getPathForFolder(entry.hash));\n      }\n    } else {\n      const selectedEntries = getSelectedEntries();\n      driveState().setActiveActionDialog('preview', selectedEntries.length ? selectedEntries : [entry]);\n    }\n  }, [navigate]);\n  return {\n    performViewItemAction\n  };\n}","import { Trans } from '@ui/i18n/trans';\nimport { FormattedDate } from '@ui/i18n/formatted-date';\nimport React, { useContext } from 'react';\nimport memoize from 'nano-memoize';\nimport { TableContext } from '@common/ui/tables/table-context';\nimport { Checkbox } from '@ui/forms/toggle/checkbox';\nimport { EntryActionMenuTrigger } from '@app/drive/entry-actions/entry-action-menu-trigger';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport clsx from 'clsx';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nconst formatFileSize = memoize(bytes => {\n  return prettyBytes(bytes);\n});\nexport const fileTableColumns = [{\n  key: 'name',\n  allowsSorting: true,\n  header: () => <Trans message=\"Name\" />,\n  visibleInMode: 'all',\n  width: 'flex-3 min-w-200',\n  body: entry => <FileNameColumn entry={entry} />\n}, {\n  key: 'updated_at',\n  allowsSorting: true,\n  maxWidth: 'max-w-184',\n  header: () => <Trans message=\"Last modified\" />,\n  body: user => <FormattedDate date={user.updated_at} />\n}, {\n  key: 'file_size',\n  allowsSorting: true,\n  header: () => <Trans message=\"Size\" />,\n  maxWidth: 'max-w-144',\n  body: entry => formatFileSize(entry.file_size) ?? '-'\n}, {\n  key: 'actions',\n  hideHeader: true,\n  header: () => <Trans message=\"Actions\" />,\n  align: 'end',\n  width: 'w-42 flex-shrink-0',\n  visibleInMode: 'all',\n  body: entry => <ActionsColumn entry={entry} />\n}];\nfunction FileNameColumn({\n  entry\n}) {\n  const {\n    isCollapsedMode\n  } = useContext(TableContext);\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\n  return <div className=\"flex items-center gap-14\">\n      <FileThumbnail className={clsx('rounded', sizeClassName)} iconClassName={sizeClassName} file={entry} />\n      <div className=\"min-w-0\">\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\n        {isCollapsedMode && <div className=\"mt-4 flex items-center text-xs text-muted\">\n            <FormattedDate date={entry.updated_at} />\n            <div>·</div>\n            <div>{formatFileSize(entry.file_size)}</div>\n          </div>}\n      </div>\n    </div>;\n}\nfunction ActionsColumn({\n  entry\n}) {\n  const {\n    selectedRows\n  } = useContext(TableContext);\n  return selectedRows.length ? <Checkbox className=\"mr-8 block\" checked={selectedRows.includes(entry.id)} /> : <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\">\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>;\n}","import React, { useMemo } from 'react';\nimport { Table } from '@common/ui/tables/table';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { FileTableRow } from './file-table-row';\nimport { useViewItemActionHandler } from '../use-view-item-action-handler';\nimport { fileTableColumns } from './file-table-columns';\nexport function FileTable({\n  entries\n}) {\n  const {\n    performViewItemAction\n  } = useViewItemActionHandler();\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\n  const selectedRows = useMemo(() => {\n    return [...selectedEntries];\n  }, [selectedEntries]);\n  return <Table columns={fileTableColumns} data={entries} sortDescriptor={sortDescriptor} onSortChange={value => {\n    driveState().setSortDescriptor(value);\n  }} onAction={performViewItemAction} selectedRows={selectedRows} selectionStyle=\"highlight\" renderRowAs={FileTableRow} onSelectionChange={value => {\n    driveState().selectEntries(value);\n  }} />;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nexport const BaseFileGridItem = React.forwardRef(({\n  entry,\n  className,\n  isSelected,\n  isMobileMode,\n  footerAdornment,\n  ...domProps\n}, ref) => {\n  return <div {...domProps} ref={ref} className={clsx('grid-item flex aspect-square select-none flex-col overflow-hidden rounded border shadow outline-none transition-shadow-opacity dark:bg-alt', isSelected && 'border-primary', className)}>\n        <div className=\"relative min-h-0 flex-auto\">\n          <FileThumbnail className=\"h-full w-full\" iconClassName=\"block w-70 h-70 absolute m-auto inset-0\" file={entry} />\n        </div>\n        <Footer entry={entry} isSelected={isSelected} isMobile={isMobileMode} adornment={footerAdornment} />\n      </div>;\n});\nfunction Footer({\n  entry,\n  isSelected,\n  isMobile,\n  adornment\n}) {\n  return <div className={clsx('flex h-48 flex-shrink-0 items-center text-sm', isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16', isSelected && 'bg-primary-light/20')}>\n      <div className=\"min-w-0 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n        {entry.name}\n      </div>\n      {adornment}\n    </div>;\n}","import React, { useContext } from 'react';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { mergeProps } from '@react-aria/utils';\nimport { useFileViewDnd } from '../use-file-view-dnd';\nimport { useViewItemActionHandler } from '../use-view-item-action-handler';\nimport { BaseFileGridItem } from './base-file-grid-item';\nimport { EntryActionMenuTrigger } from '../../entry-actions/entry-action-menu-trigger';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { MoreVertIcon } from '@ui/icons/material/MoreVert';\nimport { Checkbox } from '@ui/forms/toggle/checkbox';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { isCtrlOrShiftPressed } from '@ui/utils/keybinds/is-ctrl-or-shift-pressed';\nimport { usePointerEvents } from '@ui/interactions/use-pointer-events';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nexport function FileGridItem({\n  entry\n}) {\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\n  const {\n    performViewItemAction\n  } = useViewItemActionHandler();\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    draggableProps,\n    droppableProps,\n    itemClassName,\n    ref\n  } = useFileViewDnd(entry);\n  const toggleEntry = () => {\n    if (isSelected) {\n      driveState().deselectEntries([entry.id]);\n    } else {\n      driveState().selectEntries([entry.id], true);\n    }\n  };\n  const pressHandler = (e, el) => {\n    if (isMobileMode) {\n      if (driveState().selectedEntries.size) {\n        toggleEntry();\n      } else {\n        performViewItemAction(entry);\n      }\n    } else {\n      if (isCtrlOrShiftPressed(e)) {\n        toggleEntry();\n      } else {\n        driveState().selectEntries([entry.id]);\n      }\n    }\n  };\n  const {\n    domProps: pressProps\n  } = usePointerEvents({\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\n    onPress: pressHandler\n  });\n  const keyboardHandler = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      e.stopPropagation();\n      performViewItemAction(entry);\n    }\n  };\n  const contextMenuHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      if (!driveState().selectedEntries.has(entry.id)) {\n        driveState().selectEntries([entry.id]);\n      }\n      driveState().setContextMenuData({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  return <BaseFileGridItem {...mergeProps(draggableProps, droppableProps, pressProps, {\n    onKeyDown: createEventHandler(keyboardHandler)\n  })} ref={ref} entry={entry} isSelected={isSelected} isMobileMode={!!isMobileMode} tabIndex={-1} onDoubleClick={e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!isMobileMode) {\n      performViewItemAction(entry);\n    }\n  }} footerAdornment={isMobileMode && <FooterAdornment entry={entry} isSelected={isSelected} />} onContextMenu={createEventHandler(contextMenuHandler)} className={itemClassName} />;\n}\nfunction FooterAdornment({\n  entry,\n  isSelected\n}) {\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\n  if (anySelected) {\n    return <Checkbox className=\"mr-8 block\" checked={isSelected} />;\n  }\n  return <EntryActionMenuTrigger entries={[entry]}>\n      <IconButton className=\"text-muted\" onPointerDown={e => {\n      e.stopPropagation();\n    }}>\n        <MoreVertIcon />\n      </IconButton>\n    </EntryActionMenuTrigger>;\n}","import { FileGridItem } from './file-grid-item';\nimport React from 'react';\nexport function FileGrid({\n  entries\n}) {\n  return <div className=\"file-grid-container\">\n      <div className=\"file-grid\">\n        {entries.map(entry => {\n        return <FileGridItem key={entry.id} entry={entry} />;\n      })}\n      </div>\n    </div>;\n}","import { message } from '@ui/i18n/message';\nexport const AVAILABLE_SORTS = [{\n  id: 'file_size',\n  label: message('Size')\n}, {\n  id: 'name',\n  label: message('Name')\n}, {\n  id: 'updated_at',\n  label: message('Last modified')\n}, {\n  id: 'created_at',\n  label: message('Upload date')\n}, {\n  id: 'type',\n  label: message('Type')\n}, {\n  id: 'extension',\n  label: message('Extension')\n}];","import { AVAILABLE_SORTS } from './available-sorts';\nimport { Button } from '@ui/buttons/button';\nimport { SortIcon } from '@ui/icons/material/Sort';\nimport { Trans } from '@ui/i18n/trans';\nimport { Menu, MenuItem, MenuSection, MenuTrigger } from '@ui/menu/menu-trigger';\nexport function EntriesSortButton({\n  descriptor,\n  onChange,\n  isDisabled = false\n}) {\n  const column = descriptor.orderBy;\n  const direction = descriptor.orderDir;\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\n  return <MenuTrigger showCheckmark selectionMode=\"multiple\" selectedValue={[direction || 'desc', column || '']} onItemSelected={key => {\n    if (key === 'asc' || key === 'desc') {\n      onChange({\n        orderBy: column,\n        orderDir: key\n      });\n    } else {\n      onChange({\n        orderBy: key,\n        orderDir: direction\n      });\n    }\n  }}>\n      <Button className=\"text-muted\" variant=\"text\" size=\"sm\" startIcon={<SortIcon />} disabled={isDisabled}>\n        {sort ? <Trans {...sort.label} /> : null}\n      </Button>\n      <Menu>\n        <MenuSection label={<Trans message=\"Direction\" />}>\n          <MenuItem value=\"asc\">\n            <Trans message=\"Ascending\" />\n          </MenuItem>\n          <MenuItem value=\"desc\">\n            <Trans message=\"Descending\" />\n          </MenuItem>\n        </MenuSection>\n        <MenuSection label={<Trans message=\"Sort By\" />}>\n          {AVAILABLE_SORTS.map(item => <MenuItem key={item.id} value={item.id}>\n              <Trans {...item.label} />\n            </MenuItem>)}\n        </MenuSection>\n      </Menu>\n    </MenuTrigger>;\n}","import { driveState, useDriveStore } from '../../drive-store';\nimport { EntriesSortButton } from './entries-sort-button';\nimport React from 'react';\nexport function DriveSortButton({\n  isDisabled\n}) {\n  const descriptor = useDriveStore(s => s.sortDescriptor);\n  return <EntriesSortButton isDisabled={isDisabled} descriptor={descriptor} onChange={value => {\n    driveState().setSortDescriptor(value);\n  }} />;\n}","import { useQuery } from '@tanstack/react-query';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nexport function useFolderPath({\n  hash,\n  params,\n  isEnabled = true\n}) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchFolderPath(hash, params),\n    queryFn: () => fetchFolderPath(hash, params),\n    enabled: !!hash && isEnabled\n  });\n}\nfunction fetchFolderPath(hash, params) {\n  return apiClient.get(`folders/${hash}/path`, {\n    params\n  }).then(response => response.data);\n}","import React, { useContext } from 'react';\nimport { useDriveStore } from './drive-store';\nimport { makeFolderPage, RootFolderPage, SharesPage, TrashPage } from './drive-page/drive-page';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { useAuth } from '@common/auth/use-auth';\nimport { useFolderPath } from './files/queries/use-folder-path';\nimport { EntryActionMenuTrigger } from './entry-actions/entry-action-menu-trigger';\nimport { useActiveWorkspace } from '@common/workspace/active-workspace-id-context';\nimport { ButtonBase } from '@ui/buttons/button-base';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { MixedText } from '@ui/i18n/mixed-text';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nexport function PageBreadcrumbs({\n  className\n}) {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const navigate = useNavigate();\n  const page = useDriveStore(s => s.activePage);\n  const folder = page?.folder;\n  const query = useFolderPath({\n    hash: folder?.hash,\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash\n  });\n  const workspace = useActiveWorkspace();\n  const rootItem = useRootItem();\n  // wait until path, folder and workspace load fully\n  const isLoading = !page || !workspace || page.isFolderPage && !folder || query.fetchStatus !== 'idle';\n  let content;\n  if (isLoading) {\n    content = null;\n  } else {\n    const items = rootItem ? [rootItem] : [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          page: makeFolderPage(parent),\n          label: parent.name\n        });\n      });\n    }\n    content = <Breadcrumb className={className} size={isMobileMode ? 'md' : 'lg'} currentIsClickable>\n        {items.map((item, index) => {\n        const isLast = index === items.length - 1;\n        if (!isLast) {\n          return <BreadcrumbItem key={item.page.uniqueId} onSelected={() => {\n            navigate(item.page.path);\n          }}>\n                <MixedText value={item.label} />\n              </BreadcrumbItem>;\n        }\n        return <BreadcrumbItem key={item.page.uniqueId}>\n              {({\n            isMenuItem\n          }) => {\n            if (isMenuItem || !item.page.folder && item.page !== TrashPage) {\n              return <MixedText value={item.label} />;\n            }\n            return <EntryActionMenuTrigger page={item.page} showIfNoActions>\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\n                      <MixedText value={item.label} />\n                      <ArrowDropDownIcon className=\"text-muted icon-md\" />\n                    </ButtonBase>\n                  </EntryActionMenuTrigger>;\n          }}\n            </BreadcrumbItem>;\n      })}\n      </Breadcrumb>;\n  }\n  return content;\n}\nfunction useRootItem() {\n  const page = useDriveStore(s => s.activePage);\n  const workspace = useActiveWorkspace();\n  const {\n    user\n  } = useAuth();\n  if (!page) return null;\n\n  // in workspace\n  if (workspace && !workspace.default) {\n    if (page?.isFolderPage && (page?.name === RootFolderPage.name || page.folder?.workspace_id === workspace.id)) {\n      return {\n        label: workspace.name,\n        page: RootFolderPage\n      };\n    }\n  }\n  if (page?.isFolderPage) {\n    const owner = page.folder?.users.find(u => u.owns_entry);\n    // inside shared folder\n    if (owner?.id !== user?.id) {\n      return {\n        label: SharesPage.label,\n        page: SharesPage\n      };\n    }\n    // if folder is currently active, root item will always be root folder page\n    return {\n      label: RootFolderPage.label,\n      page: RootFolderPage\n    };\n  }\n\n  // if folder page is not active, we are already at the root\n  return {\n    label: page.label,\n    page\n  };\n}","import React, { useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nexport function InfiniteScrollSentinel({\n  query: {\n    isInitialLoading,\n    fetchNextPage,\n    isFetchingNextPage,\n    hasNextPage\n  },\n  children,\n  loaderMarginTop = 'mt-24',\n  style,\n  className,\n  variant: _variant = 'infiniteScroll',\n  loadMoreExtraContent,\n  size = 'sm'\n}) {\n  const sentinelRef = useRef(null);\n  const isLoading = isFetchingNextPage || isInitialLoading;\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\n  const innerVariant = _variant === 'loadMore' && loadMoreClickCount < 3 ? 'loadMore' : 'infiniteScroll';\n\n  // don't lazy load unless sentinel has left the view after last lazy load\n  // 1. will prevent lazy loading until initial data is rendered and pushes sentinel out of view\n  // 2. when sentinel is top (chat interface) prevent load until container is scrolled to the bottom\n  // 3. when sentinel is bottom, prevent double lazy load if \"isLoading\" is false, but sentinel is still in view\n  const leftViewAfterLoading = useRef(false);\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl || innerVariant === 'loadMore') return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        if (!leftViewAfterLoading.current) return;\n        if (hasNextPage && !isLoading) {\n          leftViewAfterLoading.current = false;\n          fetchNextPage();\n        }\n      } else {\n        leftViewAfterLoading.current = true;\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\n  let content;\n  if (children) {\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\n    content = isFetchingNextPage ? children : null;\n  } else if (innerVariant === 'loadMore') {\n    content = !isInitialLoading && hasNextPage && <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\n        {loadMoreExtraContent}\n        <Button size={size === 'md' ? 'sm' : 'xs'} className={clsx(size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112')} variant=\"outline\" color=\"primary\" onClick={() => {\n        fetchNextPage();\n        setLoadMoreClickCount(loadMoreClickCount + 1);\n      }} disabled={isLoading}>\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? <Trans message=\"Load all\" /> : <Trans message=\"Show more\" />}\n        </Button>\n      </div>;\n  } else {\n    content = <AnimatePresence>\n        {isFetchingNextPage && <m.div className={clsx('flex w-full justify-center', loaderMarginTop)} {...opacityAnimation}>\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\n          </m.div>}\n      </AnimatePresence>;\n  }\n  return <div style={style} className={clsx('w-full', className, hasNextPage && 'min-h-36')} role=\"presentation\">\n      <div ref={sentinelRef} aria-hidden />\n      {content}\n    </div>;\n}","import { AnimatePresence, m } from 'framer-motion';\nimport { Trans } from '@ui/i18n/trans';\nimport React from 'react';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nexport function DropTargetMask({\n  isVisible\n}) {\n  const mask = <m.div key=\"dragTargetMask\" {...opacityAnimation} transition={{\n    duration: 0.3\n  }} className=\"pointer-events-none absolute inset-0 min-h-full w-full border-2 border-dashed border-primary bg-primary-light/30\">\n      <m.div initial={{\n      y: '100%',\n      opacity: 0\n    }} animate={{\n      y: '-10px',\n      opacity: 1\n    }} exit={{\n      y: '100%',\n      opacity: 0\n    }} className=\"fixed bottom-0 left-0 right-0 mx-auto max-w-max rounded bg-primary p-10 text-on-primary\">\n        <Trans message=\"Drop files to upload them to this folder.\" />\n      </m.div>\n    </m.div>;\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\n}","import React, { useContext, useRef, useState } from 'react';\nimport { usePaginatedEntries } from '../files/queries/use-paginated-entries';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { SearchFilterList } from '../search/search-filter-list';\nimport { Trans } from '@ui/i18n/trans';\nimport { useMouseSelectionBox } from '@ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\nimport { useDroppable } from '@ui/interactions/dnd/use-droppable';\nimport { mergeProps } from '@react-aria/utils';\nimport { useDriveUploadQueue } from '../uploading/use-drive-upload-queue';\nimport { EntryActionList } from '../entry-actions/entry-action-list';\nimport { DriveContextMenu } from '../files/drive-context-menu';\nimport { FileTable } from './file-table/file-table';\nimport { FileGrid } from './file-grid/file-grid';\nimport { DriveSortButton } from '../layout/sorting/drive-sort-button';\nimport { PageBreadcrumbs } from '../page-breadcrumbs';\nimport { InfiniteScrollSentinel } from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport { useEntries } from '../files/queries/use-entries';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { DropTargetMask } from '../drop-target-mask';\nimport { useSearchParams } from 'react-router';\nimport clsx from 'clsx';\nimport { useDeleteEntries } from '@app/drive/files/queries/use-delete-entries';\nimport { TrashPage } from '@app/drive/drive-page/drive-page';\nimport { getSelectedEntries } from '@app/drive/files/use-selected-entries';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nimport { isCtrlKeyPressed } from '@ui/utils/keybinds/is-ctrl-key-pressed';\nimport { createEventHandler } from '@ui/utils/dom/create-event-handler';\nexport function FileView({\n  className\n}) {\n  const [params] = useSearchParams();\n  const isSearchingOrFiltering = !!params.get('query') || !!params.get('filters');\n  const containerRef = useRef(null);\n  const query = usePaginatedEntries();\n  const entries = useEntries();\n  const {\n    uploadFiles\n  } = useDriveUploadQueue();\n  const deleteEntries = useDeleteEntries();\n  const activePage = useDriveStore(s => s.activePage);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const viewMode = useDriveStore(s => s.viewMode);\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const {\n    containerProps,\n    boxProps\n  } = useMouseSelectionBox({\n    containerRef,\n    onPointerDown: e => {\n      if (!e.target.closest('.entry-action-list')) {\n        driveState().deselectEntries('all');\n      }\n    }\n  });\n  const {\n    droppableProps\n  } = useDroppable({\n    id: 'driveRoot',\n    ref: containerRef,\n    types: ['nativeFile'],\n    disabled: !activePage?.canUpload,\n    onDragEnter: () => {\n      setIsDragOver(true);\n    },\n    onDragLeave: () => {\n      setIsDragOver(false);\n    },\n    onDrop: async draggable => {\n      if (draggable.type === 'nativeFile') {\n        uploadFiles(await draggable.getData());\n      }\n    }\n  });\n  if (!activePage) return null;\n  let content;\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\n    const noContentMessage = activePage.noContentMessage(isSearchingOrFiltering);\n    content = <IllustratedMessage className=\"mt-40\" image={<SvgImage src={noContentMessage.image} />} title={<Trans {...noContentMessage.title} />} description={<Trans {...noContentMessage.description} />} />;\n  } else if (!query.isLoading) {\n    content = viewMode === 'list' ? <FileTable entries={entries} /> : <FileGrid entries={entries} />;\n  }\n  const handleContextMenu = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    driveState().deselectEntries('all');\n    driveState().setContextMenuData({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n  const handleKeybinds = e => {\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      driveState().selectEntries(entries.map(entry => entry.id));\n    }\n    if (e.key === 'Delete') {\n      e.preventDefault();\n      e.stopPropagation();\n      if (driveState().selectedEntries.size && !deleteEntries.isPending) {\n        if (activePage === TrashPage) {\n          driveState().setActiveActionDialog('confirmAndDeleteForever', getSelectedEntries());\n        } else {\n          deleteEntries.mutate({\n            entryIds: [...driveState().selectedEntries],\n            deleteForever: activePage === TrashPage\n          });\n          driveState().selectEntries([]);\n        }\n      }\n    }\n  };\n  return <div className={clsx('relative outline-none', className)} tabIndex={-1} {...mergeProps(containerProps, droppableProps, {\n    onKeyDown: createEventHandler(handleKeybinds)\n  })} onContextMenu={handleContextMenu}>\n      <div className=\"relative flex min-h-full flex-col pt-10\">\n        {isMobileMode ? <PageBreadcrumbs className=\"mb-10 px-14\" /> : <Toolbar />}\n        <SearchFilterList />\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\n          <AdHost slot=\"drive\" className=\"mb-24\" />\n          {content}\n          <InfiniteScrollSentinel query={query} />\n        </div>\n        <div {...boxProps} className=\"pointer-events-none absolute left-0 top-0 z-10 hidden border border-primary-light bg-primary-light/20 shadow-md\" />\n        <DriveContextMenu />\n        <DropTargetMask isVisible={isDragOver} />\n      </div>\n    </div>;\n}\nfunction Toolbar() {\n  const activePage = useDriveStore(s => s.activePage);\n  return <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\n      <DriveSortButton isDisabled={activePage?.disableSort} />\n      <EntryActionList className=\"text-muted\" />\n    </div>;\n}","export function formatSpeed(bytesPerSecond) {\n  if (bytesPerSecond === 0) return '';\n  const units = ['B/s', 'KB/s', 'MB/s', 'GB/s'];\n  let size = bytesPerSecond;\n  let unitIndex = 0;\n  while (size >= 1024 && unitIndex < units.length - 1) {\n    size /= 1024;\n    unitIndex++;\n  }\n  return `${size.toFixed(1)} ${units[unitIndex]}`;\n}\nexport function formatETA(seconds) {\n  if (seconds === 0 || !isFinite(seconds)) return '';\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const secs = Math.floor(seconds % 60);\n  if (hours > 0) {\n    return `${hours}h ${minutes}m ${secs}s`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${secs}s`;\n  } else {\n    return `${secs}s`;\n  }\n}\nexport function formatETAShort(seconds) {\n  if (seconds === 0 || !isFinite(seconds)) return '';\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const secs = Math.floor(seconds % 60);\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  } else if (minutes > 0) {\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  } else {\n    return `${secs}s`;\n  }\n}","import { useMemo } from 'react';\nimport { useFileUploadStore } from './file-upload-provider';\nimport { formatSpeed, formatETA } from './upload-analytics-utils';\n/**\n * Custom hook that provides upload analytics for a specific file\n */\nexport function useUploadAnalytics(fileId) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(fileId));\n  return useMemo(() => {\n    const percentage = fileUpload?.percentage || 0;\n    const bytesUploaded = fileUpload?.bytesUploaded || 0;\n    const speed = fileUpload?.speed || 0;\n    const eta = fileUpload?.eta || 0;\n    const status = fileUpload?.status || 'pending';\n    return {\n      percentage,\n      bytesUploaded,\n      speed,\n      eta,\n      speedFormatted: formatSpeed(speed),\n      etaFormatted: formatETA(eta),\n      status\n    };\n  }, [fileUpload?.percentage, fileUpload?.bytesUploaded, fileUpload?.speed, fileUpload?.eta, fileUpload?.status]);\n}","import { memo, useMemo, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { CheckCircleIcon } from '@ui/icons/material/CheckCircle';\nimport { useFileUploadStore } from '@common/uploads/uploader/file-upload-provider';\nimport { Trans } from '@ui/i18n/trans';\nimport { MixedText } from '@ui/i18n/mixed-text';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { ErrorIcon } from '@ui/icons/material/Error';\nimport { WarningIcon } from '@ui/icons/material/Warning';\nimport { RefreshIcon } from '@ui/icons/material/Refresh';\nimport { message } from '@ui/i18n/message';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nimport { useUploadAnalytics } from '@common/uploads/uploader/use-upload-analytics';\nexport const UploadQueueItem = memo(({\n  file,\n  style\n}) => {\n  return <div className=\"absolute left-0 top-0 flex w-full items-center gap-14 p-10\" style={style}>\n      <div className=\"shrink-0 rounded border p-8\">\n        <FileTypeIcon className=\"h-22 w-22\" mime={file.mime} />\n      </div>\n      <div className=\"min-w-0 flex-auto pr-10\">\n        <div className=\"mb-2 flex min-w-0 items-center gap-10\">\n          <div className=\"min-w-0 flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {file.name}\n          </div>\n        </div>\n        <SizeInfo file={file} />\n      </div>\n      <div className=\"mr-10\">\n        <FileStatus file={file} />\n      </div>\n    </div>;\n});\nfunction SizeInfo({\n  file\n}) {\n  const analytics = useUploadAnalytics(file.id);\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\n  const uploadedBytes = useMemo(() => prettyBytes(analytics.bytesUploaded), [analytics.bytesUploaded]);\n  let statusMessage;\n  if (analytics.status === 'completed') {\n    statusMessage = <Trans message=\"Upload complete\" />;\n  } else if (analytics.status === 'aborted') {\n    statusMessage = <Trans message=\"Upload cancelled\" />;\n  } else if (analytics.status === 'failed') {\n    const retryCount = fileUpload?.retryCount || 0;\n    const maxRetries = fileUpload?.maxRetries || 0;\n    const canRetry = (fileUpload?.errorType === 'network' || fileUpload?.errorType === 'server') && retryCount < maxRetries;\n    let failureMessage = 'Upload failed';\n    if (fileUpload?.errorType === 'network') {\n      failureMessage = 'Network error - check your connection';\n    } else if (fileUpload?.errorType === 'server') {\n      failureMessage = 'Server error - please try again';\n    } else if (fileUpload?.errorType === 'validation') {\n      failureMessage = 'File validation failed';\n    }\n    if (canRetry && retryCount > 0) {\n      failureMessage += ` (Attempt ${retryCount}/${maxRetries})`;\n    }\n    statusMessage = <div className=\"flex items-center gap-4\">\n        <Trans message={failureMessage} />\n        {canRetry && <span className=\"text-primary\">• Click retry button</span>}\n      </div>;\n  } else {\n    const {\n      speedFormatted,\n      etaFormatted\n    } = analytics;\n    if (fileUpload?.isRetrying) {\n      const retryCount = fileUpload?.retryCount || 0;\n      statusMessage = <Trans message=\"Retrying... (Attempt :attempt)\" values={{\n        attempt: retryCount\n      }} />;\n    } else {\n      statusMessage = <div className=\"flex items-center gap-4\">\n          <Trans message=\":bytesUploaded of :totalBytes\" values={{\n          bytesUploaded: uploadedBytes,\n          totalBytes\n        }} />\n          {speedFormatted && <span>-</span>}\n          <span>{speedFormatted}</span>\n          {etaFormatted && <span>-</span>}\n          <span>{etaFormatted}</span>\n        </div>;\n    }\n  }\n  return <div className=\"text-xs text-muted\">{statusMessage}</div>;\n}\nfunction FileStatus({\n  file\n}) {\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\n  const retryUpload = useFileUploadStore(s => s.retryUpload);\n  const analytics = useUploadAnalytics(file.id);\n  const errorMessage = fileUpload?.errorMessage;\n  const [isHovered, setIsHovered] = useState(false);\n  const abortButton = <IconButton size=\"xs\" iconSize=\"sm\" onClick={() => {\n    abortUpload(file.id);\n  }}>\n      <CloseIcon />\n    </IconButton>;\n  const progressButton = <ProgressCircle aria-label=\"Upload progress\" size=\"w-24 h-24\" value={analytics.percentage} trackWidth={3} />;\n  const retryButton = <Tooltip label=\"Retry Upload\">\n        <IconButton size=\"xs\" iconSize=\"sm\" onClick={() => retryUpload(file.id)}>\n        <RefreshIcon />\n        </IconButton>\n    </Tooltip>;\n  let statusButton;\n  if (analytics.status === 'failed') {\n    const errMessage = errorMessage || message('This file could not be uploaded');\n    const canRetry = fileUpload?.errorType === 'network' || fileUpload?.errorType === 'server';\n    statusButton = <AnimatedStatus>\n          <Tooltip variant=\"danger\" label={<MixedText value={`${errMessage} (Error code: ${fileUpload?.errorCode || 'N/A'})`} />}>\n            {canRetry ? retryButton : <ErrorIcon className=\"text-danger\" size=\"md\" />}\n          </Tooltip>\n        </AnimatedStatus>;\n  } else if (analytics.status === 'aborted') {\n    statusButton = <AnimatedStatus>\n        <WarningIcon className=\"text-warning\" size=\"md\" />\n      </AnimatedStatus>;\n  } else if (analytics.status === 'completed') {\n    statusButton = <AnimatedStatus>\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\n      </AnimatedStatus>;\n  } else {\n    statusButton = <AnimatedStatus onPointerEnter={e => {\n      if (e.pointerType === 'mouse') {\n        setIsHovered(true);\n      }\n    }} onPointerLeave={e => {\n      if (e.pointerType === 'mouse') {\n        setIsHovered(false);\n      }\n    }}>\n        {isHovered ? abortButton : progressButton}\n      </AnimatedStatus>;\n  }\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\n}\nfunction AnimatedStatus({\n  children,\n  ...domProps\n}) {\n  return <m.div {...domProps} initial={{\n    scale: 0,\n    opacity: 0\n  }} animate={{\n    scale: 1,\n    opacity: 1\n  }} exit={{\n    scale: 0,\n    opacity: 0\n  }}>\n      {children}\n    </m.div>;\n}","import { useRef } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { useFileUploadStore } from '@common/uploads/uploader/file-upload-provider';\nimport { Trans } from '@ui/i18n/trans';\nimport { UploadQueueItem } from './upload-queue-item';\nimport { useVirtualizer } from '@tanstack/react-virtual';\nexport function UploadQueue() {\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\n  return <AnimatePresence>\n      {isOpen && <m.div key=\"upload-queue\" className=\"fixed bottom-16 right-16 z-modal w-375 rounded border bg text-sm shadow-xl\" initial={{\n      y: '100%',\n      opacity: 0\n    }} animate={{\n      y: 0,\n      opacity: 1\n    }} exit={{\n      y: '100%',\n      opacity: 0\n    }}>\n          <Header />\n          <UploadList />\n        </m.div>}\n    </AnimatePresence>;\n}\nexport function Header() {\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\n  const completedUploadsCount = useFileUploadStore(s => s.completedUploadsCount);\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\n  let message;\n  if (inProgressUploadsCount) {\n    message = <Trans message=\"Uploading :count files\" values={{\n      count: inProgressUploadsCount\n    }} />;\n  } else if (completedUploadsCount) {\n    message = <Trans message=\"Uploaded :count files\" values={{\n      count: completedUploadsCount\n    }} />;\n  } else {\n    message = <Trans message=\"No active uploads\" />;\n  }\n\n  // only allow closing upload queue if there are no active uploads\n  return <div className=\"flex min-h-[45px] items-center justify-between gap-10 border-b bg-alt px-10 py-4\">\n      {message}\n      {inProgressUploadsCount === 0 ? <IconButton size=\"sm\" onClick={() => {\n      driveState().setUploadQueueIsOpen(false);\n      // wait for upload queue panel animation to complete, then clear inactive uploads\n      setTimeout(() => {\n        clearInactive();\n      }, 200);\n    }}>\n          <CloseIcon />\n        </IconButton> : undefined}\n    </div>;\n}\nfunction UploadList() {\n  const uploads = useFileUploadStore(s => s.fileUploads);\n  const uploadsArray = [...uploads.values()];\n  const ref = useRef(null);\n  const virtualizer = useVirtualizer({\n    count: uploads.size,\n    getScrollElement: () => ref.current,\n    estimateSize: () => 60,\n    overscan: 4\n  });\n  return <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\n      <div className=\"relative w-full\" style={{\n      height: `${virtualizer.getTotalSize()}px`\n    }}>\n        {virtualizer.getVirtualItems().map(virtualItem => {\n        const upload = uploadsArray[virtualItem.index];\n        return <UploadQueueItem style={{\n          height: `${virtualItem.size}px`,\n          transform: `translateY(${virtualItem.start}px)`\n        }} key={upload.file.id} file={upload.file} />;\n      })}\n      </div>\n    </div>;\n}","export default \"__VITE_ASSET__6b065fb0__\"","import React, { useContext } from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nexport function DetailsSidebarHeader({\n  entryType,\n  entryName\n}) {\n  const {\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  return <div className=\"mb-38 flex items-center gap-16 text-text-main\">\n      <FileTypeIcon className=\"h-24 w-24\" type={entryType} />\n      <div className=\"mr-auto min-w-0 flex-auto text-ellipsis break-words text-xl font-normal\">\n        {entryName}\n      </div>\n      <IconButton size=\"md\" className=\"flex-shrink-0\" onClick={() => {\n      setRightSidenavStatus('closed');\n    }}>\n        <CloseIcon />\n      </IconButton>\n    </div>;\n}","import React from 'react';\nimport clsx from 'clsx';\nexport function DetailsSidebarSectionHeader({\n  children,\n  margin = 'mb-20'\n}) {\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nexport function useTaggableTags(params) {\n  return useQuery({\n    queryKey: getQueryKey(params),\n    queryFn: () => fetchTaggableTags(params),\n    initialData: params.initialData ? {\n      tags: params.initialData\n    } : undefined\n  });\n}\nfunction getQueryKey(params) {\n  const {\n    taggableType,\n    taggableId,\n    type,\n    notType\n  } = params;\n  const key = ['tags', 'taggable', taggableType, `${taggableId}`];\n  if (type != null) {\n    key.push(type);\n  }\n  if (notType != null) {\n    key.push(notType);\n  }\n  return key;\n}\nexport function invalidateTaggableTagsQuery({\n  taggableType,\n  taggableIds\n}) {\n  return Promise.allSettled(taggableIds.map(taggableId => queryClient.invalidateQueries({\n    queryKey: getQueryKey({\n      taggableType,\n      taggableId\n    })\n  })));\n}\nasync function fetchTaggableTags({\n  taggableType,\n  taggableId,\n  notType,\n  type\n}) {\n  return apiClient.get(`taggable/${taggableType}/${taggableId}/list-tags`, {\n    params: {\n      notType,\n      type\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { invalidateTaggableTagsQuery } from '@common/tags/use-taggable-tags';\nexport function useDetachTagFromTaggables() {\n  return useMutation({\n    mutationFn: payload => detachTag(payload),\n    onSuccess: (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction detachTag(payload) {\n  return apiClient.post(`taggable/detach-tag`, payload).then(r => r.data);\n}","import { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nexport function useTags(params) {\n  return useQuery({\n    queryKey: ['tags', params],\n    queryFn: ({\n      signal\n    }) => fetchTags(params, signal),\n    placeholderData: keepPreviousData\n  });\n}\nasync function fetchTags(params, signal) {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient.get(`tags`, {\n    params: {\n      paginate: 'simple',\n      ...params\n    },\n    signal: params.query ? signal : undefined\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { invalidateTaggableTagsQuery } from '@common/tags/use-taggable-tags';\nexport function useAttachTagToTaggables() {\n  return useMutation({\n    mutationFn: payload => attachTag(payload),\n    onSuccess: async (_, payload) => {\n      invalidateTaggableTagsQuery(payload);\n    },\n    onError: err => showHttpErrorToast(err)\n  });\n}\nfunction attachTag(payload) {\n  return apiClient.post(`taggable/attach-tag`, payload).then(r => r.data);\n}","import { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { List, ListItem } from '@ui/list/list';\nimport { useTags } from '@common/tags/use-tags';\nimport { PushPinIcon } from '@ui/icons/material/PushPin';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { CheckIcon } from '@ui/icons/material/Check';\nimport clsx from 'clsx';\nimport { useMemo, useState } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { useDetachTagFromTaggables } from '@common/tags/use-detach-tag-from-taggables';\nimport { useAttachTagToTaggables } from '@common/tags/use-attach-tag-to-taggables';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nexport function ManageTagsDialog({\n  attachedTags: propsAttachedTags,\n  tagType,\n  notTagType,\n  taggableType,\n  taggableIds,\n  userId,\n  isLoading,\n  onChange\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [query, setQuery] = useState('');\n  const {\n    data,\n    isPlaceholderData,\n    isLoading: queryIsLoading\n  } = useTags({\n    type: tagType,\n    notType: notTagType,\n    query,\n    userId\n  });\n  const detachTag = useDetachTagFromTaggables();\n  const attachTag = useAttachTagToTaggables();\n\n  // if all tags does not include tag in attached tags, add it to the top\n  const {\n    tags,\n    attachedTagIds\n  } = useMemo(() => {\n    const allTags = data?.pagination.data || [];\n    const attachedTags = propsAttachedTags || [];\n    const attachedTagIds = attachedTags.map(tag => tag.id);\n    const tags = allTags.filter(tag => !attachedTagIds.includes(tag.id));\n    tags.unshift(...attachedTags);\n    return {\n      tags,\n      attachedTagIds\n    };\n  }, [propsAttachedTags, data]);\n  return <Dialog>\n      <DialogBody padding=\"p-8\">\n        <form>\n          <TextField placeholder={trans({\n          message: 'Type tag name...'\n        })} inputBorder=\"border-b\" inputRadius=\"rounded-none\" inputRing=\"ring-0\" inputShadow=\"shadow-none\" startAdornment={<SearchIcon />} value={query} onChange={e => setQuery(e.target.value)} endAdornment={isPlaceholderData && <ProgressCircle isIndeterminate size=\"w-24 h-24\" />} />\n        </form>\n        <List className=\"compact-scrollbar h-320 overflow-y-auto stable-scrollbar\">\n          {tags.map(tag => {\n          const isAttached = attachedTagIds.includes(tag.id);\n          const isDisabled = attachTag.isPending || detachTag.isPending || isLoading;\n          return <ListItem isDisabled={isDisabled} onSelected={() => {\n            if (isAttached) {\n              detachTag.mutate({\n                tagId: tag.id,\n                taggableIds,\n                taggableType\n              }, {\n                onSuccess: () => onChange?.(tag.id)\n              });\n            } else {\n              attachTag.mutate({\n                taggableType,\n                taggableIds,\n                tagName: tag.name,\n                userId,\n                tagType\n              }, {\n                onSuccess: () => onChange?.(tag.id)\n              });\n            }\n          }} className={clsx(isAttached && (isDisabled ? 'text-primary-light' : 'text-primary'))} startIcon={<PushPinIcon size=\"xs\" />} key={tag.id} endSection={isAttached ? <CheckIcon size=\"sm\" className=\"block text-primary\" /> : <div className=\"h-20 w-20\" />}>\n                {tag.display_name || tag.name}\n              </ListItem>;\n        })}\n          {!isPlaceholderData && !data?.pagination.data.length && query && <ListItem startIcon={<PushPinIcon size=\"xs\" />} onSelected={() => {\n          attachTag.mutate({\n            taggableType,\n            taggableIds,\n            tagName: query,\n            userId,\n            tagType\n          }, {\n            onSuccess: r => {\n              setQuery('');\n              onChange?.(r.tag.id);\n            }\n          });\n        }}>\n              <Trans message={`Create tag \":name\"`} values={{\n            name: query\n          }} />\n            </ListItem>}\n          {data && !tags.length && !query && <li className=\"text-center text-muted\">\n              <Trans message=\"No tags found\" />\n            </li>}\n          {queryIsLoading && <li className=\"flex justify-center\">\n              <ProgressCircle isIndeterminate size=\"w-24 h24\" />\n            </li>}\n        </List>\n      </DialogBody>\n    </Dialog>;\n}","import { DetailsSidebarSectionHeader } from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport { Trans } from '@ui/i18n/trans';\nimport React from 'react';\nimport { useDetachTagFromTaggables } from '@common/tags/use-detach-tag-from-taggables';\nimport { useTaggableTags } from '@common/tags/use-taggable-tags';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { Button } from '@ui/buttons/button';\nimport { ManageTagsDialog } from '@common/tags/manage-tags-dialog';\nimport { ChipList } from '@ui/forms/input-field/chip-field/chip-list';\nimport { Chip } from '@ui/forms/input-field/chip-field/chip';\nimport { AddIcon } from '@ui/icons/material/Add';\nimport { useAuth } from '@common/auth/use-auth';\nexport function DetailsSidebarTags({\n  entry\n}) {\n  const {\n    user\n  } = useAuth();\n  const detachTag = useDetachTagFromTaggables();\n  const {\n    data,\n    isFetching\n  } = useTaggableTags({\n    taggableType: 'fileEntry',\n    taggableId: entry.id,\n    initialData: entry.tags?.filter(tag => tag.type !== 'label'),\n    type: 'custom'\n  });\n  return <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\n        <Trans message=\"Tags\" />\n      </DetailsSidebarSectionHeader>\n      <div className=\"flex items-center gap-8\">\n        <ChipList size=\"sm\" radius=\"rounded-button\" startButton={<DialogTrigger type=\"modal\">\n              <Button variant=\"outline\" startIcon={<AddIcon />} size=\"2xs\" className=\"min-h-26\">\n                <Trans message=\"Add tag\" />\n              </Button>\n              <ManageTagsDialog attachedTags={data?.tags} isLoading={isFetching} tagType=\"custom\" taggableType=\"fileEntry\" taggableIds={[entry.id]} userId={user?.id} />\n            </DialogTrigger>}>\n          {data?.tags.map(tag => <Chip key={tag.id} disabled={detachTag.isPending || isFetching} onRemove={() => {\n          detachTag.mutate({\n            tagId: tag.id,\n            taggableIds: [entry.id],\n            taggableType: 'fileEntry'\n          });\n        }}>\n              {tag.display_name || tag.name}\n            </Chip>)}\n        </ChipList>\n      </div>\n    </div>;\n}","import { useSelectedEntryParent } from '@app/drive/files/use-selected-entries';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nimport React, { useMemo } from 'react';\nimport { Trans } from '@ui/i18n/trans';\nimport { Button } from '@ui/buttons/button';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { getPathForFolder, RootFolderPage } from '@app/drive/drive-page/drive-page';\nimport { FormattedDate } from '@ui/i18n/formatted-date';\nimport { GroupsIcon } from '@ui/icons/material/Groups';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { driveState } from '@app/drive/drive-store';\nimport { DetailsSidebarHeader } from '@app/drive/details-sidebar/details-sidebar-header';\nimport { DetailsSidebarSectionHeader } from '@app/drive/details-sidebar/details-sidebar-section-header';\nimport { DetailsSidebarTags } from '@app/drive/details-sidebar/details-sidebar-tags';\nimport { FileThumbnail } from '@common/uploads/components/file-type-icon/file-thumbnail';\nimport { Avatar } from '@ui/avatar/avatar';\nimport { prettyBytes } from '@ui/utils/files/pretty-bytes';\nexport function DetailsSidebarProperties({\n  entry\n}) {\n  return <div>\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\n      {entry.type === 'image' && <FileThumbnail className=\"mb-20\" file={entry} />}\n      <div>\n        <DetailsSidebarSectionHeader>\n          <Trans message=\"Who has access\" />\n        </DetailsSidebarSectionHeader>\n        <div className=\"flex items-center gap-14\">\n          {entry.workspace_id ? <div className=\"flex h-32 w-32 items-center justify-center rounded-full border\">\n              <GroupsIcon className=\"icon-md\" />\n            </div> : null}\n          {entry.users.map(user => <Tooltip label={user.name} key={user.id}>\n              <Avatar src={user.image} size=\"md\" circle />\n            </Tooltip>)}\n        </div>\n        {entry.permissions['files.update'] && <Button className=\"mt-20 block\" variant=\"link\" color=\"primary\" onClick={() => {\n        driveState().setActiveActionDialog('share', [entry]);\n      }}>\n            <Trans message=\"Manage Access\" />\n          </Button>}\n      </div>\n      <PropertyList entry={entry} />\n      <DetailsSidebarTags entry={entry} />\n    </div>;\n}\nfunction PropertyList({\n  entry\n}) {\n  const parent = useSelectedEntryParent();\n  const navigate = useNavigate();\n  const owner = entry.users.find(user => user.owns_entry);\n  const prettySize = useMemo(() => prettyBytes(entry.file_size), [entry.file_size]);\n  return <div className=\"mt-20 border-t pt-20\">\n      <DetailsSidebarSectionHeader>\n        <Trans message=\"Properties\" />\n      </DetailsSidebarSectionHeader>\n      <PropertyItem label={<Trans message=\"Type\" />} value={<span className=\"capitalize\">\n            <Trans message={entry.type} />\n          </span>} />\n      <PropertyItem label={<Trans message=\"Size\" />} value={entry.file_size ? prettySize : '-'} />\n      <PropertyItem label={<Trans message=\"Location\" />} value={<Button variant=\"link\" startIcon={<FolderIcon />} onClick={() => {\n      navigate(parent ? getPathForFolder(parent.hash) : RootFolderPage.path);\n    }}>\n            {parent ? parent.name : <Trans message=\"Root\" />}\n          </Button>} />\n      {owner && <PropertyItem label={<Trans message=\"Owner\" />} value={owner.name} />}\n      <PropertyItem label={<Trans message=\"Modified\" />} value={<FormattedDate date={entry.updated_at} />} />\n      <PropertyItem label={<Trans message=\"Created\" />} value={<FormattedDate date={entry.updated_at} />} />\n    </div>;\n}\nfunction PropertyItem({\n  label,\n  value\n}) {\n  return <div className=\"mb-14 flex items-center\">\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\n    </div>;\n}","import React, { Fragment } from 'react';\nimport { useSelectedEntry } from '../files/use-selected-entries';\nimport { Trans } from '@ui/i18n/trans';\nimport detailedExamination from './detailed-examination.svg';\nimport clsx from 'clsx';\nimport { DetailsSidebarHeader } from '@app/drive/details-sidebar/details-sidebar-header';\nimport { DetailsSidebarProperties } from '@app/drive/details-sidebar/details-sidebar-properties';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function DetailsSidebar({\n  className\n}) {\n  const selectedEntry = useSelectedEntry();\n  return <div className={clsx(className, 'h-full overflow-y-auto border-l bg p-18 text-sm text-muted')}>\n      {selectedEntry ? <DetailsSidebarProperties entry={selectedEntry} /> : <NothingSelected />}\n    </div>;\n}\nfunction NothingSelected() {\n  return <Fragment>\n      <DetailsSidebarHeader entryType=\"folder\" entryName={<Trans message=\"All files\" />} />\n      <IllustratedMessage image={<SvgImage src={detailedExamination} />} description={<Trans message=\"Select file or folder to see details here\" />} />\n    </Fragment>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { apiClient } from '@common/http/query-client';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nexport function useRenameEntry(form) {\n  return useMutation({\n    mutationFn: payload => renameEntry(payload),\n    onSuccess: (r, p) => {\n      invalidateEntryQueries();\n      toast(message(':oldName renamed to :newName', {\n        values: {\n          oldName: p.initialName,\n          newName: r.fileEntry.name\n        }\n      }));\n    },\n    onError: err => onFormQueryError(err, form)\n  });\n}\nfunction renameEntry({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}`, payload).then(response => response.data);\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useRenameEntry } from '../queries/use-rename-entry';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { Form } from '@ui/forms/form';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nexport function RenameEntryDialog({\n  entries\n}) {\n  const {\n    close,\n    formId\n  } = useDialogContext();\n  const initialName = entries[0]?.name;\n  const form = useForm({\n    defaultValues: {\n      name: initialName\n    }\n  });\n  const renameEntry = useRenameEntry(form);\n  const onSubmit = e => {\n    renameEntry.mutate({\n      entryId: entries[0].id,\n      name: e.name,\n      initialName\n    }, {\n      onSuccess: close\n    });\n  };\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"Rename\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField placeholder=\"Enter a name...\" aria-label=\"Entry name\" autoFocus name=\"name\" required minLength={3} maxLength={200} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} type=\"submit\" variant=\"flat\" color=\"primary\" disabled={renameEntry.isPending || !form.formState.isDirty}>\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nfunction createFolder({\n  name,\n  parentId\n}) {\n  return apiClient.post('folders', {\n    name,\n    parentId: parentId === 0 ? null : parentId\n  }).then(response => response.data);\n}\nexport function useCreateFolder(form) {\n  return useMutation({\n    mutationFn: ({\n      name,\n      parentId\n    }) => {\n      return createFolder({\n        name,\n        parentId\n      });\n    },\n    onSuccess: () => invalidateEntryQueries(),\n    onError: r => onFormQueryError(r, form)\n  });\n}","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { toast } from '@ui/toast/toast';\nimport { Form } from '@ui/forms/form';\nimport { useCreateFolder } from '../queries/create-folder';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { message } from '@ui/i18n/message';\nimport { useTrans } from '@ui/i18n/use-trans';\nexport function NewFolderDialog({\n  parentId\n}) {\n  const {\n    close,\n    formId\n  } = useDialogContext();\n  const {\n    trans\n  } = useTrans();\n  const form = useForm({\n    defaultValues: {\n      name: trans({\n        message: 'Untitled Folder'\n      })\n    }\n  });\n  const createFolder = useCreateFolder(form);\n  const onSubmit = value => {\n    createFolder.mutate({\n      ...value,\n      parentId\n    }, {\n      onSuccess: response => {\n        close(response.folder);\n        toast(message('Folder created'));\n      }\n    });\n  };\n  return <Dialog>\n      <DialogHeader>\n        <Trans message=\"New Folder\" />\n      </DialogHeader>\n      <DialogBody>\n        <Form onSubmit={onSubmit} form={form} id={formId}>\n          <FormTextField placeholder={trans({\n          message: 'Enter a name...'\n        })} aria-label=\"Entry name\" autoFocus autoSelectText name=\"name\" required minLength={3} maxLength={200} />\n        </Form>\n      </DialogBody>\n      <DialogFooter>\n        <Button variant=\"flat\" onClick={() => close()}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button form={formId} type=\"submit\" variant=\"flat\" color=\"primary\" disabled={createFolder.isPending}>\n          <Trans message=\"Create\" />\n        </Button>\n      </DialogFooter>\n    </Dialog>;\n}","import { createElement, Fragment, useState } from 'react';\nimport { useShareAction } from '@app/drive/entry-actions/use-entry-actions';\nimport { Button } from '@ui/buttons/button';\nimport { Trans } from '@ui/i18n/trans';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useEntries } from '@app/drive/files/queries/use-entries';\nimport { FilePreviewDialog } from '@common/uploads/components/file-preview/file-preview-dialog';\nexport function EntryPreviewDialog({\n  selectedEntry\n}) {\n  const files = useEntries().filter(entry => entry.type !== 'folder');\n  const defaultActiveIndex = files.findIndex(file => file.id === selectedEntry?.id);\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\n  return <FilePreviewDialog allowDownload={selectedEntry.permissions['files.download']} headerActionsLeft={<DriveActions activeIndex={activeIndex} entries={files} />} activeIndex={activeIndex} onActiveIndexChange={setActiveIndex} entries={files} />;\n}\nfunction DriveActions({\n  activeIndex,\n  entries\n}) {\n  const selectedEntry = entries[activeIndex];\n  const share = useShareAction([selectedEntry]);\n  if (!selectedEntry || !share) return null;\n  return <Fragment>\n      <IconButton className=\"md:hidden\" onClick={() => {\n      share.execute();\n    }}>\n        {createElement(share.icon)}\n      </IconButton>\n      <Button className=\"max-md:hidden\" variant=\"text\" startIcon={createElement(share.icon)} onClick={() => {\n      share.execute();\n    }}>\n        <Trans {...share.label} />\n      </Button>\n    </Fragment>;\n}","import axios from 'axios';\nimport { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction shareEntry({\n  entryId,\n  ...payload\n}) {\n  return apiClient.post(`file-entries/${entryId}/share`, payload).then(response => response.data);\n}\nexport function useShareEntry() {\n  return useMutation({\n    mutationFn: payload => shareEntry(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n    },\n    onError: err => {\n      if (axios.isAxiosError(err) && err.response) {\n        const response = err.response.data;\n        if (response.errors?.emails) {\n          toast.danger(response.errors?.emails[0]);\n        } else {\n          showHttpErrorToast(err);\n        }\n      }\n    }\n  });\n}","export const DRIVE_ENTRY_FULL_PERMISSIONS = {\n  edit: true,\n  view: true,\n  download: true\n};","import { Button } from '@ui/buttons/button';\nimport { ArrowDropDownIcon } from '@ui/icons/material/ArrowDropDown';\nimport { DRIVE_ENTRY_FULL_PERMISSIONS } from '../files/drive-entry';\nimport { message } from '@ui/i18n/message';\nimport { Trans } from '@ui/i18n/trans';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nexport const PermissionSelectorItems = [{\n  key: 'view',\n  value: {\n    view: true\n  },\n  label: message('Can view')\n}, {\n  key: 'download',\n  value: {\n    view: true,\n    download: true\n  },\n  label: message('Can Download')\n}, {\n  key: 'edit',\n  value: DRIVE_ENTRY_FULL_PERMISSIONS,\n  label: message('Can edit')\n}];\nexport function PermissionSelector({\n  value,\n  onChange,\n  isDisabled\n}) {\n  return <MenuTrigger selectedValue={value.key} selectionMode=\"single\" onSelectionChange={key => {\n    if (key !== value.key) {\n      onChange(PermissionSelectorItems.find(p => p.key === key));\n    }\n  }}>\n      <Button variant=\"flat\" color=\"chip\" size=\"xs\" endIcon={<ArrowDropDownIcon />} disabled={isDisabled}>\n        <Trans {...value.label} />\n      </Button>\n      <Menu>\n        {PermissionSelectorItems.map(item => {\n        return <MenuItem key={item.key} value={item.key}>\n              <Trans {...item.label} />\n            </MenuItem>;\n      })}\n      </Menu>\n    </MenuTrigger>;\n}\nexport function getPermissionItemForUser(user) {\n  const {\n    download,\n    edit\n  } = user.entry_permissions;\n  if (edit) {\n    return PermissionSelectorItems.find(item => item.key === 'edit');\n  }\n  if (download) {\n    return PermissionSelectorItems.find(item => item.key === 'download');\n  }\n  return PermissionSelectorItems.find(item => item.key === 'view');\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { toast } from '@ui/toast/toast';\nimport { invalidateEntryQueries } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nexport function useChangePermission() {\n  return useMutation({\n    mutationFn: payload => changePermission(payload),\n    onSuccess: () => {\n      invalidateEntryQueries();\n      toast(message('Updated user permissions'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not update permissions'))\n  });\n}\nfunction changePermission({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}/change-permissions`, payload).then(response => response.data);\n}","import { useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport clsx from 'clsx';\nimport { getPermissionItemForUser, PermissionSelector } from './permission-selector';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { useChangePermission } from './queries/use-change-permission';\nimport { useUnshareEntries } from './queries/use-unshare-entries';\nimport { Trans } from '@ui/i18n/trans';\nimport { toast } from '@ui/toast/toast';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { UserAvatar } from '@common/auth/user-avatar';\nexport function MemberList({\n  className,\n  entry\n}) {\n  if (!entry) return null;\n  const users = entry.users;\n  return <div className={clsx(className, 'overflow-hidden')}>\n      <div className=\"mb-14 text-sm\">\n        <Trans message=\"Who has access\" />\n      </div>\n      <AnimatePresence initial={false}>\n        {users.map(user => <MemberListItem key={user.id} user={user} entry={entry} />)}\n      </AnimatePresence>\n    </div>;\n}\nfunction MemberListItem({\n  user,\n  entry\n}) {\n  return <m.div initial={{\n    x: '-100%',\n    opacity: 0\n  }} animate={{\n    x: 0,\n    opacity: 1\n  }} exit={{\n    x: '100%',\n    opacity: 0\n  }} transition={{\n    type: 'tween',\n    duration: 0.125\n  }} className=\"mb-20 flex items-center gap-14 text-sm\" key={user.id}>\n      <UserAvatar user={user} circle size=\"w-44 h-44\" />\n      <div>\n        <div>{user.name}</div>\n        <div className=\"text-muted\">{user.email}</div>\n      </div>\n      <div className=\"ml-auto\">\n        {user.owns_entry ? <span className=\"text-muted\">\n            <Trans message=\"Owner\" />\n          </span> : <ActionButtons user={user} entry={entry} />}\n      </div>\n    </m.div>;\n}\nfunction ActionButtons({\n  user,\n  entry\n}) {\n  const changePermissions = useChangePermission();\n  const unshareEntry = useUnshareEntries();\n  const [activePermission, setActivePermission] = useState(() => {\n    return getPermissionItemForUser(user);\n  });\n  return <div className=\"flex items-center gap-10\">\n      <PermissionSelector isDisabled={changePermissions.isPending} onChange={item => {\n      changePermissions.mutate({\n        userId: user.id,\n        permissions: item.value,\n        entryId: entry.id\n      });\n      setActivePermission(item);\n    }} value={activePermission} />\n      <IconButton disabled={unshareEntry.isPending} onClick={() => {\n      unshareEntry.mutate({\n        userId: user.id,\n        entryIds: [entry.id]\n      }, {\n        onSuccess: () => {\n          toast(message('Member removed'));\n        },\n        onError: err => showHttpErrorToast(err, message('Could not remove member'))\n      });\n    }}>\n        <CloseIcon />\n      </IconButton>\n    </div>;\n}","import { useState } from 'react';\nimport { Button } from '@ui/buttons/button';\nimport { useShareEntry } from './queries/use-share-entry';\nimport { PermissionSelector, PermissionSelectorItems } from './permission-selector';\nimport { MemberList } from './member-list';\nimport { ChipField } from '@ui/forms/input-field/chip-field/chip-field';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { Item } from '@ui/forms/listbox/item';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { useNormalizedModels } from '@common/ui/normalized-model/use-normalized-models';\nimport { isEmail } from '@ui/utils/string/is-email';\nimport { Avatar } from '@ui/avatar/avatar';\nexport function SharePanel({\n  className,\n  entry\n}) {\n  const {\n    trans\n  } = useTrans();\n  const {\n    share\n  } = useSettings();\n  const shareEntry = useShareEntry();\n  const [chips, setChips] = useState([]);\n  const [isSharing, setIsSharing] = useState(false);\n  const [selectedPermission, setSelectedPermission] = useState(PermissionSelectorItems[0]);\n  const allEmailsValid = chips.every(chip => !chip.invalid);\n  const [inputValue, setInputValue] = useState('');\n  const query = useNormalizedModels('normalized-models/user', {\n    perPage: 7,\n    query: inputValue\n  }, {\n    enabled: share?.suggest_emails\n  });\n\n  // show user's email, instead of name in the chip\n  const displayWith = chip => chip.description || chip.name;\n  return <div className={className}>\n      <ChipField value={chips} onChange={setChips} isAsync isLoading={query.fetchStatus === 'fetching'} inputValue={inputValue} onInputValueChange={setInputValue} suggestions={query.data?.results} displayWith={displayWith} validateWith={chip => {\n      const invalid = !isEmail(chip.description);\n      return {\n        ...chip,\n        invalid,\n        errorMessage: invalid ? trans({\n          message: 'Not a valid email'\n        }) : undefined\n      };\n    }} placeholder={trans({\n      message: 'Enter email addresses'\n    })} label={<Trans message=\"Invite people\" />}>\n        {user => <Item value={user.id} startIcon={<Avatar circle src={user.image} alt=\"\" />} description={user.description}>\n            {user.name}\n          </Item>}\n      </ChipField>\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\n        <PermissionSelector onChange={setSelectedPermission} value={selectedPermission} />\n        {chips.length ? <Button variant=\"flat\" color=\"primary\" size=\"sm\" disabled={isSharing || !allEmailsValid} onClick={() => {\n        setIsSharing(true);\n        shareEntry.mutate({\n          emails: chips.map(c => displayWith(c)),\n          permissions: selectedPermission.value,\n          entryId: entry.id\n        }, {\n          onSuccess: () => {\n            setChips([]);\n          },\n          onSettled: () => {\n            setIsSharing(false);\n          }\n        });\n      }}>\n            <Trans message=\"Share\" />\n          </Button> : null}\n      </div>\n      <MemberList className=\"mt-30\" entry={entry} />\n    </div>;\n}","import { useQuery } from '@tanstack/react-query';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nexport function useEntryShareableLink(entryId) {\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId),\n    queryFn: () => fetchLinkByEntryId(entryId),\n    enabled: !!entryId\n  });\n}\nfunction fetchLinkByEntryId(entryId) {\n  return apiClient.get(`file-entries/${entryId}/shareable-link`, {\n    params: {\n      loader: 'shareableLink'\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction deleteShareableLink({\n  entryId\n}) {\n  return apiClient.delete(`file-entries/${entryId}/shareable-link`).then(r => r.data);\n}\nexport function useDeleteShareableLink() {\n  return useMutation({\n    mutationFn: ({\n      entryId\n    }) => deleteShareableLink({\n      entryId\n    }),\n    onSuccess: (response, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), {\n        ...response,\n        link: null\n      });\n    },\n    onError: err => showHttpErrorToast(err, message('Could not delete link'))\n  });\n}","export function randomString(length = 36) {\n  let random = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i += 1) {\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return random;\n}","import useClipboard from 'react-use-clipboard';\nimport { useEntryShareableLink } from '../../shareable-link/queries/use-entry-shareable-link';\nimport { useCreateShareableLink } from '../../shareable-link/queries/create-shareable-link';\nimport { useDeleteShareableLink } from '../../shareable-link/queries/use-delete-shareable-link';\nimport { Button } from '@ui/buttons/button';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Switch } from '@ui/forms/toggle/switch';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useActiveDialogEntry } from '../../drive-store';\nimport { useSettings } from '@ui/settings/use-settings';\nimport { randomString } from '@ui/utils/string/random-string';\nexport function ShareableLinkPanel({\n  setActivePanel,\n  entry,\n  focusInput\n}) {\n  const query = useEntryShareableLink(entry.id);\n  const linkExists = !!query.data?.link;\n  const createLink = useCreateShareableLink();\n  const deleteLink = useDeleteShareableLink();\n  const isLoading = query.isLoading || createLink.isPending || deleteLink.isPending;\n  return <div>\n      <div className=\"mb-10\">\n        <Trans message=\"Share link\" />\n      </div>\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\n        <Switch checked={linkExists} disabled={isLoading} onChange={() => {\n        if (linkExists) {\n          deleteLink.mutate({\n            entryId: entry.id\n          });\n        } else {\n          createLink.mutate({\n            entryId: entry.id\n          });\n        }\n      }}>\n          {linkExists ? <Trans message=\"Shareable link is created\" /> : <Trans message=\"Create shareable link\" />}\n        </Switch>\n        {linkExists && <Button variant=\"link\" color=\"primary\" onClick={() => {\n        setActivePanel('linkSettings');\n      }}>\n            <Trans message=\"Link settings\" />\n          </Button>}\n      </div>\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\n    </div>;\n}\nfunction ShareableLinkInput({\n  link,\n  autoFocus\n}) {\n  const {\n    base_url\n  } = useSettings();\n  const {\n    trans\n  } = useTrans();\n  const entry = useActiveDialogEntry();\n  const hash = link?.hash || entry?.hash || randomString();\n  const linkUrl = `${base_url}/drive/s/${hash}`;\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\n    successDuration: 1000\n  });\n  return <TextField autoFocus={autoFocus} disabled={!link} className=\"mt-10\" readOnly value={linkUrl} aria-label={trans({\n    message: 'Shareable link'\n  })} onFocus={e => {\n    e.target.select();\n  }} endAppend={<Button className=\"min-w-100\" variant=\"flat\" color=\"primary\" onClick={setCopied}>\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\n        </Button>} />;\n}","import { useMutation } from '@tanstack/react-query';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { onFormQueryError } from '@common/errors/on-form-query-error';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nfunction updateShareableLink({\n  entryId,\n  ...payload\n}) {\n  return apiClient.put(`file-entries/${entryId}/shareable-link`, payload).then(response => response.data);\n}\nexport function useUpdateShareableLink(form) {\n  return useMutation({\n    mutationFn: payload => updateShareableLink(payload),\n    onSuccess: (data, {\n      entryId\n    }) => {\n      queryClient.setQueryData(DriveQueryKeys.fetchEntryShareableLink(entryId), data);\n    },\n    onError: r => onFormQueryError(r, form)\n  });\n}","import { useForm } from 'react-hook-form';\nimport { Fragment, useState } from 'react';\nimport clsx from 'clsx';\nimport { m } from 'framer-motion';\nimport { getLocalTimeZone, now } from '@internationalized/date';\nimport { Button } from '@ui/buttons/button';\nimport { FormTextField } from '@ui/forms/input-field/text-field/text-field';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useEntryShareableLink } from '@app/drive/shareable-link/queries/use-entry-shareable-link';\nimport { Form } from '@ui/forms/form';\nimport { useUpdateShareableLink } from '@app/drive/shareable-link/queries/use-update-shareable-link';\nimport { FormSwitch, Switch } from '@ui/forms/toggle/switch';\nimport { toast } from '@ui/toast/toast';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { FormDatePicker } from '@ui/forms/input-field/date/date-picker/date-picker';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { Trans } from '@ui/i18n/trans';\nimport { message } from '@ui/i18n/message';\nexport function LinkSettingsDialog({\n  className,\n  setActivePanel,\n  entry\n}) {\n  const {\n    formId\n  } = useDialogContext();\n  const {\n    data\n  } = useEntryShareableLink(entry.id);\n  const link = data?.link;\n  const form = useForm({\n    defaultValues: {\n      allowDownload: link?.allow_download,\n      allowEdit: link?.allow_edit,\n      expiresAt: link?.expires_at,\n      entryId: entry.id\n    }\n  });\n  const updateLink = useUpdateShareableLink(form);\n  return <Fragment>\n      <DialogHeader onDismiss={() => {\n      setActivePanel('main');\n    }}>\n        <Trans message=\"Shareable Link Settings\" />\n      </DialogHeader>\n      <DialogBody>\n        <m.div key=\"link-settings-content\" className=\"min-h-[335px]\" animate={{\n        opacity: 1,\n        y: 0\n      }} initial={{\n        opacity: 0,\n        y: 20\n      }} exit={{\n        opacity: 0,\n        y: -20\n      }} transition={{\n        duration: 0.1\n      }}>\n          <Form id={formId} className={className} form={form} onSubmit={value => {\n          updateLink.mutate(value, {\n            onSuccess: () => {\n              setActivePanel('main');\n              toast(message('Link settings saved'));\n            }\n          });\n        }}>\n            <LinkExpirationOption showField={!!link?.expires_at} />\n            <LinkPasswordOption showField={!!link?.password} />\n            <LinkOption>\n              <Trans message=\"Allow download\" />\n              <FormSwitch name=\"allowDownload\">\n                <Trans message=\"Users with link can download this item\" />\n              </FormSwitch>\n            </LinkOption>\n            <LinkOption showBorder={false}>\n              <Trans message=\"Allow import\" />\n              <FormSwitch name=\"allowEdit\">\n                <Trans message=\"Users with link can import this item into their own drive\" />\n              </FormSwitch>\n            </LinkOption>\n          </Form>\n        </m.div>\n      </DialogBody>\n      <DialogFooter>\n        <Button type=\"button\" onClick={() => {\n        setActivePanel('main');\n      }}>\n          <Trans message=\"Cancel\" />\n        </Button>\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\" disabled={updateLink.isPending}>\n          <Trans message=\"Save\" />\n        </Button>\n      </DialogFooter>\n    </Fragment>;\n}\nconst minDate = now(getLocalTimeZone());\nfunction LinkExpirationOption({\n  showField: showFieldDefault\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return <LinkOption>\n      <Trans message=\"Link expiration\" />\n      <div>\n        <Switch checked={showField} onChange={e => {\n        setShowField(e.target.checked);\n      }}>\n          <Trans message=\"Link is valid until\" />\n        </Switch>\n        {showField && <FormDatePicker min={minDate} name=\"expiresAt\" granularity=\"minute\" className=\"mt-20\" aria-label={trans({\n        message: 'Link expiration date and time'\n      })} />}\n      </div>\n    </LinkOption>;\n}\nfunction LinkPasswordOption({\n  showField: showFieldDefault\n}) {\n  const {\n    trans\n  } = useTrans();\n  const [showField, setShowField] = useState(showFieldDefault);\n  return <LinkOption>\n      <Trans message=\"Password protect\" />\n      <div>\n        <Switch checked={showField} onChange={e => {\n        setShowField(e.target.checked);\n      }}>\n          <Trans message=\"Users will need to enter password in order to view this link\" />\n        </Switch>\n        {showField && <FormTextField type=\"password\" autoFocus name=\"password\" className=\"mt-20\" aria-label={trans({\n        message: 'Link password'\n      })} description={<Trans message=\"Password will not be requested when viewing the link as file owner.\" />} placeholder={trans({\n        message: 'Enter new password...'\n      })} />}\n      </div>\n    </LinkOption>;\n}\nfunction LinkOption({\n  children,\n  showBorder = true\n}) {\n  const [title, content] = children;\n  return <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\n      {content}\n    </div>;\n}","import { Fragment, useState } from 'react';\nimport { AnimatePresence, m } from 'framer-motion';\nimport { SharePanel } from './share-panel';\nimport { ShareableLinkPanel } from './link-panel/shareable-link-panel';\nimport { LinkSettingsDialog } from './link-panel/link-settings-dialog';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../drive-query-keys';\nexport function ShareDialog({\n  entry: initialEntry,\n  focusLinkInput\n}) {\n  const {\n    data: {\n      fileEntry\n    }\n  } = useQuery({\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\n    queryFn: () => apiClient.get(`drive/file-entries/${initialEntry.id}/model`).then(response => response.data),\n    initialData: {\n      fileEntry: initialEntry\n    }\n  });\n  const [activePanel, setActivePanel] = useState('main');\n  return <Dialog size=\"lg\">\n      <AnimatePresence initial={false} mode=\"wait\">\n        {activePanel === 'linkSettings' ? <LinkSettingsDialog key=\"one\" setActivePanel={setActivePanel} entry={fileEntry} /> : <MainDialog key=\"two\" setActivePanel={setActivePanel} entry={fileEntry} focusLinkInput={focusLinkInput} />}\n      </AnimatePresence>\n    </Dialog>;\n}\nfunction MainDialog({\n  setActivePanel,\n  entry,\n  focusLinkInput\n}) {\n  return <Fragment>\n      <DialogHeader>\n        <Trans message=\"Share ‘:name’\" values={{\n        name: entry.name\n      }} />\n      </DialogHeader>\n      <DialogBody className=\"relative\">\n        <m.div key=\"share-content\" animate={{\n        opacity: 1,\n        y: 0\n      }} initial={{\n        opacity: 0,\n        y: 20\n      }} exit={{\n        opacity: 0,\n        y: -20\n      }} transition={{\n        duration: 0.1\n      }}>\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\n          <ShareableLinkPanel setActivePanel={setActivePanel} entry={entry} focusInput={!!focusLinkInput} />\n        </m.div>\n      </DialogBody>\n    </Fragment>;\n}","import { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { DriveQueryKeys } from '@app/drive/drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { keepPreviousData, useQuery } from '@tanstack/react-query';\nimport { encodeBackendFilters } from '@common/datatable/filters/utils/encode-backend-filters';\nimport { useMemo } from 'react';\nexport function useMoveEntriesDialogFolderSearch({\n  query\n}) {\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    return {\n      section: 'search',\n      workspaceId,\n      query,\n      filters: encodeBackendFilters([{\n        key: 'type',\n        value: 'folder'\n      }])\n    };\n  }, [workspaceId, query]);\n  return useQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      signal\n    }) => fetchEntries(params, signal),\n    enabled: !!query,\n    placeholderData: keepPreviousData\n  });\n}\nasync function fetchEntries(params, signal) {\n  if (params.query) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n  }\n  return apiClient.get('drive/file-entries', {\n    params,\n    signal: params.query ? signal : undefined\n  }).then(response => response.data);\n}","import React, { useState } from 'react';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { ComboBox } from '@ui/forms/combobox/combobox';\nimport { Item } from '@ui/forms/listbox/item';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useMoveEntriesDialogFolderSearch } from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folder-search';\nexport function MoveEntriesDialogSearch({\n  onFolderSelected\n}) {\n  const {\n    trans\n  } = useTrans();\n  const searchLabel = trans({\n    message: 'Search folders'\n  });\n  const [query, setQuery] = useState('');\n  const {\n    isFetching,\n    data\n  } = useMoveEntriesDialogFolderSearch({\n    query\n  });\n  const folders = data?.data;\n  return <ComboBox size=\"sm\" maxItems={10} placeholder={searchLabel} aria-label={searchLabel} className=\"pt-20\" endAdornmentIcon={<SearchIcon />} isAsync isLoading={isFetching} inputValue={query} onInputValueChange={setQuery} blurReferenceOnItemSelection clearInputOnItemSelection selectionMode=\"none\" openMenuOnFocus={false}>\n      {folders?.map(folder => <Item key={folder.id} value={folder.id} textLabel={folder.name} onSelected={() => {\n      onFolderSelected(folder);\n    }}>\n          {folder.name}\n        </Item>)}\n    </ComboBox>;\n}","import React from 'react';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { ArrowBackIcon } from '@ui/icons/material/ArrowBack';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { FolderIcon } from '@ui/icons/material/Folder';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { useFolderPath } from '@app/drive/files/queries/use-folder-path';\nimport { RootFolderPage } from '@app/drive/drive-page/drive-page';\nimport { Trans } from '@ui/i18n/trans';\nexport function MoveEntriesDialogBreadcrumbs({\n  selectedFolder,\n  onFolderSelected\n}) {\n  const {\n    data\n  } = useFolderPath({\n    hash: selectedFolder.hash,\n    isEnabled: selectedFolder?.hash !== RootFolderPage.folder.hash\n  });\n  let previous = null;\n  if (data?.path) {\n    if (data.path.length === 1) {\n      previous = RootFolderPage.folder;\n    } else {\n      previous = data.path[data.path.length - 2];\n    }\n  }\n  return <div className=\"flex items-center gap-6 border-b pb-10\">\n      <IconButton className=\"flex-shrink-0\" variant=\"outline\" size=\"xs\" disabled={!previous} onClick={() => {\n      if (previous) {\n        onFolderSelected(previous);\n      }\n    }}>\n        <ArrowBackIcon />\n      </IconButton>\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\n        <BreadcrumbItem onSelected={() => {\n        onFolderSelected(RootFolderPage.folder);\n      }} className=\"flex items-center gap-8\">\n          <FolderIcon className=\"icon-sm\" />\n          <Trans message={RootFolderPage.folder.name} />\n        </BreadcrumbItem>\n        {data?.path.map(item => <BreadcrumbItem onSelected={() => {\n        onFolderSelected(item);\n      }} key={item.id || 'root'} className=\"flex items-center gap-8\">\n            {!item.id && <FolderIcon className=\"icon-sm\" />}\n            {item.name}\n          </BreadcrumbItem>)}\n      </Breadcrumb>\n    </div>;\n}","export default \"__VITE_ASSET__b64d6dd2__\"","import { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { DriveQueryKeys } from '@app/drive/drive-query-keys';\nimport { apiClient } from '@common/http/query-client';\nimport { useInfiniteQuery } from '@tanstack/react-query';\nimport { hasNextPage } from '@common/http/backend-response/pagination-response';\nimport { encodeBackendFilters } from '@common/datatable/filters/utils/encode-backend-filters';\nimport { useMemo } from 'react';\nexport function useMoveEntriesDialogFolders({\n  selectedFolder,\n  movingSharedFiles\n}) {\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const params = useMemo(() => {\n    const filters = encodeBackendFilters([{\n      key: 'type',\n      value: 'folder'\n    }]);\n    return {\n      section: 'folder',\n      folderId: selectedFolder.hash == '0' && movingSharedFiles ? 'sharedWithMe' : selectedFolder.hash,\n      workspaceId,\n      filters\n    };\n  }, [workspaceId, selectedFolder.hash, movingSharedFiles]);\n  return useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchEntries(params),\n    queryFn: ({\n      pageParam = 1\n    }) => {\n      return fetchEntries({\n        ...params,\n        page: pageParam\n      });\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      const currentPage = lastResponse.current_page;\n      if (!hasNextPage(lastResponse)) {\n        return undefined;\n      }\n      return currentPage + 1;\n    }\n  });\n}\nfunction fetchEntries(params) {\n  return apiClient.get('drive/file-entries', {\n    params\n  }).then(response => response.data);\n}","import React, { Fragment } from 'react';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { ChevronRightIcon } from '@ui/icons/material/ChevronRight';\nimport { Trans } from '@ui/i18n/trans';\nimport myFilesSvg from './my-files.svg';\nimport { useMoveEntriesDialogFolders } from '@app/drive/files/dialogs/move-entries-dialog/use-move-entries-dialog-folders';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { InfiniteScrollSentinel } from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\nimport { SvgImage } from '@ui/images/svg-image';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { List, ListItem } from '@ui/list/list';\nexport function MoveEntriesDialogFolderList({\n  onFolderSelected,\n  selectedFolder,\n  movingSharedFiles\n}) {\n  const query = useMoveEntriesDialogFolders({\n    selectedFolder,\n    movingSharedFiles\n  });\n  let content;\n  if (query.isLoading) {\n    content = <div className=\"flex h-full w-full items-center justify-center\">\n        <ProgressCircle isIndeterminate size=\"md\" />\n      </div>;\n  } else if (query.data?.pages[0]?.data.length === 0) {\n    content = <IllustratedMessage size=\"xs\" className=\"pb-20 pt-64\" image={<SvgImage src={myFilesSvg} />} title={<Trans message={`There are no subfolders in \":folder\"`} values={{\n      folder: selectedFolder.name\n    }} />} />;\n  } else {\n    content = <Fragment>\n        <List>\n          {query.data?.pages.flatMap(r => r.data).map(folder => <ListItem className=\"min-h-48 border-b\" key={folder.id} onSelected={() => {\n          onFolderSelected(folder);\n        }} startIcon={<FileTypeIcon type=\"folder\" />} endIcon={<ChevronRightIcon size=\"md\" />}>\n                {folder.name}\n              </ListItem>)}\n        </List>\n        <InfiniteScrollSentinel query={query} />\n      </Fragment>;\n  }\n  return <div className=\"h-288 overflow-y-auto\">{content}</div>;\n}","import React, { useState } from 'react';\nimport { Button } from '@ui/buttons/button';\nimport { useMoveEntries } from '../../queries/use-move-entries';\nimport { NewFolderDialog } from '../new-folder-dialog';\nimport { CreateNewFolderIcon } from '@ui/icons/material/CreateNewFolder';\nimport { MoveEntriesDialogSearch } from './move-entries-dialog-search';\nimport { MoveEntriesDialogBreadcrumbs } from './move-entries-dialog-breadcrumbs';\nimport { MoveEntriesDialogFolderList } from './move-entries-dialog-folder-list';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { DialogFooter } from '@ui/overlays/dialog/dialog-footer';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nimport { Dialog } from '@ui/overlays/dialog/dialog';\nimport { DialogHeader } from '@ui/overlays/dialog/dialog-header';\nimport { DialogBody } from '@ui/overlays/dialog/dialog-body';\nimport { Trans } from '@ui/i18n/trans';\nimport { RootFolderPage } from '../../../drive-page/drive-page';\nimport { useDriveStore } from '../../../drive-store';\nimport { canMoveEntriesInto } from '../../utils/can-move-entries-into';\nimport { useAuth } from '@common/auth/use-auth';\nexport function MoveEntriesDialog({\n  entries\n}) {\n  const {\n    user\n  } = useAuth();\n  const activePage = useDriveStore(s => s.activePage);\n  const [selectedFolder, setSelectedFolder] = useState(activePage?.folder || RootFolderPage.folder);\n  const movingSharedFiles = entries.some(e => !e.users.find(u => u.id === user.id)?.owns_entry);\n  return <Dialog size=\"lg\">\n      <DialogHeader>\n        <Trans message=\"Move [one ‘:name‘|other :count items]\" values={{\n        count: entries.length,\n        name: entries[0].name\n      }} />\n      </DialogHeader>\n      <DialogBody>\n        <div className=\"text-sm\">\n          <Trans message=\"Select a destination folder.\" />\n        </div>\n        <MoveEntriesDialogSearch onFolderSelected={setSelectedFolder} />\n        <div className=\"mb-20 mt-40\">\n          <MoveEntriesDialogBreadcrumbs selectedFolder={selectedFolder} onFolderSelected={setSelectedFolder} />\n          <MoveEntriesDialogFolderList movingSharedFiles={movingSharedFiles} selectedFolder={selectedFolder} onFolderSelected={setSelectedFolder} />\n        </div>\n      </DialogBody>\n      <Footer selectedFolder={selectedFolder} setSelectedFolder={setSelectedFolder} entries={entries} />\n    </Dialog>;\n}\nfunction Footer({\n  selectedFolder,\n  setSelectedFolder,\n  entries\n}) {\n  const {\n    close\n  } = useDialogContext();\n  const moveEntries = useMoveEntries();\n  return <DialogFooter className=\"border-t\" startAction={<DialogTrigger type=\"modal\" onClose={folder => {\n    if (folder) {\n      setSelectedFolder(folder);\n    }\n  }}>\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\n            <Trans message=\"New Folder\" />\n          </Button>\n          <NewFolderDialog parentId={selectedFolder.id} />\n        </DialogTrigger>}>\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\n        <Trans message=\"Cancel\" />\n      </Button>\n      <Button type=\"submit\" variant=\"flat\" color=\"primary\" disabled={!canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending} onClick={() => {\n      moveEntries.mutate({\n        destinationId: selectedFolder.id,\n        entryIds: entries.map(e => e.id)\n      }, {\n        onSuccess: close\n      });\n    }}>\n        <Trans message=\"Move here\" />\n      </Button>\n    </DialogFooter>;\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nimport { useDeleteEntries } from '../queries/use-delete-entries';\nimport { driveState } from '../../drive-store';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nexport function DeleteEntriesForeverDialog({\n  entries\n}) {\n  const deleteEntries = useDeleteEntries();\n  const {\n    close\n  } = useDialogContext();\n  const message = entries.length === 1 ? <Trans message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\" values={{\n    name: entries[0].name\n  }} /> : <Trans message=\":count items will be deleted forever and you won't be able to restore them.\" values={{\n    count: entries.length\n  }} />;\n  return <ConfirmationDialog isDanger title={<Trans message=\"Delete forever?\" />} body={message} confirm={<Trans message=\"Delete forever\" />} isLoading={deleteEntries.isPending} onConfirm={() => {\n    deleteEntries.mutate({\n      entryIds: entries.map(e => e.id),\n      deleteForever: true\n    }, {\n      onSuccess: () => {\n        close();\n        driveState().selectEntries([]);\n      }\n    });\n  }} />;\n}","import { ConfirmationDialog } from '@ui/overlays/dialog/confirmation-dialog';\nimport { Trans } from '@ui/i18n/trans';\nimport { driveState } from '../../drive-store';\nimport { useRestoreEntries } from '../queries/use-restore-entries';\nimport { useDialogContext } from '@ui/overlays/dialog/dialog-context';\nexport function BlockTrashFolderViewDialog({\n  entries\n}) {\n  const restoreEntries = useRestoreEntries();\n  const {\n    close\n  } = useDialogContext();\n  return <ConfirmationDialog title={<Trans message=\"This folder is in your trash\" />} body={<Trans message=\"To view this folder, restore it from the trash.\" />} confirm={<Trans message=\"Restore\" />} isLoading={restoreEntries.isPending} onConfirm={() => {\n    restoreEntries.mutate({\n      entryIds: entries.map(e => e.id)\n    }, {\n      onSuccess: () => {\n        close();\n        driveState().selectEntries([]);\n      }\n    });\n  }} />;\n}","import React from 'react';\nimport { driveState, useDriveStore } from '../../drive-store';\nimport { RenameEntryDialog } from './rename-entry-dialog';\nimport { NewFolderDialog } from './new-folder-dialog';\nimport { EntryPreviewDialog } from './entry-preview-dialog';\nimport { ShareDialog } from '../../share-dialog/share-dialog';\nimport { MoveEntriesDialog } from './move-entries-dialog/move-entries-dialog';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport { DeleteEntriesForeverDialog } from './delete-entries-forever-dialog';\nimport { BlockTrashFolderViewDialog } from './block-trash-folder-view-dialog';\nexport function DriveDialogsContainer() {\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\n  const dialog = getDialog(activeDialog);\n  return <DialogTrigger type=\"modal\" isOpen={!!dialog} onClose={() => {\n    driveState().setActiveActionDialog(null);\n  }}>\n      {dialog}\n    </DialogTrigger>;\n}\nfunction getDialog(dialog) {\n  switch (dialog?.name) {\n    case 'rename':\n      return <RenameEntryDialog entries={dialog.entries} />;\n    case 'newFolder':\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\n    case 'preview':\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\n    case 'share':\n      return <ShareDialog entry={dialog.entries[0]} />;\n    case 'getLink':\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\n    case 'moveTo':\n      return <MoveEntriesDialog entries={dialog.entries} />;\n    case 'confirmAndDeleteForever':\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\n    case 'trashFolderBlock':\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\n    default:\n      return null;\n  }\n}","import React, { useState } from 'react';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { SearchPage } from '../drive-page/drive-page';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { useDriveStore } from '../drive-store';\nimport { useSearchParams } from 'react-router';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { useNavigate } from '@common/ui/navigation/use-navigate';\nexport function NavbarSearch() {\n  const {\n    trans\n  } = useTrans();\n  const navigate = useNavigate();\n  const activePage = useDriveStore(s => s.activePage);\n  const [searchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\n  return <form className=\"max-w-620 flex-auto\" onSubmit={e => {\n    e.preventDefault();\n    navigate({\n      pathname: SearchPage.path,\n      search: `?query=${inputValue}`\n    }, {\n      replace: true\n    });\n  }}>\n      <TextField size=\"sm\" background=\"bg\" value={inputValue} onChange={e => setInputValue(e.target.value)} onFocus={() => {\n      if (activePage !== SearchPage) {\n        navigate(SearchPage.path);\n      }\n    }} startAdornment={<IconButton type=\"submit\">\n            <SearchIcon />\n          </IconButton>} className=\"max-w-420 flex-auto\" placeholder={trans({\n      message: 'Search'\n    })} aria-label={trans({\n      message: 'Search files and folders'\n    })} />\n    </form>;\n}","import { useEffect, useId, useRef } from 'react';\nimport { dragMonitors } from './drag-state';\nexport function useDragMonitor(monitor) {\n  const monitorRef = useRef(monitor);\n  const id = useId();\n  useEffect(() => {\n    dragMonitors.set(id, monitorRef.current);\n    return () => {\n      dragMonitors.delete(id);\n    };\n  }, [id]);\n}","import { useDragMonitor } from '@ui/interactions/dnd/use-drag-monitor';\nimport React, { memo, useRef, useState } from 'react';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nimport { droppables } from '@ui/interactions/dnd/drag-state';\nimport { AnimatePresence, m } from 'framer-motion';\nimport clsx from 'clsx';\nimport { isFolderTreeDragId, makeFolderTreeDragId } from '@app/drive/layout/sidebar/folder-tree-drag-id';\nimport { useDriveStore } from '../drive-store';\nexport function EntryDragPreview() {\n  const ref = useRef(null);\n  const [points, setPoints] = useState();\n  const [state, setState] = useState({});\n  useDragMonitor({\n    type: 'fileEntry',\n    onDragStart: (e, dragTarget) => {\n      const target = dragTarget;\n      if (target) {\n        setState({\n          entries: target.getData(),\n          e,\n          draggingTreeItem: isFolderTreeDragId(target.id)\n        });\n        setPoints({\n          start: e\n        });\n      }\n    },\n    onDragMove: e => {\n      setState(prev => {\n        return {\n          ...prev,\n          e: e\n        };\n      });\n      setPoints(prev => {\n        return {\n          ...prev,\n          end: e\n        };\n      });\n    },\n    onDragEnd: (e, dragTarget, status) => {\n      setState({\n        status\n      });\n    }\n  });\n  let preview = null;\n  if (state.entries && state.e) {\n    preview = <div ref={ref} style={state.e ? {\n      transform: `translate(${state.e.x}px, ${state.e.y}px)`,\n      width: `${state.e.rect.width}px`\n    } : undefined} className=\"pointer-events-none fixed left-0 top-0 isolate\">\n        {state.entries.map((item, index) => <EntryPreview key={item.id} index={index} entry={item} points={points} state={state} />)}\n      </div>;\n  }\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\n}\nconst EntryPreview = memo(({\n  entry,\n  points,\n  index,\n  state\n}) => {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const droppableId = state.draggingTreeItem ? makeFolderTreeDragId(entry) : entry.id;\n  const target = droppables.get(droppableId);\n  if (!target?.rect || !points?.start) return null;\n  const rect = target.rect;\n  const itemCount = state.entries?.length || 0;\n  const exitVariant = status => {\n    if (status === 'dropSuccess') {\n      return {\n        x: 0,\n        y: 0,\n        opacity: 0,\n        transition: {\n          duration: 0.1,\n          delay: 0\n        }\n      };\n    }\n    return {\n      x: rect.left - (points.end?.x || 0),\n      y: rect.top - (points.end?.y || 0),\n      width: `${state.e?.rect.width}px`\n    };\n  };\n  return <m.div key={entry.id} transition={{\n    delay: 0.01 * index,\n    bounce: 0,\n    duration: 0.2\n  }} initial={{\n    x: rect.left - points.start.x,\n    y: rect.top - points.start.y,\n    width: `${state.e?.rect.width}px`\n  }} animate={{\n    x: 0,\n    y: 0,\n    // in list/table mode limit preview size to 288px, but start and end the animation\n    // at full width, so it returns to original position at original size smoothly\n    width: viewMode === 'list' ? 288 : undefined\n  }} exit={exitVariant} style={{\n    // in grid mode simply use the width of the draggable item\n    width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\n    height: `${state.e?.rect.height}px`\n  }} className={clsx('absolute max-h-48 whitespace-nowrap rounded border border-primary-light bg-paper', index < 2 && 'shadow', index === 0 && 'left-0 top-0 z-10', index > 0 && 'left-6 top-6')}>\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\n        <div className=\"flex h-full items-center justify-center gap-10 overflow-hidden bg-primary-light/20 px-16 text-sm\">\n          <FileTypeIcon type={entry.type} />\n          <div className=\"flex-auto overflow-hidden text-ellipsis\">\n            {entry.name}\n          </div>\n        </div>\n      </m.div>;\n});\nconst EntryCount = memo(({\n  count\n}) => {\n  return <m.div key=\"entryCount\" initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1,\n    transition: {\n      delay: 0.1\n    }\n  }} exit={{\n    opacity: 0\n  }} transition={{\n    duration: 0.1\n  }} className=\"absolute -right-6 -top-6 z-10 z-30 flex h-20 w-20 items-center justify-center rounded-full bg-danger text-sm font-bold text-white shadow-lg\">\n      {count}\n    </m.div>;\n});","import clsx from 'clsx';\nexport function DashboardContentHeader({\n  children,\n  className\n}) {\n  return <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>;\n}","import { PageBreadcrumbs } from '../page-breadcrumbs';\nimport React, { useContext } from 'react';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { Trans } from '@ui/i18n/trans';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { ViewListIcon } from '@ui/icons/material/ViewList';\nimport { ViewModuleIcon } from '@ui/icons/material/ViewModule';\nimport { InfoIcon } from '@ui/icons/material/Info';\nimport { DriveSortButton } from './sorting/drive-sort-button';\nimport { DashboardContentHeader } from '@common/ui/dashboard-layout/dashboard-content-header';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nexport function DriveContentHeader() {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  return <DashboardContentHeader className=\"flex h-60 items-center gap-20 border-b px-8 py-4 md:px-26\">\n      {isMobileMode ? <DriveSortButton isDisabled={activePage?.disableSort} /> : <PageBreadcrumbs />}\n      <div className=\"ml-auto flex-shrink-0 text-muted\">\n        <ToggleViewModeButton />\n        <ToggleDetailsButton />\n      </div>\n    </DashboardContentHeader>;\n}\nfunction ToggleViewModeButton() {\n  const viewMode = useDriveStore(s => s.viewMode);\n  const tooltip = viewMode === 'grid' ? <Trans message=\"List view\" /> : <Trans message=\"Grid view\" />;\n  return <Tooltip label={tooltip}>\n      <IconButton size=\"md\" onClick={() => {\n      driveState().setViewMode(driveState().viewMode === 'list' ? 'grid' : 'list');\n    }}>\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\n      </IconButton>\n    </Tooltip>;\n}\nfunction ToggleDetailsButton() {\n  const {\n    rightSidenavStatus: status,\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  const tooltip = status ? <Trans message=\"Hide details\" /> : <Trans message=\"Show details\" />;\n  return <Tooltip label={tooltip}>\n      <IconButton size=\"md\" color={status === 'open' ? 'primary' : null} onClick={() => {\n      setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\n    }}>\n        <InfoIcon />\n      </IconButton>\n    </Tooltip>;\n}","import clsx from 'clsx';\nimport { m } from 'framer-motion';\nimport { cloneElement, useContext } from 'react';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nexport function DashboardSidenav({\n  className,\n  position,\n  children,\n  size = 'md',\n  mode,\n  overlayPosition = 'fixed',\n  display = 'flex',\n  overflow = 'overflow-hidden',\n  forceClosed = false\n}) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus\n  } = useContext(DashboardLayoutContext);\n  const isOverlayMode = isMobileMode || mode === 'overlay';\n  let status = position === 'left' ? leftSidenavStatus : rightSidenavStatus;\n  // on mobile always overlay full size sidebar, instead of compact\n  if (isOverlayMode && status === 'compact') {\n    status = 'open';\n  }\n  const variants = {\n    open: {\n      display,\n      width: getAnimateSize(status === 'compact' ? 'compact' : size)\n    },\n    closed: {\n      width: 0,\n      transitionEnd: {\n        display: 'none'\n      }\n    }\n  };\n  const sizeClassName = getSizeClassName(status === 'compact' ? 'compact' : size);\n  return <m.div variants={variants} initial={false} animate={forceClosed || status === 'closed' ? 'closed' : 'open'} transition={{\n    type: 'tween',\n    duration: 0.15\n  }} onClick={e => {\n    // close sidenav when user clicks a link or button on mobile\n    const target = e.target;\n    if (isMobileMode && (target.closest('button') || target.closest('a'))) {\n      setLeftSidenavStatus('closed');\n      setRightSidenavStatus('closed');\n    }\n  }} className={clsx(className, position === 'left' ? 'dashboard-grid-sidenav-left' : 'dashboard-grid-sidenav-right', overflow, sizeClassName, isOverlayMode && `${overlayPosition} bottom-0 top-0 z-20 shadow-2xl`, isOverlayMode && position === 'left' && 'left-0', isOverlayMode && position === 'right' && 'right-0')}>\n      {cloneElement(children, {\n      className: clsx(children.props.className, 'w-full h-full overflow-y-auto compact-scrollbar', status === 'compact' && 'hidden-scrollbar'),\n      isCompactMode: status === 'compact',\n      isOverlayMode\n    })}\n    </m.div>;\n}\nfunction getSizeClassName(size) {\n  switch (size) {\n    case 'compact':\n      return 'w-60';\n    case 'sm':\n      return 'w-224';\n    case 'md':\n      return 'w-240';\n    case 'lg':\n      return 'w-288';\n    default:\n      return size || '';\n  }\n}\nfunction getAnimateSize(size) {\n  switch (size) {\n    case 'compact':\n      return 60;\n    case 'sm':\n      return 224;\n    case 'md':\n      return 240;\n    case 'lg':\n      return 288;\n    default:\n      return null;\n  }\n}","import { Navbar } from '../navigation/navbar/navbar';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nimport { setInLocalStorage } from '@ui/utils/hooks/local-storage';\nimport { MenuOpenIcon } from '@ui/icons/material/MenuOpen';\nexport function DashboardNavbar({\n  children,\n  className,\n  hideToggleButton,\n  ...props\n}) {\n  const {\n    isMobileMode,\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    name,\n    leftSidenavCanBeCompact\n  } = useContext(DashboardLayoutContext);\n  const shouldToggleCompactMode = leftSidenavCanBeCompact && !isMobileMode;\n  const shouldShowToggle = !hideToggleButton && (isMobileMode || leftSidenavCanBeCompact);\n  const handleToggle = () => {\n    setLeftSidenavStatus(leftSidenavStatus === 'open' ? 'closed' : 'open');\n  };\n  const handleCompactModeToggle = () => {\n    const newStatus = leftSidenavStatus === 'compact' ? 'open' : 'compact';\n    setInLocalStorage(`${name}.sidenav.compact`, newStatus === 'compact');\n    setLeftSidenavStatus(newStatus);\n  };\n  return <Navbar className={clsx('dashboard-grid-navbar', className)} border=\"border-b\" size=\"sm\" toggleButton={shouldShowToggle ? <IconButton size=\"md\" onClick={() => {\n    if (shouldToggleCompactMode) {\n      handleCompactModeToggle();\n    } else {\n      handleToggle();\n    }\n  }}>\n            <MenuOpenIcon />\n          </IconButton> : undefined} {...props}>\n      {children}\n    </Navbar>;\n}","import { useEffect } from 'react';\nexport function useBlockBodyOverflow(disable = false) {\n  useEffect(() => {\n    if (disable) {\n      document.documentElement.classList.remove('no-page-overflow');\n    } else {\n      document.documentElement.classList.add('no-page-overflow');\n    }\n    return () => {\n      document.documentElement.classList.remove('no-page-overflow');\n    };\n  }, [disable]);\n}","import { useCallback, useEffect, useMemo } from 'react';\nimport { DashboardLayoutContext } from './dashboard-layout-context';\nimport { AnimatePresence } from 'framer-motion';\nimport { useControlledState } from '@react-stately/utils';\nimport { useMediaQuery } from '@ui/utils/hooks/use-media-query';\nimport { getFromLocalStorage, setInLocalStorage } from '@ui/utils/hooks/local-storage';\nimport { useBlockBodyOverflow } from '@ui/utils/hooks/use-block-body-overflow';\nimport clsx from 'clsx';\nimport { Underlay } from '@ui/overlays/underlay';\nimport { usePrevious } from '@ui/utils/hooks/use-previous';\nexport function DashboardLayout({\n  children,\n  leftSidenavStatus: leftSidenav,\n  onLeftSidenavChange,\n  rightSidenavStatus: rightSidenav,\n  compactByDefault,\n  initialRightSidenavStatus,\n  onRightSidenavChange,\n  name,\n  leftSidenavCanBeCompact,\n  height = 'h-screen',\n  className,\n  gridClassName = 'dashboard-grid',\n  blockBodyOverflow = true,\n  ...domProps\n}) {\n  useBlockBodyOverflow(!blockBodyOverflow);\n  const isMobile = useMediaQuery('(max-width: 1024px)');\n  const isCompactModeInitially = useMemo(() => {\n    if (!name) return compactByDefault ?? false;\n    const stored = getFromLocalStorage(`${name}.sidenav.compact`);\n    if (stored != null) {\n      return stored;\n    }\n    return compactByDefault ?? false;\n  }, [name, compactByDefault]);\n  const defaultLeftSidenavStatus = isCompactModeInitially ? 'compact' : 'open';\n  const [leftSidenavStatus, setLeftSidenavStatus] = useControlledState(leftSidenav, isMobile ? 'closed' : defaultLeftSidenavStatus, onLeftSidenavChange);\n  const rightSidenavStatusDefault = useMemo(() => {\n    if (isMobile) {\n      return 'closed';\n    }\n    if (initialRightSidenavStatus != null) {\n      return initialRightSidenavStatus;\n    }\n    const userSelected = getFromLocalStorage(`${name}.sidenav.right.position`, 'open');\n    if (userSelected != null) {\n      return userSelected;\n    }\n    return initialRightSidenavStatus || 'closed';\n  }, [isMobile, name, initialRightSidenavStatus]);\n  const [rightSidenavStatus, _setRightSidenavStatus] = useControlledState(rightSidenav, rightSidenavStatusDefault, onRightSidenavChange);\n  const setRightSidenavStatus = useCallback(status => {\n    _setRightSidenavStatus(status);\n    setInLocalStorage(`${name}.sidenav.right.position`, status);\n  }, [_setRightSidenavStatus, name]);\n  const previousIsMobile = usePrevious(isMobile);\n  useEffect(() => {\n    if (isMobile === previousIsMobile) return;\n    if (!isMobile) {\n      setLeftSidenavStatus(defaultLeftSidenavStatus);\n      setRightSidenavStatus(rightSidenavStatusDefault);\n    } else {\n      setLeftSidenavStatus('closed');\n      setRightSidenavStatus('closed');\n    }\n  }, [isMobile, defaultLeftSidenavStatus, rightSidenavStatusDefault, previousIsMobile, setLeftSidenavStatus, setRightSidenavStatus]);\n  const shouldShowUnderlay = isMobile && (leftSidenavStatus === 'open' || rightSidenavStatus === 'open');\n  return <DashboardLayoutContext.Provider value={{\n    leftSidenavStatus,\n    setLeftSidenavStatus,\n    rightSidenavStatus,\n    setRightSidenavStatus,\n    leftSidenavCanBeCompact,\n    name,\n    isMobileMode: isMobile\n  }}>\n      <div {...domProps} className={clsx('relative isolate', gridClassName, className, height)}>\n        {children}\n        <AnimatePresence>\n          {shouldShowUnderlay && <Underlay position=\"fixed\" key=\"dashboard-underlay\" onClick={() => {\n          setLeftSidenavStatus('closed');\n          setRightSidenavStatus('closed');\n        }} />}\n        </AnimatePresence>\n      </div>\n    </DashboardLayoutContext.Provider>;\n}","import React, { Fragment, useContext, useEffect, useMemo } from 'react';\nimport { Link, useLocation, useParams } from 'react-router';\nimport { Sidebar } from './sidebar/sidebar';\nimport { FileView } from '../file-view/file-view';\nimport { UploadQueue } from '../uploading/upload-queue';\nimport { driveState, useDriveStore } from '../drive-store';\nimport { DRIVE_PAGES, makePartialFolderPage, makeAllFilesPage, SearchPage } from '../drive-page/drive-page';\nimport { DetailsSidebar } from '../details-sidebar/details-sidebar';\nimport { DriveDialogsContainer } from '../files/dialogs/drive-dialogs-container';\nimport { NavbarSearch } from '../search/navbar-search';\nimport { useActiveWorkspaceId } from '@common/workspace/active-workspace-id-context';\nimport { FileUploadProvider } from '@common/uploads/uploader/file-upload-provider';\nimport { EntryDragPreview } from '../file-view/entry-drag-preview';\nimport { DriveContentHeader } from './drive-content-header';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { SearchIcon } from '@ui/icons/material/Search';\nimport { CloseIcon } from '@ui/icons/material/Close';\nimport { Trans } from '@ui/i18n/trans';\nimport { EntryActionList } from '../entry-actions/entry-action-list';\nimport { CreateNewButton } from './create-new-button';\nimport { StaticPageTitle } from '@common/seo/static-page-title';\nimport { DashboardSidenav } from '@common/ui/dashboard-layout/dashboard-sidenav';\nimport { DashboardContent } from '@common/ui/dashboard-layout/dashboard-content';\nimport { DashboardNavbar } from '@common/ui/dashboard-layout/dashboard-navbar';\nimport { DashboardLayoutContext } from '@common/ui/dashboard-layout/dashboard-layout-context';\nimport { DashboardLayout } from '@common/ui/dashboard-layout/dashboard-layout';\nimport { FileEntryUrlsContext } from '@common/uploads/file-entry-urls';\nimport { getActiveWorkspaceId } from '@common/workspace/active-workspace-id';\nconst uploadStoreOptions = {\n  modifyUploadedFile: uploadedFile => {\n    const workspaceId = getActiveWorkspaceId();\n    uploadedFile.fingerprint = `${uploadedFile.fingerprint}-w-${workspaceId}`;\n    return uploadedFile;\n  }\n};\nexport function DriveLayout() {\n  const {\n    pathname\n  } = useLocation();\n  const {\n    hash\n  } = useParams();\n  const {\n    workspaceId\n  } = useActiveWorkspaceId();\n  const activePage = useDriveStore(s => s.activePage);\n  useEffect(() => {\n    const isAllFilesRoute = pathname.includes('/all');\n    if (isAllFilesRoute && hash) {\n      driveState().setActivePage(makeAllFilesPage({ hash }));\n    } else {\n      driveState().setActivePage(DRIVE_PAGES.find(p => p.path === pathname) || makePartialFolderPage(hash));\n    }\n  }, [pathname, hash]);\n  const urlsContextValue = useMemo(() => {\n    return {\n      workspaceId\n    };\n  }, [workspaceId]);\n  useEffect(() => {\n    return () => {\n      driveState().reset();\n    };\n  }, []);\n  return <Fragment>\n      {activePage?.label && <StaticPageTitle>\n          <Trans message={typeof activePage.label === 'string' ? activePage.label : activePage.label.message} />\n        </StaticPageTitle>}\n      <FileUploadProvider options={uploadStoreOptions}>\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\n          <DashboardLayout name=\"drive\" onDragOver={e => {\n          e.preventDefault();\n          e.stopPropagation();\n          e.dataTransfer.dropEffect = 'none';\n        }} onDrop={e => {\n          // prevent files from desktop from blowing away the document\n          e.preventDefault();\n        }}>\n            <Navbar />\n            <DashboardSidenav position=\"left\" size=\"md\">\n              <Sidebar />\n            </DashboardSidenav>\n            <DriveContentHeader />\n            <DashboardContent>\n              <FileView />\n            </DashboardContent>\n            <UploadQueue />\n            <DriveDialogsContainer />\n            <DashboardSidenav position=\"right\" size=\"lg\">\n              <DetailsSidebar />\n            </DashboardSidenav>\n          </DashboardLayout>\n        </FileEntryUrlsContext.Provider>\n        <EntryDragPreview />\n      </FileUploadProvider>\n    </Fragment>;\n}\nfunction Navbar() {\n  const {\n    isMobileMode\n  } = useContext(DashboardLayoutContext);\n  const activePage = useDriveStore(s => s.activePage);\n  const children = isMobileMode ? null : <NavbarSearch />;\n  const searchButton = <IconButton elementType={Link} to={SearchPage.path}>\n      <SearchIcon />\n    </IconButton>;\n  const mobileRightChildren = <Fragment>\n      {activePage !== SearchPage && searchButton}\n      <CreateNewButton isCompact />\n    </Fragment>;\n  return <Fragment>\n      <DashboardNavbar rightChildren={isMobileMode && mobileRightChildren} menuPosition=\"drive-navbar\">\n        {children}\n      </DashboardNavbar>\n      {isMobileMode && <FloatingActionList />}\n    </Fragment>;\n}\nfunction FloatingActionList() {\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\n  if (!entriesSelected) return null;\n  return <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\n      <IconButton onClick={() => {\n      driveState().selectEntries([]);\n    }}>\n        <CloseIcon />\n      </IconButton>\n      <Trans message=\":count selected\" values={{\n      count: entriesSelected\n    }} />\n      <EntryActionList className=\"ml-auto\" />\n    </div>;\n}","import { create } from 'zustand';\nimport { immer } from 'zustand/middleware/immer';\nimport { getFromLocalStorage, setInLocalStorage } from '@ui/utils/hooks/local-storage';\nexport const useLinkPageStore = create()(immer(set => ({\n  password: null,\n  viewMode: getFromLocalStorage('drive.viewMode'),\n  activeSort: {\n    orderBy: 'updated_at',\n    orderDir: 'desc'\n  },\n  setPassword: value => {\n    set(state => {\n      state.password = value;\n    });\n  },\n  isPasswordProtected: false,\n  setIsPasswordProtected: value => {\n    set(state => {\n      state.isPasswordProtected = value;\n    });\n  },\n  setViewMode: mode => {\n    set(state => {\n      state.viewMode = mode;\n      setInLocalStorage('drive.viewMode', mode);\n    });\n  },\n  setActiveSort: value => {\n    set(state => {\n      state.activeSort = value;\n    });\n  }\n})));\nexport function linkPageState() {\n  return useLinkPageStore.getState();\n}","import { keepPreviousData, useInfiniteQuery } from '@tanstack/react-query';\nimport { useParams } from 'react-router';\nimport { DriveQueryKeys } from '../../drive-query-keys';\nimport { linkPageState, useLinkPageStore } from '../shareable-link-page/link-page-store';\nimport { apiClient } from '@common/http/query-client';\nimport { getBootstrapData } from '@ui/bootstrap-data/bootstrap-data-store';\nexport function useShareableLinkPage() {\n  const {\n    hash\n  } = useParams();\n  const {\n    orderBy,\n    orderDir\n  } = useLinkPageStore(s => s.activeSort);\n  const order = `${orderBy}:${orderDir}`;\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n  const query = useInfiniteQuery({\n    queryKey: DriveQueryKeys.fetchShareableLink({\n      hash,\n      sort: order\n    }),\n    queryFn: async ({\n      pageParam = 1\n    }) => {\n      const response = await fetchLinkByHash({\n        hash: hash,\n        page: pageParam,\n        order,\n        password\n      });\n      if (response.passwordInvalid) {\n        linkPageState().setIsPasswordProtected(true);\n      }\n      return response;\n    },\n    initialData: () => {\n      const data = getBootstrapData().loaders?.shareableLinkPage;\n      if (data && data.link?.hash === hash) {\n        if (data.passwordInvalid) {\n          linkPageState().setIsPasswordProtected(true);\n        }\n        return {\n          pageParams: [undefined, 1],\n          pages: [data]\n        };\n      }\n    },\n    initialPageParam: 1,\n    getNextPageParam: lastResponse => {\n      if (!lastResponse.folderChildren) return undefined;\n      const currentPage = lastResponse.folderChildren.current_page;\n      const lastPage = lastResponse.folderChildren.last_page;\n      if (currentPage >= lastPage) {\n        return undefined;\n      }\n      return currentPage + 1;\n    },\n    // disable query if link is password protected and correct\n    // password was not entered yet, to prevent unnecessary requests\n    enabled: !!hash && !isPasswordProtected || password != null,\n    placeholderData: keepPreviousData\n  });\n  return {\n    ...query,\n    link: query.data?.pages[0].link,\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data)\n  };\n}\nfunction fetchLinkByHash({\n  hash,\n  page = 1,\n  order,\n  password\n}) {\n  return apiClient.get(`shareable-links/${hash}`, {\n    params: {\n      loader: 'shareableLinkPage',\n      page,\n      order,\n      password\n    }\n  }).then(response => response.data);\n}","import { useMutation } from '@tanstack/react-query';\nimport { linkPageState } from '../link-page-store';\nimport { apiClient } from '@common/http/query-client';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nimport { message } from '@ui/i18n/message';\nfunction checkLinkPassword({\n  password,\n  linkHash\n}) {\n  return apiClient.post(`shareable-links/${linkHash}/check-password`, {\n    password\n  }).then(r => r.data);\n}\nexport function useCheckLinkPassword() {\n  return useMutation({\n    mutationFn: props => checkLinkPassword(props),\n    onSuccess: (response, props) => {\n      if (response.matches) {\n        linkPageState().setPassword(props.password);\n      }\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { useMutation } from '@tanstack/react-query';\nimport { toast } from '@ui/toast/toast';\nimport { useLinkPageStore } from '../link-page-store';\nimport { apiClient, queryClient } from '@common/http/query-client';\nimport { DriveQueryKeys } from '../../../drive-query-keys';\nimport { message } from '@ui/i18n/message';\nimport { showHttpErrorToast } from '@common/http/show-http-error-toast';\nfunction importIntoOwnDrive({\n  linkId,\n  password\n}) {\n  return apiClient.post(`shareable-links/${linkId}/import`, {\n    password\n  }).then(r => r.data);\n}\nexport function useImportIntoOwnDrive() {\n  const password = useLinkPageStore(s => s.password);\n  return useMutation({\n    mutationFn: props => importIntoOwnDrive({\n      ...props,\n      password\n    }),\n    onSuccess: async () => {\n      await queryClient.invalidateQueries({\n        queryKey: DriveQueryKeys.fetchShareableLink()\n      });\n      toast(message('Item imported into your drive'));\n    },\n    onError: err => showHttpErrorToast(err, message('Could not create link'))\n  });\n}","import { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { useAuth } from '@common/auth/use-auth';\nimport { useFileEntryUrls } from '@common/uploads/file-entry-urls';\nimport { useImportIntoOwnDrive } from './queries/import-into-own-drive';\nimport { Button } from '@ui/buttons/button';\nimport { FileDownloadIcon } from '@ui/icons/material/FileDownload';\nimport { Trans } from '@ui/i18n/trans';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { KeyboardArrowDownIcon } from '@ui/icons/material/KeyboardArrowDown';\nimport { ImportExportIcon } from '@ui/icons/material/ImportExport';\nimport React, { Fragment } from 'react';\nimport { Tooltip } from '@ui/tooltip/tooltip';\nimport { Menu, MenuItem, MenuTrigger } from '@ui/menu/menu-trigger';\nimport { downloadFileFromUrl } from '@ui/utils/files/download-file-from-url';\nexport function ShareableLinkPageActionButtons() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const {\n    user,\n    isLoggedIn\n  } = useAuth();\n  const {\n    downloadUrl\n  } = useFileEntryUrls(link?.entry);\n  const importIntoOwnDrive = useImportIntoOwnDrive();\n  const alreadyImported = link?.entry?.users.find(u => u.id === user?.id);\n  if (!link?.entry) return null;\n  return <div>\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\n      {!alreadyImported && isLoggedIn && link.allow_edit && <MenuTrigger onItemSelected={key => {\n      if (key === 'import') {\n        importIntoOwnDrive.mutate({\n          linkId: link.id\n        });\n      } else if (key === 'download') {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }\n    }}>\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n          <Menu>\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\n              <Trans message=\"Download\" />\n            </MenuItem>\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\n              <Trans message=\"Save a copy to your own drive\" />\n            </MenuItem>\n          </Menu>\n        </MenuTrigger>}\n    </div>;\n}\nfunction DownloadButton({\n  downloadUrl\n}) {\n  return <Fragment>\n      <Tooltip label={<Trans message=\"Download\" />}>\n        <IconButton className=\"md:hidden\" onClick={() => {\n        if (downloadUrl) {\n          downloadFileFromUrl(downloadUrl);\n        }\n      }}>\n          <FileDownloadIcon />\n        </IconButton>\n      </Tooltip>\n      <Button className=\"max-md:hidden\" size=\"sm\" variant=\"flat\" color=\"chip\" startIcon={<FileDownloadIcon />} onClick={() => {\n      if (downloadUrl) {\n        downloadFileFromUrl(downloadUrl);\n      }\n    }}>\n        <Trans message=\"Download\" />\n      </Button>\n    </Fragment>;\n}","import React from 'react';\nimport { Navbar } from '@common/ui/navigation/navbar/navbar';\nimport { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { ShareableLinkPageActionButtons } from './shareable-link-page-action-buttons';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nimport { FileTypeIcon } from '@common/uploads/components/file-type-icon/file-type-icon';\nexport function ShareableLinkNavbar() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const isMobile = useIsMobileMediaQuery();\n  return <Navbar size=\"md\" color=\"bg\" className=\"flex-shrink-0\" rightChildren={link?.entry && <ShareableLinkPageActionButtons />} menuPosition=\"shareable-link-page\" hideLogo={isMobile}>\n      {link?.entry && link.entry.type !== 'folder' && <div className=\"fex-auto flex min-w-0 items-center gap-10\">\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\n            {link.entry.name}\n          </div>\n        </div>}\n    </Navbar>;\n}","import { useState } from 'react';\nimport { TextField } from '@ui/forms/input-field/text-field/text-field';\nimport { Button } from '@ui/buttons/button';\nimport { useCheckLinkPassword } from './queries/check-link-password';\nimport { Trans } from '@ui/i18n/trans';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { ShareableLinkNavbar } from './shareable-link-navbar';\nimport { useParams } from 'react-router';\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function PasswordPage() {\n  const {\n    trans\n  } = useTrans();\n  const {\n    hash\n  } = useParams();\n  const fieldLabel = trans({\n    message: 'Password'\n  });\n  const [password, setPassword] = useState('');\n  const checkPassword = useCheckLinkPassword();\n  const linkHash = hash ? hash.split(':')[0] : null;\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\n  return <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\n          <div className=\"h-132 w-[165px]\">\n            <SvgImage src={secureFilesSvg} />\n          </div>\n          <form onSubmit={e => {\n          e.preventDefault();\n          checkPassword.mutate({\n            linkHash: linkHash,\n            password\n          });\n        }}>\n            <span className=\"text-sm\">\n              <Trans message=\"The link you are trying to access is password protected.\" />\n            </span>\n            <TextField autoFocus placeholder={fieldLabel} aria-label={fieldLabel} className=\"mb-20 mt-10\" type=\"password\" value={password} required errorMessage={passwordIsInvalid && <Trans message=\"Password is not valid\" />} onChange={e => {\n            setPassword(e.target.value);\n          }} />\n            <div className=\"text-right\">\n              <Button variant=\"flat\" color=\"primary\" type=\"submit\" className=\"w-full md:w-auto\" disabled={checkPassword.isPending}>\n                <Trans message=\"Enter\" />\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>;\n}","import { BaseFileGridItem } from '../../../file-view/file-grid/base-file-grid-item';\nimport React from 'react';\nexport function FolderPreviewFileGrid({\n  entries,\n  onEntrySelected\n}) {\n  return <div className=\"file-grid\">\n      {entries.map((entry, index) => <BaseFileGridItem tabIndex={-1} className=\"hover:shadow-md cursor-pointer bg\" entry={entry} key={entry.id} onContextMenu={e => {\n      e.preventDefault();\n    }} onKeyDown={e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onEntrySelected(entry, index);\n      }\n    }} onClick={() => {\n      onEntrySelected(entry, index);\n    }} />)}\n    </div>;\n}","import React from 'react';\nimport { Table } from '@common/ui/tables/table';\nimport { linkPageState, useLinkPageStore } from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport { fileTableColumns } from '@app/drive/file-view/file-table/file-table-columns';\nimport { useIsMobileMediaQuery } from '@ui/utils/hooks/is-mobile-media-query';\nconst mobileColumns = fileTableColumns.filter(config => config.key !== 'updated_at');\nexport function FolderPreviewFileTable({\n  entries,\n  onEntrySelected\n}) {\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\n  const isMobile = useIsMobileMediaQuery();\n  return <Table columns={isMobile ? mobileColumns : fileTableColumns} data={entries} sortDescriptor={sortDescriptor} onSortChange={value => {\n    linkPageState().setActiveSort(value);\n  }} onAction={(item, index) => {\n    onEntrySelected(item, index);\n  }} enableSelection={false} />;\n}","import { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { useNavigate } from 'react-router';\nfunction buildFolderHash(link, folderHash) {\n  let hash = link.hash;\n  if (folderHash && link.entry?.hash !== folderHash) {\n    hash = `${hash}:${folderHash}`;\n  }\n  return hash;\n}\nexport function useNavigateToSubfolder() {\n  const {\n    link\n  } = useShareableLinkPage();\n  const navigate = useNavigate();\n  return hash => {\n    if (!link) return;\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\n  };\n}","import { AnimatePresence, m } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { DialogTrigger } from '@ui/overlays/dialog/dialog-trigger';\nimport clsx from 'clsx';\nimport { FolderPreviewFileGrid } from './folder-preview-file-grid';\nimport { useLinkPageStore } from '../link-page-store';\nimport { FolderPreviewFileTable } from './folder-preview-file-table';\nimport { useNavigateToSubfolder } from './use-navigate-to-subfolder';\nimport { useLocation } from 'react-router';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { opacityAnimation } from '@ui/animation/opacity-animation';\nimport { FilePreviewDialog } from '@common/uploads/components/file-preview/file-preview-dialog';\nexport function FolderPreviewFileView({\n  className\n}) {\n  const {\n    pathname\n  } = useLocation();\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const [activePreviewIndex, setActivePreviewIndex] = useState();\n  const viewMode = useLinkPageStore(s => s.viewMode);\n  const sentinelRef = useRef(null);\n  const {\n    link,\n    entries,\n    isFetchingNextPage,\n    hasNextPage,\n    fetchNextPage,\n    isPlaceholderData\n  } = useShareableLinkPage();\n\n  // close preview modal on back/forward navigation\n  useEffect(() => {\n    setActivePreviewIndex(undefined);\n  }, [pathname]);\n  useEffect(() => {\n    const sentinelEl = sentinelRef.current;\n    if (!sentinelEl) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && hasNextPage) {\n        fetchNextPage();\n      }\n    });\n    observer.observe(sentinelEl);\n    return () => {\n      observer.unobserve(sentinelEl);\n    };\n  }, [hasNextPage, fetchNextPage]);\n  if (!link || isPlaceholderData) {\n    return <div className={clsx('flex justify-center', className)}>\n        <ProgressCircle isIndeterminate />\n      </div>;\n  }\n  const handlePreview = (entry, index) => {\n    if (entry.type === 'folder') {\n      navigateToSubfolder(entry.hash);\n    } else {\n      setActivePreviewIndex(index);\n    }\n  };\n  const folderEntries = entries || [];\n  return <>\n      <div className={clsx('file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24', className)}>\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\n        {viewMode === 'grid' ? <FolderPreviewFileGrid entries={folderEntries} onEntrySelected={handlePreview} /> : <FolderPreviewFileTable entries={folderEntries} onEntrySelected={handlePreview} />}\n        <span ref={sentinelRef} aria-hidden />\n        <AnimatePresence>\n          {isFetchingNextPage && <m.div className=\"mt-24 flex w-full justify-center\" {...opacityAnimation}>\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\n            </m.div>}\n        </AnimatePresence>\n      </div>\n      <DialogTrigger type=\"modal\" isOpen={activePreviewIndex != undefined} onClose={() => setActivePreviewIndex(undefined)}>\n        <FilePreviewDialog entries={folderEntries} defaultActiveIndex={activePreviewIndex} allowDownload={link.allow_download} />\n      </DialogTrigger>\n    </>;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { useFolderPath } from '../../../files/queries/use-folder-path';\nimport { Breadcrumb } from '@ui/breadcrumbs/breadcrumb';\nimport { useLinkPageStore } from '../link-page-store';\nimport { BreadcrumbItem } from '@ui/breadcrumbs/breadcrumb-item';\nimport { useNavigateToSubfolder } from './use-navigate-to-subfolder';\nexport function FolderPreviewBreadcrumb({\n  className,\n  folder,\n  link\n}) {\n  const navigateToSubfolder = useNavigateToSubfolder();\n  const password = useLinkPageStore(s => s.password);\n  const query = useFolderPath({\n    hash: folder?.hash,\n    params: {\n      shareable_link: link.id,\n      password\n    }\n  });\n  let content;\n  if (query.isLoading) {\n    content = null;\n  } else {\n    const items = [];\n    if (query.data) {\n      query.data.path.forEach(parent => {\n        items.push({\n          folder: parent,\n          label: <>{parent.name}</>\n        });\n      });\n    }\n    content = <Breadcrumb size=\"lg\" isNavigation>\n        {items.map(item => {\n        return <BreadcrumbItem onSelected={() => {\n          navigateToSubfolder(item.folder.hash);\n        }} key={item.folder.hash}>\n              {item.label}\n            </BreadcrumbItem>;\n      })}\n      </Breadcrumb>;\n  }\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\n}","import React from 'react';\nimport { FolderPreviewBreadcrumb } from './folder-preview-breadcrumb';\nimport { EntriesSortButton } from '../../../layout/sorting/entries-sort-button';\nimport { linkPageState, useLinkPageStore } from '../link-page-store';\nimport { IconButton } from '@ui/buttons/icon-button';\nimport { GridViewIcon } from '@ui/icons/material/GridView';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nexport function FolderPreviewHeader() {\n  const activeSort = useLinkPageStore(s => s.activeSort);\n  const {\n    link,\n    isFetching\n  } = useShareableLinkPage();\n  const hasEntry = link && link.entry;\n  return <div className=\"flex flex-col justify-between gap-14 p-14 md:h-90 md:flex-row md:items-center md:p-24\">\n      {hasEntry && <FolderPreviewBreadcrumb link={link} folder={link.entry} className=\"flex-auto\" />}\n      {hasEntry && <div className=\"flex items-center justify-between text-muted md:justify-start\">\n          <EntriesSortButton isDisabled={isFetching} descriptor={activeSort} onChange={value => {\n        linkPageState().setActiveSort(value);\n      }} />\n          <div className=\"ml-10 md:border-l md:pl-10\">\n            <IconButton onClick={() => {\n          linkPageState().setViewMode(linkPageState().viewMode === 'grid' ? 'list' : 'grid');\n        }}>\n              <GridViewIcon />\n            </IconButton>\n          </div>\n        </div>}\n    </div>;\n}","import React from 'react';\nimport { useShareableLinkPage } from '../../queries/use-shareable-link-page';\nimport { FolderPreviewFileView } from './folder-preview-file-view';\nimport { Trans } from '@ui/i18n/trans';\nimport { FileUploadProvider } from '@common/uploads/uploader/file-upload-provider';\nimport { ShareableLinkPageActionButtons } from '../shareable-link-page-action-buttons';\nimport { FolderPreviewHeader } from './folder-preview-header';\nimport shareSvg from './share.svg';\nimport clsx from 'clsx';\nimport { DashboardLayout } from '@common/ui/dashboard-layout/dashboard-layout';\nimport { DashboardNavbar } from '@common/ui/dashboard-layout/dashboard-navbar';\nimport { DashboardContentHeader } from '@common/ui/dashboard-layout/dashboard-content-header';\nimport { DashboardContent } from '@common/ui/dashboard-layout/dashboard-content';\nimport { IllustratedMessage } from '@ui/images/illustrated-message';\nimport { SvgImage } from '@ui/images/svg-image';\nexport function FolderPreview() {\n  const {\n    entries,\n    isFetched\n  } = useShareableLinkPage();\n  const showEmptyMessage = isFetched && !entries?.length;\n  return <DashboardLayout name=\"folder-preview\">\n      <DashboardNavbar hideToggleButton rightChildren={<ShareableLinkPageActionButtons />} color=\"bg\" />\n      <DashboardContentHeader>\n        <FolderPreviewHeader />\n      </DashboardContentHeader>\n      <FileUploadProvider>\n        <DashboardContent>\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\n        </DashboardContent>\n      </FileUploadProvider>\n    </DashboardLayout>;\n}\nfunction EmptyMessage({\n  className\n}) {\n  return <IllustratedMessage className={clsx(className, 'mt-80')} image={<SvgImage src={shareSvg} />} title={<Trans message=\"Folder is empty\" />} description={<Trans message=\"No files have been uploaded to this folder yet\" />} />;\n}","import React from 'react';\nimport { useShareableLinkPage } from '../queries/use-shareable-link-page';\nimport { ShareableLinkNavbar } from './shareable-link-navbar';\nimport { AdHost } from '@common/admin/ads/ad-host';\nimport { FilePreviewContainer } from '@common/uploads/components/file-preview/file-preview-container';\nexport function ShareableLinkPageFilePreview() {\n  const {\n    link\n  } = useShareableLinkPage();\n  if (!link?.entry) return null;\n  return <div className=\"flex h-screen flex-col bg-alt\">\n      <ShareableLinkNavbar />\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\n      <FilePreviewContainer entries={[link.entry]} showHeader={false} allowDownload={link.allow_download} />\n    </div>;\n}","import React from 'react';\nimport { useShareableLinkPage } from '@app/drive/shareable-link/queries/use-shareable-link-page';\nimport { useLinkPageStore } from '@app/drive/shareable-link/shareable-link-page/link-page-store';\nimport { useTrans } from '@ui/i18n/use-trans';\nimport { ProgressCircle } from '@ui/progress/progress-circle';\nimport { PasswordPage } from '@app/drive/shareable-link/shareable-link-page/password-page';\nimport { FolderPreview } from '@app/drive/shareable-link/shareable-link-page/folder-preview/folder-preview';\nimport { ShareableLinkPageFilePreview } from './shareable-link-page-file-preview';\nimport { NotFoundPage } from '@common/ui/not-found-page/not-found-page';\nimport { FileEntryUrlsContext } from '@common/uploads/file-entry-urls';\nimport { ActiveWorkspaceProvider } from '@common/workspace/active-workspace-id-context';\nimport { GuestDownloadView } from './guest-download-view';\nimport { useAuth } from '@common/auth/use-auth';\nexport function ShareableLinkPage() {\n  const {\n    status,\n    link,\n    entries\n  } = useShareableLinkPage();\n  const {\n    user,\n    isLoggedIn\n  } = useAuth();\n  const isGuest = !isLoggedIn;\n  const totalSize = entries?.reduce((sum, entry) => sum + (entry.file_size || 0), 0) || 0;\n  const {\n    trans\n  } = useTrans();\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\n  const password = useLinkPageStore(s => s.password);\n  let content;\n  if (status === 'pending') {\n    content = <div className=\"flex h-screen flex-auto items-center justify-center\">\n        <ProgressCircle aria-label={trans({\n        message: 'Loading link'\n      })} isIndeterminate />\n      </div>;\n  } else if (!link && !isPasswordProtected) {\n    return <NotFoundPage />;\n  } else if (isPasswordProtected && !password) {\n    content = <PasswordPage />;\n  } else if (link?.entry?.type === 'folder') {\n    content = <FolderPreview />;\n  } else if (!isGuest) {\n    content = <ShareableLinkPageFilePreview />;\n  } else {\n    content = <GuestDownloadView files={entries} totalSize={totalSize} expiresAt={link?.expires_at} />;\n  }\n  return <ActiveWorkspaceProvider>\n      <FileEntryUrlsContext.Provider value={{\n      shareable_link: link?.id,\n      password\n    }}>\n        {content}\n      </FileEntryUrlsContext.Provider>\n    </ActiveWorkspaceProvider>;\n}"],"names":["Meter","props","jsx","ProgressBarBase","StorageMeter","isLoading","data","useStorageSummary","label","clsx","Trans","jsxs","StorageIcon","useCreateWorkspace","form","useMutation","createWorkspace","toast","message","queryClient","WorkspaceQueryKeys","r","onFormQueryError","apiClient","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","response","FormTextField","DialogFooter","Button","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","useQuery","InviteMembers","other","useInviteMembers","err","showHttpErrorToast","ResendInvite","inviteId","useResendInvite","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","user","useAuth","PersonalWorkspace","LeaveWorkspaceConfirmation","onConfirm","ConfirmationDialog","matcher","isEmail","string","WorkspaceMembersDialog","workspace","ProgressCircle","Manager","can","usePermissions","members","shouldHideOtherMembers","InviteChipField","GroupIcon","AnimatePresence","MemberListItem","m","Avatar","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","_a","mb","permission","p","selectedRole","setSelectedRole","useState","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","Fragment","RemoveMemberButton","trans","useTrans","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","useEffect","ChipField","invalid","c","type","DialogTrigger","isConfirmed","IconButton","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","value","onChange","size","className","isDisabled","role","MenuTrigger","newValue","ArrowDropDownIcon","Menu","MenuItem","ResendInviteDialogTrigger","resendInvite","updateWorkspace","id","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","payload","PolicyFailMessage","resourceName","color","reason","MessageText","SectionHelper","billing","useSettings","upgradeMsgValues","Link","LinkStyle","text","WorkspaceSelector","trigger","placement","workspaces","isFetched","isFetching","useUserWorkspaces","activeWorkspace","useActiveWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","DefaultTrigger","WorkspaceItem","CreateWorkspaceButton","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","e","openDialog","AddIcon","forwardRef","ref","ButtonBase","UnfoldMoreIcon","isActive","CheckIcon","ManageButton","LeaveWorkspaceDialog","DeleteWorkspaceConfirmation","KeyboardArrowDownIcon","PersonAddIcon","EditIcon","DeleteIcon","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeAllFilesPage","folder","makeFolderPage","makePartialFolderPage","hash","getPathForFolder","rootFolder","getBootstrapData","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","MenuPositions","fetchUserFolders","params","useFolders","DriveQueryKeys","useMoveEntries","moveEntries","invalidateEntryQueries","canMoveEntriesInto","targets","destination","t","target","destinationIsInTarget","destinationPath","part","index","useFolderDropAction","uploadFiles","useDriveUploadQueue","entries","driveState","folderAcceptsDrop","makeFolderTreeDragId","entry","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","Tree","children","expandedKeys","setExpandedKeys","useControlledState","selectedKeys","setSelectedKeys","focusedNode","setFocusedNode","FocusScope","TreeRoot","TreeLabel","icon","domProps","useContext","isExpanded","isSelected","handleExpandIconClick","newExpandedKeys","_","i","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","_b","childNode","createEventHandler","FolderTree","navigate","useNavigate","useDriveStore","s","activePage","tree","useMemo","folders","arrayToTree","keys","entryHash","findHash","FolderTreeItem","useRef","isRootFolder","isDragging","draggableProps","useDraggable","d","droppableProps","mergeProps","BackupIcon","FolderIcon","item","deleteEntries","useDeleteEntries","getLoaderMessage","entryIds","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","FileUploadIcon","openUploadWindow","activeFolder","UploadFileIcon","DriveFolderUploadIcon","CreateNewFolderIcon","Sidebar","isSubscribed","WorkspaceSwitcher","fetchEntries","setActiveFolder","newFolder","currentPage","shallowEqual","usePaginatedEntries","page","sortDescriptor","searchParams","useSearchParams","isDisabledInSearch","query","useInfiniteQuery","pageParam","lastResponse","hasNextPage","getAllEntries","all","cache","current","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","DashboardLayoutContext","alwaysShownFilters","f","SearchFilterList","isMobileMode","inputValue","setInputValue","TextField","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","options","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","state","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","createShareableLink","entryId","useCreateShareableLink","addStarToEntries","useAddStarToEntries","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","showAllFiles","useShowAllFilesAction","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","FolderOpenIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","downloadUrl","useFileEntryUrls","FileDownloadIcon","downloadFileFromUrl","RestoreIcon","useDrivePageActions","useNewFolderAction","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","DeleteForeverIcon","EntryActionMenuTrigger","showIfNoActions","PageMenu","EntriesMenu","actions","BaseMenu","createElement","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","Tooltip","MoreVertIcon","DriveContextMenu","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","isOpen","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","isCollapsedMode","TableContext","useViewItemActionHandler","useCallback","formatFileSize","memoize","bytes","prettyBytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","sizeClassName","FileThumbnail","selectedRows","Checkbox","FileTable","performViewItemAction","Table","BaseFileGridItem","React","footerAdornment","Footer","isMobile","adornment","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","AVAILABLE_SORTS","EntriesSortButton","descriptor","column","direction","sort","key","SortIcon","MenuSection","DriveSortButton","useFolderPath","isEnabled","fetchFolderPath","PageBreadcrumbs","rootItem","useRootItem","content","items","parent","Breadcrumb","BreadcrumbItem","isMenuItem","MixedText","owner","u","InfiniteScrollSentinel","isInitialLoading","fetchNextPage","isFetchingNextPage","loaderMarginTop","style","_variant","loadMoreExtraContent","sentinelRef","loadMoreClickCount","setLoadMoreClickCount","innerVariant","leftViewAfterLoading","sentinelEl","observer","opacityAnimation","DropTargetMask","isVisible","mask","FileView","viewMode","containerProps","boxProps","noContentMessage","IllustratedMessage","SvgImage","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","AdHost","formatSpeed","bytesPerSecond","units","unitIndex","formatETA","seconds","hours","minutes","secs","useUploadAnalytics","fileId","fileUpload","useFileUploadStore","percentage","bytesUploaded","speed","eta","status","UploadQueueItem","memo","file","FileTypeIcon","SizeInfo","FileStatus","analytics","totalBytes","uploadedBytes","statusMessage","retryCount","maxRetries","canRetry","failureMessage","speedFormatted","etaFormatted","abortUpload","retryUpload","errorMessage","isHovered","setIsHovered","abortButton","progressButton","retryButton","RefreshIcon","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploads","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useTaggableTags","getQueryKey","fetchTaggableTags","taggableType","taggableId","notType","invalidateTaggableTagsQuery","taggableIds","useDetachTagFromTaggables","detachTag","useTags","signal","fetchTags","keepPreviousData","resolve","useAttachTagToTaggables","attachTag","ManageTagsDialog","propsAttachedTags","tagType","notTagType","userId","setQuery","isPlaceholderData","queryIsLoading","tags","attachedTagIds","allTags","attachedTags","List","isAttached","ListItem","PushPinIcon","DetailsSidebarTags","ChipList","Chip","DetailsSidebarProperties","GroupsIcon","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","name","parentId","useCreateFolder","NewFolderDialog","EntryPreviewDialog","files","defaultActiveIndex","activeIndex","setActiveIndex","FilePreviewDialog","DriveActions","shareEntry","useShareEntry","axios","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","MemberList","users","UserAvatar","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","useNormalizedModels","Item","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","link","autoFocus","base_url","useActiveDialogEntry","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","useMoveEntriesDialogFolderSearch","encodeBackendFilters","MoveEntriesDialogSearch","onFolderSelected","searchLabel","ComboBox","MoveEntriesDialogBreadcrumbs","selectedFolder","previous","ArrowBackIcon","myFilesSvg","useMoveEntriesDialogFolders","movingSharedFiles","filters","MoveEntriesDialogFolderList","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","dialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DashboardContentHeader","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","DashboardSidenav","mode","overlayPosition","display","overflow","forceClosed","leftSidenavStatus","setLeftSidenavStatus","rightSidenavStatus","isOverlayMode","variants","getAnimateSize","getSizeClassName","DashboardNavbar","hideToggleButton","leftSidenavCanBeCompact","shouldToggleCompactMode","shouldShowToggle","handleToggle","handleCompactModeToggle","newStatus","setInLocalStorage","Navbar","MenuOpenIcon","useBlockBodyOverflow","disable","DashboardLayout","leftSidenav","onLeftSidenavChange","rightSidenav","compactByDefault","initialRightSidenavStatus","onRightSidenavChange","height","gridClassName","blockBodyOverflow","defaultLeftSidenavStatus","stored","getFromLocalStorage","rightSidenavStatusDefault","userSelected","_setRightSidenavStatus","previousIsMobile","usePrevious","shouldShowUnderlay","Underlay","uploadStoreOptions","uploadedFile","getActiveWorkspaceId","DriveLayout","pathname","useLocation","useParams","urlsContextValue","StaticPageTitle","FileUploadProvider","FileEntryUrlsContext","DashboardContent","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","useLinkPageStore","create","immer","set","linkPageState","useShareableLinkPage","orderBy","orderDir","order","isPasswordProtected","password","fetchLinkByHash","lastPage","checkLinkPassword","linkHash","useCheckLinkPassword","importIntoOwnDrive","linkId","useImportIntoOwnDrive","ShareableLinkPageActionButtons","isLoggedIn","alreadyImported","DownloadButton","ImportExportIcon","ShareableLinkNavbar","useIsMobileMediaQuery","PasswordPage","fieldLabel","setPassword","checkPassword","passwordIsInvalid","secureFilesSvg","FolderPreviewFileGrid","onEntrySelected","mobileColumns","config","FolderPreviewFileTable","buildFolderHash","folderHash","useNavigateToSubfolder","FolderPreviewFileView","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","handlePreview","folderEntries","FolderPreviewBreadcrumb","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","showEmptyMessage","EmptyMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","isGuest","totalSize","sum","NotFoundPage","GuestDownloadView","ActiveWorkspaceProvider"],"mappings":"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"}