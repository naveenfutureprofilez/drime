{"version":3,"file":"tab-panels-c451a17f.js","sources":["../../../common/foundation/resources/client/ui/library/tabs/tabs-context.jsx","../../../common/foundation/resources/client/ui/library/tabs/tabs.jsx","../../../common/foundation/resources/client/ui/library/tabs/tab-line.jsx","../../../common/foundation/resources/client/ui/library/tabs/tab-list.jsx","../../../common/foundation/resources/client/ui/library/tabs/tab.jsx","../../../common/foundation/resources/client/ui/library/tabs/tab-panels.jsx"],"sourcesContent":["import React from 'react';\nexport const TabContext = React.createContext(null);","import React, { useId, useMemo, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useControlledState } from '@react-stately/utils';\nimport { TabContext } from '@ui/tabs/tabs-context';\nexport function Tabs(props) {\n  const {\n    size = 'md',\n    children,\n    className,\n    isLazy,\n    overflow = 'overflow-hidden'\n  } = props;\n  const tabsRef = useRef([]);\n  const id = useId();\n  const [selectedTab, setSelectedTab] = useControlledState(props.selectedTab, props.defaultSelectedTab || 0, props.onTabChange);\n  const ContextValue = useMemo(() => {\n    return {\n      selectedTab,\n      setSelectedTab,\n      tabsRef,\n      size,\n      isLazy,\n      id\n    };\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\n  return <TabContext.Provider value={ContextValue}>\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\n    </TabContext.Provider>;\n}","import React, { useContext, useState } from 'react';\nimport { useLayoutEffect } from '@react-aria/utils';\nimport clsx from 'clsx';\nimport { TabContext } from '@ui/tabs/tabs-context';\nexport function TabLine() {\n  const {\n    tabsRef,\n    selectedTab\n  } = useContext(TabContext);\n  const [style, setStyle] = useState({\n    width: undefined,\n    transform: undefined,\n    className: undefined\n  });\n  useLayoutEffect(() => {\n    if (selectedTab != null && tabsRef.current) {\n      const el = tabsRef.current[selectedTab];\n      if (!el) return;\n      setStyle(prevState => {\n        return {\n          width: `${el.offsetWidth}px`,\n          transform: `translateX(${el.offsetLeft}px)`,\n          // disable initial transition for tabline\n          className: prevState.width === undefined ? '' : 'transition-all'\n        };\n      });\n    }\n  }, [setStyle, selectedTab, tabsRef]);\n  return <div className={clsx('absolute bottom-0 left-0 h-2 bg-primary', style.className)} role=\"presentation\" style={{\n    width: style.width,\n    transform: style.transform\n  }} />;\n}","import React, { Children, cloneElement, isValidElement } from 'react';\nimport clsx from 'clsx';\nimport { FocusScope } from '@react-aria/focus';\nimport { TabLine } from '@ui/tabs/tab-line';\nexport function TabList({\n  children,\n  center,\n  expand,\n  className,\n  border = 'border-b'\n}) {\n  const childrenArray = Children.toArray(children);\n  return <FocusScope>\n      <div className={clsx(\n    // hide scrollbar completely on mobile, show compact one on desktop\n    'max-sm:hidden-scrollbar md:compact-scrollbar relative flex max-w-full overflow-auto', border, className)} role=\"tablist\" aria-orientation=\"horizontal\">\n        {childrenArray.map((child, index) => {\n        if (isValidElement(child)) {\n          return cloneElement(child, {\n            index,\n            className: clsx(child.props.className, expand && 'flex-auto', center && index === 0 && 'ml-auto', center && index === childrenArray.length - 1 && 'mr-auto')\n          });\n        }\n        return null;\n      })}\n        <TabLine />\n      </div>\n    </FocusScope>;\n}","import React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { useFocusManager } from '@react-aria/focus';\nimport { TabContext } from '@ui/tabs/tabs-context';\nexport function Tab({\n  index,\n  className,\n  isDisabled,\n  children,\n  padding: paddingProp,\n  elementType = 'button',\n  to,\n  relative,\n  width = 'min-w-min',\n  height\n}) {\n  const {\n    selectedTab,\n    setSelectedTab,\n    tabsRef,\n    size = 'md',\n    id\n  } = useContext(TabContext);\n  const isSelected = index === selectedTab;\n  const focusManager = useFocusManager();\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\n  const mergedClassname = clsx('tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors', 'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer', width, textColor({\n    isDisabled,\n    isSelected\n  }), className, size === 'md' && `${padding} ${height || 'h-48'}`, size === 'sm' && `${padding} ${height || 'h-32'}`, isDisabled && 'pointer-events-none');\n  const onKeyDown = e => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        focusManager?.focusPrevious();\n        break;\n      case 'ArrowRight':\n        focusManager?.focusNext();\n        break;\n      case 'Home':\n        focusManager?.focusFirst();\n        break;\n      case 'End':\n        focusManager?.focusLast();\n        break;\n    }\n  };\n  const tabIndex = isSelected ? 0 : -1;\n  const Element = elementType;\n  return <Element disabled={isDisabled} id={`${id}-${index}-tab`} aria-controls={`${id}-${index}-tabpanel`} type=\"button\" role=\"tab\" aria-selected={isSelected} tabIndex={isDisabled ? undefined : tabIndex} onKeyDown={onKeyDown} onClick={() => {\n    setSelectedTab(index);\n  }} to={to} relative={relative} className={mergedClassname} ref={el => {\n    if (tabsRef.current && el) {\n      tabsRef.current[index] = el;\n    }\n  }}>\n      {children}\n    </Element>;\n}\nfunction textColor({\n  isDisabled,\n  isSelected\n}) {\n  if (isDisabled) {\n    return 'text-disabled cursor-default';\n  }\n  if (isSelected) {\n    return 'text-primary';\n  }\n  return 'text-muted hover:text-main';\n}","import React, { Children, cloneElement, isValidElement, useContext, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useLayoutEffect } from '@react-aria/utils';\nimport { getFocusableTreeWalker } from '@react-aria/focus';\nimport { TabContext } from '@ui/tabs/tabs-context';\nexport function TabPanels({\n  children,\n  className\n}) {\n  const {\n    selectedTab,\n    isLazy\n  } = useContext(TabContext);\n\n  // filter out falsy values, in case of conditional rendering\n  const panelArray = Children.toArray(children).filter(p => !!p);\n  let rendered;\n  if (isLazy) {\n    const el = panelArray[selectedTab];\n    rendered = isValidElement(el) ? cloneElement(panelArray[selectedTab], {\n      index: selectedTab\n    }) : null;\n  } else {\n    rendered = panelArray.map((panel, index) => {\n      if (isValidElement(panel)) {\n        const isSelected = index === selectedTab;\n        return cloneElement(panel, {\n          index,\n          'aria-hidden': !isSelected,\n          className: !isSelected ? clsx(panel.props.className, 'hidden') : panel.props.className\n        });\n      }\n      return null;\n    });\n  }\n  return <div className={className}>{rendered}</div>;\n}\nexport function TabPanel({\n  className,\n  children,\n  index,\n  ...domProps\n}) {\n  const {\n    id\n  } = useContext(TabContext);\n  const [tabIndex, setTabIndex] = useState(0);\n  const ref = useRef(null);\n\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n  useLayoutEffect(() => {\n    if (ref?.current) {\n      const update = () => {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        const walker = getFocusableTreeWalker(ref.current, {\n          tabbable: true\n        });\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n      update();\n\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n      const observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled']\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n  return <div tabIndex={tabIndex} ref={ref} id={`${id}-${index}-tabpanel`} aria-labelledby={`${id}-${index}-tab`} className={clsx(className, 'focus-visible:outline-primary-light')} role=\"tabpanel\" {...domProps}>\n      {children}\n    </div>;\n}"],"names":["TabContext","React","Tabs","props","size","children","className","isLazy","overflow","tabsRef","useRef","id","useId","selectedTab","setSelectedTab","useControlledState","ContextValue","useMemo","jsx","clsx","TabLine","useContext","style","setStyle","useState","useLayoutEffect","el","prevState","TabList","center","expand","border","childrenArray","Children","FocusScope","jsxs","child","index","isValidElement","cloneElement","Tab","isDisabled","paddingProp","elementType","to","relative","width","height","isSelected","focusManager","useFocusManager","padding","mergedClassname","textColor","onKeyDown","e","tabIndex","Element","TabPanels","panelArray","p","rendered","panel","TabPanel","domProps","setTabIndex","ref","update","walker","getFocusableTreeWalker","observer"],"mappings":"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"}